{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack:///./node_modules/applymixins/index.js","webpack:///./node_modules/buffer-compare/index.js","webpack:///./node_modules/event-iterator/lib/dom.js","webpack:///./node_modules/event-iterator/lib/event-iterator.js","webpack:///./node_modules/it-keepalive/index.js","webpack:///./node_modules/it-keepalive/node_modules/get-iterator/index.js","webpack:///./node_modules/minimalistic-assert/index.js","webpack:///./node_modules/mnemonist/default-map.js","webpack:///./node_modules/mnemonist/default-weak-map.js","webpack:///./node_modules/retry/index.js","webpack:///./node_modules/retry/lib/retry.js","webpack:///./node_modules/retry/lib/retry_operation.js","webpack:///webpack/bootstrap","webpack:///./node_modules/tslib/tslib.es6.mjs","webpack:///./node_modules/@ndn/util/lib/event_browser.js","webpack:///./node_modules/typescript-event-target/dist/index.mjs","webpack:///./node_modules/@ndn/util/lib/string_browser.js","webpack:///./node_modules/@ndn/util/lib/buffer_browser.js","webpack:///./node_modules/@ndn/tlv/lib/nni_browser.js","webpack:///./node_modules/@ndn/tlv/lib/decoder_browser.js","webpack:///./node_modules/@ndn/util/lib/mod_browser.js","webpack:///./node_modules/@ndn/tlv/lib/encoder_browser.js","webpack:///./node_modules/@ndn/packet/lib/an_browser.js","webpack:///./node_modules/@ndn/packet/lib/name/component_browser.js","webpack:///./node_modules/@ndn/packet/lib/name/name_browser.js","webpack:///./node_modules/@ndn/util/lib/key-map_browser.js","webpack:///./node_modules/@ndn/packet/lib/name/name-map_browser.js","webpack:///./node_modules/@ndn/tlv/lib/string_browser.js","webpack:///./node_modules/@ndn/tlv/lib/ev-decoder_browser.js","webpack:///./node_modules/@ndn/util/lib/platform_browser.js","webpack:///./node_modules/@ndn/util/lib/crypto_browser.js","webpack:///./node_modules/@ndn/packet/lib/fwhint_browser.js","webpack:///./node_modules/@ndn/packet/lib/impl-public-fields_browser.js","webpack:///./node_modules/@ndn/packet/lib/name/digest-comp_browser.js","webpack:///./node_modules/@ndn/packet/lib/key-locator_browser.js","webpack:///./node_modules/@ndn/tlv/lib/extensible_browser.js","webpack:///./node_modules/@ndn/packet/lib/sig-info_browser.js","webpack:///./node_modules/@ndn/packet/lib/security/signing_browser.js","webpack:///./node_modules/@ndn/packet/lib/interest_browser.js","webpack:///./node_modules/@ndn/packet/lib/data_browser.js","webpack:///./node_modules/@ndn/packet/lib/nack_browser.js","webpack:///./node_modules/@ndn/util/lib/iter_browser.js","webpack:///./node_modules/p-defer/index.js","webpack:///./node_modules/it-pushable/dist/src/fifo.js","webpack:///./node_modules/it-pushable/dist/src/index.js","webpack:///./node_modules/streaming-iterables/dist/index.mjs","webpack:///./node_modules/@ndn/fw/lib/face_browser.js","webpack:///./node_modules/@ndn/fw/lib/fib_browser.js","webpack:///./node_modules/@ndn/packet/lib/name/algo_browser.js","webpack:///./node_modules/hirestime/dist/index.esm.js","webpack:///./node_modules/@ndn/fw/lib/packet_browser.js","webpack:///./node_modules/@ndn/fw/lib/pit_browser.js","webpack:///./node_modules/@ndn/fw/lib/readvertise_browser.js","webpack:///./node_modules/@ndn/fw/lib/forwarder_browser.js","webpack:///./node_modules/@ndn/endpoint/lib/retx_browser.js","webpack:///./node_modules/@ndn/util/lib/timer_browser.js","webpack:///./node_modules/@ndn/endpoint/lib/endpoint_browser.js","webpack:///./node_modules/@ndn/endpoint/lib/consumer_browser.js","webpack:///./node_modules/@ndn/endpoint/lib/producer_browser.js","webpack:///./node_modules/@ndn/packet/lib/name/alt-uri_browser.js","webpack:///./node_modules/@ndn/l3face/lib/transport_browser.js","webpack:///./node_modules/@ndn/lp/lib/an_browser.js","webpack:///./node_modules/@ndn/lp/lib/packet_browser.js","webpack:///./node_modules/@ndn/lp/lib/fragmenter_browser.js","webpack:///./node_modules/@ndn/lp/lib/reassembler_browser.js","webpack:///./node_modules/@ndn/lp/lib/service_browser.js","webpack:///./node_modules/abortable-iterator/dist/src/abort-error.js","webpack:///./node_modules/abortable-iterator/dist/src/index.js","webpack:///./node_modules/get-iterator/dist/src/index.js","webpack:///./node_modules/@ndn/l3face/lib/l3face_browser.js","webpack:///./node_modules/@ndn/ws-transport/lib/ws-transport_browser.js","webpack:///./node_modules/@ndn/ws-transport/lib/ws_browser.js","webpack:///./node_modules/@ndn/l3face/lib/rxtx-iterable_browser.js","webpack:///./src/main.js"],"sourcesContent":["\"use strict\";\nexports.__esModule = true;\nfunction applyMixins(derivedCtor, baseCtors) {\n    baseCtors.forEach(function (baseCtor) {\n        Object.getOwnPropertyNames(baseCtor.prototype).forEach(function (name) {\n            derivedCtor.prototype[name] = baseCtor.prototype[name];\n        });\n    });\n}\nexports[\"default\"] = applyMixins;\n","module.exports = function(a, b) {\n  if (typeof a.compare === 'function') return a.compare(b)\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  var i = 0\n  var len = Math.min(x, y)\n  while (i < len) {\n    if (a[i] !== b[i]) break\n\n    ++i\n  }\n\n  if (i !== len) {\n    x = a[i]\n    y = b[i]\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst event_iterator_1 = require(\"./event-iterator\");\nexports.EventIterator = event_iterator_1.EventIterator;\nfunction subscribe(event, options, evOptions) {\n    return new event_iterator_1.EventIterator(({ push }) => {\n        this.addEventListener(event, push, options);\n        return () => this.removeEventListener(event, push, options);\n    }, evOptions);\n}\nexports.subscribe = subscribe;\nexports.default = event_iterator_1.EventIterator;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass EventQueue {\n    constructor() {\n        this.pullQueue = [];\n        this.pushQueue = [];\n        this.eventHandlers = {};\n        this.isPaused = false;\n        this.isStopped = false;\n    }\n    push(value) {\n        if (this.isStopped)\n            return;\n        const resolution = { value, done: false };\n        if (this.pullQueue.length) {\n            const placeholder = this.pullQueue.shift();\n            if (placeholder)\n                placeholder.resolve(resolution);\n        }\n        else {\n            this.pushQueue.push(Promise.resolve(resolution));\n            if (this.highWaterMark !== undefined &&\n                this.pushQueue.length >= this.highWaterMark &&\n                !this.isPaused) {\n                this.isPaused = true;\n                if (this.eventHandlers.highWater) {\n                    this.eventHandlers.highWater();\n                }\n                else if (console) {\n                    console.warn(`EventIterator queue reached ${this.pushQueue.length} items`);\n                }\n            }\n        }\n    }\n    stop() {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        this.remove();\n        for (const placeholder of this.pullQueue) {\n            placeholder.resolve({ value: undefined, done: true });\n        }\n        this.pullQueue.length = 0;\n    }\n    fail(error) {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        this.remove();\n        if (this.pullQueue.length) {\n            for (const placeholder of this.pullQueue) {\n                placeholder.reject(error);\n            }\n            this.pullQueue.length = 0;\n        }\n        else {\n            const rejection = Promise.reject(error);\n            /* Attach error handler to avoid leaking an unhandled promise rejection. */\n            rejection.catch(() => { });\n            this.pushQueue.push(rejection);\n        }\n    }\n    remove() {\n        Promise.resolve().then(() => {\n            if (this.removeCallback)\n                this.removeCallback();\n        });\n    }\n    [Symbol.asyncIterator]() {\n        return {\n            next: (value) => {\n                const result = this.pushQueue.shift();\n                if (result) {\n                    if (this.lowWaterMark !== undefined &&\n                        this.pushQueue.length <= this.lowWaterMark &&\n                        this.isPaused) {\n                        this.isPaused = false;\n                        if (this.eventHandlers.lowWater) {\n                            this.eventHandlers.lowWater();\n                        }\n                    }\n                    return result;\n                }\n                else if (this.isStopped) {\n                    return Promise.resolve({ value: undefined, done: true });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        this.pullQueue.push({ resolve, reject });\n                    });\n                }\n            },\n            return: () => {\n                this.isStopped = true;\n                this.pushQueue.length = 0;\n                this.remove();\n                return Promise.resolve({ value: undefined, done: true });\n            },\n        };\n    }\n}\nclass EventIterator {\n    constructor(listen, { highWaterMark = 100, lowWaterMark = 1 } = {}) {\n        const queue = new EventQueue();\n        queue.highWaterMark = highWaterMark;\n        queue.lowWaterMark = lowWaterMark;\n        queue.removeCallback =\n            listen({\n                push: value => queue.push(value),\n                stop: () => queue.stop(),\n                fail: error => queue.fail(error),\n                on: (event, fn) => {\n                    queue.eventHandlers[event] = fn;\n                },\n            }) || (() => { });\n        this[Symbol.asyncIterator] = () => queue[Symbol.asyncIterator]();\n        Object.freeze(this);\n    }\n}\nexports.EventIterator = EventIterator;\nexports.default = EventIterator;\n","const getIterator = require('get-iterator')\nconst KEEP_ALIVE = {}\n\nmodule.exports = (getKeepAliveValue, options) => {\n  options = options || {}\n\n  return source => {\n    source = getIterator(source)\n    let sourceNext\n\n    return {\n      [Symbol.asyncIterator] () {\n        return this\n      },\n\n      async next () {\n        while (true) {\n          if (!sourceNext) {\n            sourceNext = source.next()\n          }\n\n          let timer\n          const timeout = new Promise(resolve => {\n            timer = setTimeout(() => resolve({ value: KEEP_ALIVE }), options.timeout || 1000)\n          })\n\n          const { done, value } = await Promise.race([timeout, sourceNext])\n          clearTimeout(timer)\n\n          if (done) return { done }\n\n          if (value === KEEP_ALIVE) {\n            if (!options.shouldKeepAlive || options.shouldKeepAlive()) {\n              return { value: getKeepAliveValue() }\n            }\n            continue\n          }\n\n          sourceNext = null\n          return { value }\n        }\n      },\n\n      return () {\n        if (source.return) return source.return()\n      }\n    }\n  }\n}\n","// If the passed object is an (async) iterable, then get the iterator\n// If it's probably an iterator already (i.e. has next function) return it\n// else throw\nmodule.exports = function getIterator (obj) {\n  if (obj) {\n    if (typeof obj[Symbol.iterator] === 'function') {\n      return obj[Symbol.iterator]()\n    }\n    if (typeof obj[Symbol.asyncIterator] === 'function') {\n      return obj[Symbol.asyncIterator]()\n    }\n    if (typeof obj.next === 'function') {\n      return obj // probably an iterator\n    }\n  }\n  throw new Error('argument is not an iterator or iterable')\n}\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","/**\n * Mnemonist DefaultMap\n * =====================\n *\n * JavaScript implementation of a default map that will return a constructed\n * value any time one tries to access an inexisting key. It's quite similar\n * to python's defaultdict.\n */\n\n/**\n * DefaultMap.\n *\n * @constructor\n */\nfunction DefaultMap(factory) {\n  if (typeof factory !== 'function')\n    throw new Error('mnemonist/DefaultMap.constructor: expecting a function.');\n\n  this.items = new Map();\n  this.factory = factory;\n  this.size = 0;\n}\n\n/**\n * Method used to clear the structure.\n *\n * @return {undefined}\n */\nDefaultMap.prototype.clear = function() {\n\n  // Properties\n  this.items.clear();\n  this.size = 0;\n};\n\n/**\n * Method used to get the value set for given key. If the key does not exist,\n * the value will be created using the provided factory.\n *\n * @param  {any} key - Target key.\n * @return {any}\n */\nDefaultMap.prototype.get = function(key) {\n  var value = this.items.get(key);\n\n  if (typeof value === 'undefined') {\n    value = this.factory(key, this.size);\n    this.items.set(key, value);\n    this.size++;\n  }\n\n  return value;\n};\n\n/**\n * Method used to get the value set for given key. If the key does not exist,\n * a value won't be created.\n *\n * @param  {any} key - Target key.\n * @return {any}\n */\nDefaultMap.prototype.peek = function(key) {\n  return this.items.get(key);\n};\n\n/**\n * Method used to set a value for given key.\n *\n * @param  {any} key   - Target key.\n * @param  {any} value - Value.\n * @return {DefaultMap}\n */\nDefaultMap.prototype.set = function(key, value) {\n  this.items.set(key, value);\n  this.size = this.items.size;\n\n  return this;\n};\n\n/**\n * Method used to test the existence of a key in the map.\n *\n * @param  {any} key   - Target key.\n * @return {boolean}\n */\nDefaultMap.prototype.has = function(key) {\n  return this.items.has(key);\n};\n\n/**\n * Method used to delete target key.\n *\n * @param  {any} key   - Target key.\n * @return {boolean}\n */\nDefaultMap.prototype.delete = function(key) {\n  var deleted = this.items.delete(key);\n\n  this.size = this.items.size;\n\n  return deleted;\n};\n\n/**\n * Method used to iterate over each of the key/value pairs.\n *\n * @param  {function}  callback - Function to call for each item.\n * @param  {object}    scope    - Optional scope.\n * @return {undefined}\n */\nDefaultMap.prototype.forEach = function(callback, scope) {\n  scope = arguments.length > 1 ? scope : this;\n\n  this.items.forEach(callback, scope);\n};\n\n/**\n * Iterators.\n */\nDefaultMap.prototype.entries = function() {\n  return this.items.entries();\n};\n\nDefaultMap.prototype.keys = function() {\n  return this.items.keys();\n};\n\nDefaultMap.prototype.values = function() {\n  return this.items.values();\n};\n\n/**\n * Attaching the #.entries method to Symbol.iterator if possible.\n */\nif (typeof Symbol !== 'undefined')\n  DefaultMap.prototype[Symbol.iterator] = DefaultMap.prototype.entries;\n\n/**\n * Convenience known methods.\n */\nDefaultMap.prototype.inspect = function() {\n  return this.items;\n};\n\nif (typeof Symbol !== 'undefined')\n  DefaultMap.prototype[Symbol.for('nodejs.util.inspect.custom')] = DefaultMap.prototype.inspect;\n\n/**\n * Typical factories.\n */\nDefaultMap.autoIncrement = function() {\n  var i = 0;\n\n  return function() {\n    return i++;\n  };\n};\n\n/**\n * Exporting.\n */\nmodule.exports = DefaultMap;\n","/**\n * Mnemonist DefaultWeakMap\n * =========================\n *\n * JavaScript implementation of a default weak map that will return a constructed\n * value any time one tries to access an non-existing key. It is similar to\n * DefaultMap but uses ES6 WeakMap that only holds weak reference to keys.\n */\n\n/**\n * DefaultWeakMap.\n *\n * @constructor\n */\nfunction DefaultWeakMap(factory) {\n  if (typeof factory !== 'function')\n    throw new Error('mnemonist/DefaultWeakMap.constructor: expecting a function.');\n\n  this.items = new WeakMap();\n  this.factory = factory;\n}\n\n/**\n * Method used to clear the structure.\n *\n * @return {undefined}\n */\nDefaultWeakMap.prototype.clear = function() {\n\n  // Properties\n  this.items = new WeakMap();\n};\n\n/**\n * Method used to get the value set for given key. If the key does not exist,\n * the value will be created using the provided factory.\n *\n * @param  {any} key - Target key.\n * @return {any}\n */\nDefaultWeakMap.prototype.get = function(key) {\n  var value = this.items.get(key);\n\n  if (typeof value === 'undefined') {\n    value = this.factory(key);\n    this.items.set(key, value);\n  }\n\n  return value;\n};\n\n/**\n * Method used to get the value set for given key. If the key does not exist,\n * a value won't be created.\n *\n * @param  {any} key - Target key.\n * @return {any}\n */\nDefaultWeakMap.prototype.peek = function(key) {\n  return this.items.get(key);\n};\n\n/**\n * Method used to set a value for given key.\n *\n * @param  {any} key   - Target key.\n * @param  {any} value - Value.\n * @return {DefaultMap}\n */\nDefaultWeakMap.prototype.set = function(key, value) {\n  this.items.set(key, value);\n  return this;\n};\n\n/**\n * Method used to test the existence of a key in the map.\n *\n * @param  {any} key   - Target key.\n * @return {boolean}\n */\nDefaultWeakMap.prototype.has = function(key) {\n  return this.items.has(key);\n};\n\n/**\n * Method used to delete target key.\n *\n * @param  {any} key   - Target key.\n * @return {boolean}\n */\nDefaultWeakMap.prototype.delete = function(key) {\n  return this.items.delete(key);\n};\n\n/**\n * Convenience known methods.\n */\nDefaultWeakMap.prototype.inspect = function() {\n  return this.items;\n};\n\nif (typeof Symbol !== 'undefined')\n  DefaultWeakMap.prototype[Symbol.for('nodejs.util.inspect.custom')] = DefaultWeakMap.prototype.inspect;\n\n/**\n * Exporting.\n */\nmodule.exports = DefaultWeakMap;\n","module.exports = require('./lib/retry');","var RetryOperation = require('./retry_operation');\n\nexports.operation = function(options) {\n  var timeouts = exports.timeouts(options);\n  return new RetryOperation(timeouts, {\n      forever: options && (options.forever || options.retries === Infinity),\n      unref: options && options.unref,\n      maxRetryTime: options && options.maxRetryTime\n  });\n};\n\nexports.timeouts = function(options) {\n  if (options instanceof Array) {\n    return [].concat(options);\n  }\n\n  var opts = {\n    retries: 10,\n    factor: 2,\n    minTimeout: 1 * 1000,\n    maxTimeout: Infinity,\n    randomize: false\n  };\n  for (var key in options) {\n    opts[key] = options[key];\n  }\n\n  if (opts.minTimeout > opts.maxTimeout) {\n    throw new Error('minTimeout is greater than maxTimeout');\n  }\n\n  var timeouts = [];\n  for (var i = 0; i < opts.retries; i++) {\n    timeouts.push(this.createTimeout(i, opts));\n  }\n\n  if (options && options.forever && !timeouts.length) {\n    timeouts.push(this.createTimeout(i, opts));\n  }\n\n  // sort the array numerically ascending\n  timeouts.sort(function(a,b) {\n    return a - b;\n  });\n\n  return timeouts;\n};\n\nexports.createTimeout = function(attempt, opts) {\n  var random = (opts.randomize)\n    ? (Math.random() + 1)\n    : 1;\n\n  var timeout = Math.round(random * Math.max(opts.minTimeout, 1) * Math.pow(opts.factor, attempt));\n  timeout = Math.min(timeout, opts.maxTimeout);\n\n  return timeout;\n};\n\nexports.wrap = function(obj, options, methods) {\n  if (options instanceof Array) {\n    methods = options;\n    options = null;\n  }\n\n  if (!methods) {\n    methods = [];\n    for (var key in obj) {\n      if (typeof obj[key] === 'function') {\n        methods.push(key);\n      }\n    }\n  }\n\n  for (var i = 0; i < methods.length; i++) {\n    var method   = methods[i];\n    var original = obj[method];\n\n    obj[method] = function retryWrapper(original) {\n      var op       = exports.operation(options);\n      var args     = Array.prototype.slice.call(arguments, 1);\n      var callback = args.pop();\n\n      args.push(function(err) {\n        if (op.retry(err)) {\n          return;\n        }\n        if (err) {\n          arguments[0] = op.mainError();\n        }\n        callback.apply(this, arguments);\n      });\n\n      op.attempt(function() {\n        original.apply(obj, args);\n      });\n    }.bind(obj, original);\n    obj[method].options = options;\n  }\n};\n","function RetryOperation(timeouts, options) {\n  // Compatibility for the old (timeouts, retryForever) signature\n  if (typeof options === 'boolean') {\n    options = { forever: options };\n  }\n\n  this._originalTimeouts = JSON.parse(JSON.stringify(timeouts));\n  this._timeouts = timeouts;\n  this._options = options || {};\n  this._maxRetryTime = options && options.maxRetryTime || Infinity;\n  this._fn = null;\n  this._errors = [];\n  this._attempts = 1;\n  this._operationTimeout = null;\n  this._operationTimeoutCb = null;\n  this._timeout = null;\n  this._operationStart = null;\n  this._timer = null;\n\n  if (this._options.forever) {\n    this._cachedTimeouts = this._timeouts.slice(0);\n  }\n}\nmodule.exports = RetryOperation;\n\nRetryOperation.prototype.reset = function() {\n  this._attempts = 1;\n  this._timeouts = this._originalTimeouts.slice(0);\n}\n\nRetryOperation.prototype.stop = function() {\n  if (this._timeout) {\n    clearTimeout(this._timeout);\n  }\n  if (this._timer) {\n    clearTimeout(this._timer);\n  }\n\n  this._timeouts       = [];\n  this._cachedTimeouts = null;\n};\n\nRetryOperation.prototype.retry = function(err) {\n  if (this._timeout) {\n    clearTimeout(this._timeout);\n  }\n\n  if (!err) {\n    return false;\n  }\n  var currentTime = new Date().getTime();\n  if (err && currentTime - this._operationStart >= this._maxRetryTime) {\n    this._errors.push(err);\n    this._errors.unshift(new Error('RetryOperation timeout occurred'));\n    return false;\n  }\n\n  this._errors.push(err);\n\n  var timeout = this._timeouts.shift();\n  if (timeout === undefined) {\n    if (this._cachedTimeouts) {\n      // retry forever, only keep last error\n      this._errors.splice(0, this._errors.length - 1);\n      timeout = this._cachedTimeouts.slice(-1);\n    } else {\n      return false;\n    }\n  }\n\n  var self = this;\n  this._timer = setTimeout(function() {\n    self._attempts++;\n\n    if (self._operationTimeoutCb) {\n      self._timeout = setTimeout(function() {\n        self._operationTimeoutCb(self._attempts);\n      }, self._operationTimeout);\n\n      if (self._options.unref) {\n          self._timeout.unref();\n      }\n    }\n\n    self._fn(self._attempts);\n  }, timeout);\n\n  if (this._options.unref) {\n      this._timer.unref();\n  }\n\n  return true;\n};\n\nRetryOperation.prototype.attempt = function(fn, timeoutOps) {\n  this._fn = fn;\n\n  if (timeoutOps) {\n    if (timeoutOps.timeout) {\n      this._operationTimeout = timeoutOps.timeout;\n    }\n    if (timeoutOps.cb) {\n      this._operationTimeoutCb = timeoutOps.cb;\n    }\n  }\n\n  var self = this;\n  if (this._operationTimeoutCb) {\n    this._timeout = setTimeout(function() {\n      self._operationTimeoutCb();\n    }, self._operationTimeout);\n  }\n\n  this._operationStart = new Date().getTime();\n\n  this._fn(this._attempts);\n};\n\nRetryOperation.prototype.try = function(fn) {\n  console.log('Using RetryOperation.try() is deprecated');\n  this.attempt(fn);\n};\n\nRetryOperation.prototype.start = function(fn) {\n  console.log('Using RetryOperation.start() is deprecated');\n  this.attempt(fn);\n};\n\nRetryOperation.prototype.start = RetryOperation.prototype.try;\n\nRetryOperation.prototype.errors = function() {\n  return this._errors;\n};\n\nRetryOperation.prototype.attempts = function() {\n  return this._attempts;\n};\n\nRetryOperation.prototype.mainError = function() {\n  if (this._errors.length === 0) {\n    return null;\n  }\n\n  var counts = {};\n  var mainError = null;\n  var mainErrorCount = 0;\n\n  for (var i = 0; i < this._errors.length; i++) {\n    var error = this._errors[i];\n    var message = error.message;\n    var count = (counts[message] || 0) + 1;\n\n    counts[message] = count;\n\n    if (count >= mainErrorCount) {\n      mainError = error;\n      mainErrorCount = count;\n    }\n  }\n\n  return mainError;\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\") throw new TypeError(\"Object expected.\");\n    var dispose;\n    if (async) {\n        if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n        dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n        if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n        dispose = value[Symbol.dispose];\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  function next() {\n    while (env.stack.length) {\n      var rec = env.stack.pop();\n      try {\n        var result = rec.dispose && rec.dispose.call(rec.value);\n        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n      }\n      catch (e) {\n          fail(e);\n      }\n    }\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n","import { __importDefault, __importStar } from \"tslib\";\nimport _cjsDefaultImport0 from \"minimalistic-assert\"; const assert = __importDefault(_cjsDefaultImport0).default;\nexport { CustomEvent } from \"./platform_browser.js\";\n/**\n * Keep records on whether an event listener has been added.\n * This may allow EventTarget subclass to skip certain event generation code paths.\n * Tracking is imprecise: it does not consider 'once' and 'removeEventListener'.\n * @param target EventTarget to override.\n * @returns map from event type to whether listeners may exist.\n */\nexport function trackEventListener(target) {\n    const maybeHaveEventListener = {};\n    const superAddEventListener = target.addEventListener;\n    assert(superAddEventListener);\n    Object.defineProperty(target, \"addEventListener\", {\n        configurable: true,\n        value(...args) {\n            maybeHaveEventListener[args[0]] = true;\n            superAddEventListener.call(this, ...args);\n        },\n    });\n    return maybeHaveEventListener;\n}\n","var e=class extends EventTarget{dispatchTypedEvent(s,t){return super.dispatchEvent(t)}};export{e as TypedEventTarget};\n","const INT2HEX = {};\nfor (let b = 0; b <= 0xFF; ++b) {\n    INT2HEX[b] = b.toString(16).padStart(2, \"0\").toUpperCase();\n}\nconst HEX2INT = {};\nfor (let b = 0; b <= 0xF; ++b) {\n    const ch = b.toString(16);\n    HEX2INT[ch.toLowerCase()] = b;\n    HEX2INT[ch.toUpperCase()] = b;\n}\n/** Convert byte array to upper-case hexadecimal string. */\nexport function toHex(buf) {\n    let s = \"\";\n    for (const b of buf) {\n        s += INT2HEX[b];\n    }\n    return s;\n}\n(function (toHex) {\n    /** Conversion table from byte (0x00~0xFF) to upper-case hexadecimal. */\n    toHex.TABLE = INT2HEX;\n})(toHex || (toHex = {}));\n/**\n * Convert hexadecimal string to byte array.\n *\n * If the input is not a valid hexadecimal string, result will be incorrect.\n */\nexport function fromHex(s) {\n    const b = new Uint8Array(s.length / 2);\n    for (let i = 0; i < b.length; ++i) {\n        b[i] = (HEX2INT[s[i * 2]] << 4) | HEX2INT[s[i * 2 + 1]];\n    }\n    return b;\n}\n(function (fromHex) {\n    /** Conversion table from hexadecimal digit (case insensitive) to nibble. */\n    fromHex.TABLE = HEX2INT;\n})(fromHex || (fromHex = {}));\nconst textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\n/** Convert string to UTF-8 byte array. */\nexport function toUtf8(s) {\n    return textEncoder.encode(s);\n}\n/** Convert UTF-8 byte array to string. */\nexport function fromUtf8(buf) {\n    return textDecoder.decode(buf);\n}\n","function asArrayBufferView(T, a) {\n    if (a instanceof T) {\n        return a;\n    }\n    if (a instanceof ArrayBuffer) {\n        return new T(a);\n    }\n    return new T(a.buffer, a.byteOffset, a.byteLength);\n}\n/** Convert ArrayBuffer or ArrayBufferView to Uint8Array. */\nexport function asUint8Array(a) {\n    return asArrayBufferView(Uint8Array, a);\n}\n/** Convert ArrayBuffer or ArrayBufferView to DataView. */\nexport function asDataView(a) {\n    return asArrayBufferView(DataView, a);\n}\n","import { asDataView, toHex } from \"@ndn/util\";\nclass Nni1 {\n    n;\n    constructor(n) {\n        this.n = n;\n    }\n    encodeTo(encoder) {\n        encoder.prependRoom(1)[0] = this.n;\n    }\n}\nclass Nni2 {\n    n;\n    constructor(n) {\n        this.n = n;\n    }\n    encodeTo(encoder) {\n        asDataView(encoder.prependRoom(2)).setUint16(0, this.n);\n    }\n}\nclass Nni4 {\n    n;\n    constructor(n) {\n        this.n = n;\n    }\n    encodeTo(encoder) {\n        asDataView(encoder.prependRoom(4)).setUint32(0, this.n);\n    }\n}\nclass Nni8Number {\n    n;\n    constructor(n) {\n        this.n = n;\n    }\n    encodeTo(encoder) {\n        const dv = asDataView(encoder.prependRoom(8));\n        dv.setUint32(0, this.n / 0x100000000);\n        dv.setUint32(4, this.n);\n    }\n}\nclass Nni8Big {\n    n;\n    constructor(n) {\n        this.n = n;\n    }\n    encodeTo(encoder) {\n        asDataView(encoder.prependRoom(8)).setBigUint64(0, this.n);\n    }\n}\nfunction decode32(dv) {\n    switch (dv.byteLength) {\n        case 1: {\n            return dv.getUint8(0);\n        }\n        case 2: {\n            return dv.getUint16(0);\n        }\n        case 4: {\n            return dv.getUint32(0);\n        }\n    }\n    throw new Error(\"incorrect TLV-LENGTH of NNI\");\n}\nconst EncodeNniClass = {\n    1: Nni1,\n    2: Nni2,\n    4: Nni4,\n    8: Nni8Number,\n};\n/** Create Encodable from non-negative integer. */\nexport function NNI(n, { len, unsafe = false, } = {}) {\n    if (len) {\n        if (len === 8 && typeof n === \"bigint\") {\n            return new Nni8Big(n);\n        }\n        return new EncodeNniClass[len](Number(n));\n    }\n    if (typeof n === \"bigint\") {\n        switch (true) {\n            case n < 0x100000000n: {\n                n = Number(n);\n                break;\n            }\n            case n <= 0xffffffffffffffffn: {\n                return new Nni8Big(n);\n            }\n            default: {\n                throw new RangeError(\"NNI is too large\");\n            }\n        }\n    }\n    switch (true) {\n        case n < 0: {\n            throw new RangeError(\"NNI cannot be negative\");\n        }\n        case n < 0x100: {\n            return new Nni1(n);\n        }\n        case n < 0x10000: {\n            return new Nni2(n);\n        }\n        case n < 0x100000000: {\n            return new Nni4(n);\n        }\n        case n <= (unsafe ? 0xFFFFFFFFFFFFFFFF : Number.MAX_SAFE_INTEGER): { // eslint-disable-line @typescript-eslint/no-loss-of-precision\n            return new Nni8Number(n);\n        }\n        default: {\n            throw new RangeError(\"NNI is too large\");\n        }\n    }\n}\n(function (NNI) {\n    /** Determine if len is a valid length of encoded NNI. */\n    function isValidLength(len) {\n        return !!EncodeNniClass[len];\n    }\n    NNI.isValidLength = isValidLength;\n    function decode(value, { len, big = false, unsafe = false, } = {}) {\n        if (len && value.byteLength !== len) {\n            throw new Error(`incorrect TLV-LENGTH of NNI${len}`);\n        }\n        const dv = asDataView(value);\n        if (big) {\n            return dv.byteLength === 8 ? dv.getBigUint64(0) : BigInt(decode32(dv));\n        }\n        if (dv.byteLength === 8) {\n            const n = dv.getUint32(0) * 0x100000000 + dv.getUint32(4);\n            if (!unsafe && !Number.isSafeInteger(n)) {\n                throw new RangeError(`NNI is too large ${toHex(value)}`);\n            }\n            return n;\n        }\n        return decode32(dv);\n    }\n    NNI.decode = decode;\n    function constrain(n, typeName, limit0, limit1) {\n        const [min = 0, max = Number.MAX_SAFE_INTEGER] = typeof limit1 === \"number\" ? [limit0, limit1] : [0, limit0];\n        if (!(n >= min && n <= max)) {\n            throw new RangeError(`${n} is out of ${typeName} valid range`);\n        }\n        return Math.trunc(n);\n    }\n    NNI.constrain = constrain;\n})(NNI || (NNI = {}));\n","import { asDataView, fromUtf8 } from \"@ndn/util\";\nimport { NNI } from \"./nni_browser.js\";\nclass DecodedTlv {\n    type;\n    buf;\n    offsetT;\n    offsetV;\n    offsetE;\n    get length() {\n        return this.offsetE - this.offsetV;\n    }\n    get value() {\n        return this.buf.subarray(this.offsetV, this.offsetE);\n    }\n    get tlv() {\n        return this.buf.subarray(this.offsetT, this.offsetE);\n    }\n    get size() {\n        return this.offsetE - this.offsetT;\n    }\n    get decoder() {\n        return new Decoder(this.tlv);\n    }\n    get vd() {\n        return new Decoder(this.value);\n    }\n    get nni() {\n        return NNI.decode(this.value);\n    }\n    get nniBig() {\n        return NNI.decode(this.value, { big: true });\n    }\n    get text() {\n        return fromUtf8(this.value);\n    }\n    get before() {\n        return this.buf.subarray(0, this.offsetT);\n    }\n    get after() {\n        return this.buf.subarray(this.offsetE);\n    }\n    constructor(type, buf, offsetT, offsetV, offsetE) {\n        this.type = type;\n        this.buf = buf;\n        this.offsetT = offsetT;\n        this.offsetV = offsetV;\n        this.offsetE = offsetE;\n    }\n}\n/** TLV decoder. */\nexport class Decoder {\n    input;\n    /** Determine whether end of input has been reached. */\n    get eof() {\n        return this.offset >= this.input.length;\n    }\n    dv;\n    offset = 0;\n    constructor(input) {\n        this.input = input;\n        this.dv = asDataView(input);\n    }\n    /** Read TLV structure. */\n    read() {\n        const offsetT = this.offset;\n        const type = this.readVarNum();\n        const length = this.readVarNum();\n        const offsetV = this.offset;\n        if (length === undefined || (this.offset += length) > this.input.length) {\n            throw new Error(`TLV at offset ${offsetT} is incomplete`);\n        }\n        // length!==undefined implies type!==undefined\n        return new DecodedTlv(type, this.input, offsetT, offsetV, this.offset);\n    }\n    /** Read a Decodable object. */\n    decode(d) {\n        return d.decodeFrom(this);\n    }\n    readVarNum() {\n        if (this.eof) {\n            return undefined;\n        }\n        switch (this.input[this.offset]) {\n            case 0xFD: {\n                this.offset += 3;\n                if (this.offset > this.input.length) {\n                    return undefined;\n                }\n                return this.dv.getUint16(this.offset - 2);\n            }\n            case 0xFE: {\n                this.offset += 5;\n                if (this.offset > this.input.length) {\n                    return undefined;\n                }\n                return this.dv.getUint32(this.offset - 4);\n            }\n            case 0xFF: {\n                // JavaScript cannot reliably represent 64-bit integers\n                return undefined;\n            }\n            default: {\n                this.offset += 1;\n                return this.input[this.offset - 1];\n            }\n        }\n    }\n}\n","import { __importDefault, __importStar } from \"tslib\";\nimport _cjsDefaultImport0 from \"minimalistic-assert\"; const assert = __importDefault(_cjsDefaultImport0).default;\nexport { assert };\nexport { console, concatBuffers, crypto, delay } from \"./platform_browser.js\";\nexport * from \"./buffer_browser.js\";\nexport * from \"./closers_browser.js\";\nexport * from \"./crypto_browser.js\";\nexport * from \"./event_browser.js\";\nexport * from \"./iter_browser.js\";\nexport * from \"./key-map_browser.js\";\nexport * from \"./string_browser.js\";\nexport * from \"./timer_browser.js\";\n","import { asDataView, assert } from \"@ndn/util\";\nfunction sizeofVarNum(n) {\n    if (n < 0xFD) {\n        return 1;\n    }\n    if (n <= 0xFFFF) {\n        return 3;\n    }\n    if (n <= 0xFFFFFFFF) {\n        return 5;\n    }\n    // 64-bit integers may lose precision in Number type, and it's rarely useful\n    throw new Error(\"VAR-NUMBER is too large\");\n}\nfunction writeVarNum(room, off, n) {\n    if (n < 0xFD) {\n        room[off++] = n;\n    }\n    else if (n <= 0xFFFF) {\n        room[off++] = 0xFD;\n        asDataView(room).setUint16(off, n);\n    }\n    else {\n        room[off++] = 0xFE;\n        asDataView(room).setUint32(off, n);\n    }\n}\n/** TLV encoder that accepts objects in reverse order. */\nexport class Encoder {\n    buf;\n    off;\n    /** Return encoding output size. */\n    get size() {\n        return this.buf.byteLength - this.off;\n    }\n    /** Obtain encoding output. */\n    get output() {\n        return this.slice();\n    }\n    constructor(initSize = 2048) {\n        this.buf = new ArrayBuffer(initSize);\n        this.off = initSize;\n    }\n    /** Obtain part of encoding output. */\n    slice(start = 0, length) {\n        return new Uint8Array(this.buf, this.off + start, length);\n    }\n    /**\n     * Make room to prepend an object.\n     * @param sizeofObject object size.\n     * @returns room to write object.\n     */\n    prependRoom(sizeofObject) {\n        if (this.off < sizeofObject) {\n            this.grow(sizeofObject);\n        }\n        this.off -= sizeofObject;\n        return this.slice(0, sizeofObject);\n    }\n    /** Prepend TLV-TYPE and TLV-LENGTH. */\n    prependTypeLength(tlvType, tlvLength) {\n        const sizeofT = sizeofVarNum(tlvType);\n        const sizeofL = sizeofVarNum(tlvLength);\n        const room = this.prependRoom(sizeofT + sizeofL);\n        writeVarNum(room, 0, tlvType);\n        writeVarNum(room, sizeofT, tlvLength);\n    }\n    /** Prepend TLV-VALUE. */\n    prependValue(...tlvValue) {\n        for (let i = tlvValue.length - 1; i >= 0; --i) {\n            this.encode(tlvValue[i]);\n        }\n    }\n    prependTlv(tlvType, omitEmpty, ...tlvValue) {\n        const hasOmitEmpty = omitEmpty === Encoder.OmitEmpty;\n        if (!hasOmitEmpty) {\n            tlvValue.unshift(omitEmpty);\n        }\n        const sizeBefore = this.size;\n        this.prependValue(...tlvValue);\n        const tlvLength = this.size - sizeBefore;\n        if (tlvLength > 0 || !hasOmitEmpty) {\n            this.prependTypeLength(tlvType, tlvLength);\n        }\n    }\n    /** Prepend an Encodable object. */\n    encode(obj) {\n        if (obj instanceof Uint8Array) {\n            this.prependRoom(obj.byteLength).set(obj);\n        }\n        else if (typeof obj === \"object\" && typeof obj.encodeTo === \"function\") {\n            obj.encodeTo(this);\n        }\n        else if (Array.isArray(obj)) {\n            if (typeof obj[0] === \"number\") {\n                this.prependTlv(...obj);\n            }\n            else {\n                this.prependValue(...obj);\n            }\n        }\n        else {\n            assert(obj === undefined || obj === false, \"obj is not Encodable\");\n        }\n    }\n    grow(sizeofRoom) {\n        const sizeofGrowth = 2048 + sizeofRoom;\n        const buf = new ArrayBuffer(sizeofGrowth + this.size);\n        new Uint8Array(buf, sizeofGrowth).set(this.output);\n        this.buf = buf;\n        this.off = sizeofGrowth;\n    }\n}\n(function (Encoder) {\n    Encoder.OmitEmpty = Symbol(\"OmitEmpty\");\n    /** Encode a single object into Uint8Array. */\n    function encode(obj, initBufSize) {\n        const encoder = new Encoder(initBufSize);\n        encoder.encode(obj);\n        return encoder.output;\n    }\n    Encoder.encode = encode;\n    /** Extract the encoding output of an element while writing to a larger encoder. */\n    function extract(obj, cb) {\n        return {\n            encodeTo(encoder) {\n                const sizeBefore = encoder.size;\n                encoder.encode(obj);\n                cb(encoder.slice(0, encoder.size - sizeBefore));\n            },\n        };\n    }\n    Encoder.extract = extract;\n})(Encoder || (Encoder = {}));\n","export const TT = {\n    Name: 0x07,\n    GenericNameComponent: 0x08,\n    ImplicitSha256DigestComponent: 0x01,\n    ParametersSha256DigestComponent: 0x02,\n    Interest: 0x05,\n    CanBePrefix: 0x21,\n    MustBeFresh: 0x12,\n    ForwardingHint: 0x1E,\n    Nonce: 0x0A,\n    InterestLifetime: 0x0C,\n    HopLimit: 0x22,\n    AppParameters: 0x24,\n    ISigInfo: 0x2C,\n    ISigValue: 0x2E,\n    Data: 0x06,\n    MetaInfo: 0x14,\n    ContentType: 0x18,\n    FreshnessPeriod: 0x19,\n    FinalBlock: 0x1A,\n    Content: 0x15,\n    DSigInfo: 0x16,\n    DSigValue: 0x17,\n    SigType: 0x1B,\n    KeyLocator: 0x1C,\n    KeyDigest: 0x1D,\n    SigNonce: 0x26,\n    SigTime: 0x28,\n    SigSeqNum: 0x2A,\n    Nack: 0x0320,\n    NackReason: 0x0321,\n};\nexport const SigType = {\n    Sha256: 0x00,\n    Sha256WithRsa: 0x01,\n    Sha256WithEcdsa: 0x03,\n    HmacWithSha256: 0x04,\n    Ed25519: 0x05,\n    Null: 0xC8,\n};\nexport const NackReason = {\n    Congestion: 50,\n    Duplicate: 100,\n    NoRoute: 150,\n};\n","import { __importDefault, __importStar } from \"tslib\";\nimport { Decoder, Encoder } from \"@ndn/tlv\";\nimport { fromHex, fromUtf8, toHex, toUtf8 } from \"@ndn/util\";\nimport _cjsDefaultImport0 from \"buffer-compare\"; const bufferCompare = __importDefault(_cjsDefaultImport0).default;\nimport { TT } from \"../an_browser.js\";\nfunction checkType(t) {\n    return Number.isInteger(t) && t >= 0x01 && t <= 0xFFFF;\n}\nfunction assertType(t) {\n    if (!checkType(t)) {\n        throw new Error(`Component TLV-TYPE ${t} out of range`);\n    }\n}\nconst CHAR_ENCODE = {};\nfor (let b = 0x00; b <= 0xFF; ++b) {\n    const s = String.fromCodePoint(b);\n    CHAR_ENCODE[b] = /[\\w.~-]/i.test(s) ? s : `%${toHex.TABLE[b]}`;\n}\nconst CODEPOINT_PERCENT = \"%\".codePointAt(0);\nconst CODEPOINT_PERIOD = \".\".codePointAt(0);\n/**\n * Name component.\n * This type is immutable.\n */\nexport class Component {\n    static decodeFrom(decoder) {\n        const { tlv } = decoder.read();\n        return new Component(tlv);\n    }\n    /** Parse from URI representation, or return existing Component. */\n    static from(input) {\n        if (input instanceof Component) {\n            return input;\n        }\n        let type = TT.GenericNameComponent;\n        let posValue = 0;\n        const posEqual = input.indexOf(\"=\");\n        if (posEqual >= 1) {\n            const iType = Number.parseInt(input, 10);\n            if (checkType(iType)) {\n                type = iType;\n                posValue = posEqual + 1;\n            }\n        }\n        const value = new Uint8Array(input.length - posValue);\n        let length = 0;\n        let hasNonPeriods = false;\n        for (let i = posValue; i < input.length;) {\n            let b = input.codePointAt(i);\n            hasNonPeriods ||= b !== CODEPOINT_PERIOD;\n            if (b === CODEPOINT_PERCENT) {\n                b = (fromHex.TABLE[input[i + 1]] << 4) | fromHex.TABLE[input[i + 2]];\n                i += 3;\n            }\n            else {\n                ++i;\n            }\n            value[length++] = b;\n        }\n        if (!hasNonPeriods && length >= 3) {\n            length -= 3;\n        }\n        return new Component(type, value.subarray(0, length));\n    }\n    /** Whole TLV. */\n    tlv;\n    /** TLV-TYPE. */\n    type;\n    /** TLV-VALUE. */\n    value;\n    /** TLV-LENGTH. */\n    get length() {\n        return this.value.length;\n    }\n    /** TLV-VALUE interpreted as UTF-8 string. */\n    get text() {\n        return fromUtf8(this.value);\n    }\n    constructor(arg1 = TT.GenericNameComponent, value = new Uint8Array()) {\n        if (arg1 instanceof Uint8Array) {\n            this.tlv = arg1;\n            const decoder = new Decoder(arg1);\n            ({ type: this.type, value: this.value } = decoder.read());\n        }\n        else {\n            this.type = arg1;\n            if (typeof value === \"string\") {\n                value = toUtf8(value);\n            }\n            this.tlv = Encoder.encode([this.type, value], 10 + value.length);\n            this.value = this.tlv.subarray(this.tlv.length - value.length);\n        }\n        assertType(this.type);\n    }\n    /** Get URI string. */\n    toString() {\n        let s = `${this.type}=`;\n        let hasNonPeriods = false;\n        for (const b of this.value) {\n            hasNonPeriods ||= b !== CODEPOINT_PERIOD;\n            s += CHAR_ENCODE[b];\n        }\n        if (!hasNonPeriods) {\n            s += \"...\";\n        }\n        return s;\n    }\n    encodeTo(encoder) {\n        encoder.encode(this.tlv);\n    }\n    /** Determine if component follows a naming convention. */\n    is(convention) {\n        return convention.match(this);\n    }\n    /** Convert with naming convention. */\n    as(convention) {\n        if (!convention.match(this)) {\n            throw new Error(\"component does not follow convention\");\n        }\n        return convention.parse(this);\n    }\n    /** Compare this component with other. */\n    compare(other) {\n        other = Component.from(other);\n        return 2 * Math.sign(this.type - other.type || this.length - other.length ||\n            bufferCompare(this.value, other.value));\n    }\n    /** Determine if this component equals other. */\n    equals(other) {\n        return this.compare(other) === Component.CompareResult.EQUAL;\n    }\n}\n(function (Component) {\n    /** Component compare result. */\n    let CompareResult;\n    (function (CompareResult) {\n        /** lhs is less than rhs */\n        CompareResult[CompareResult[\"LT\"] = -2] = \"LT\";\n        /** lhs and rhs are equal */\n        CompareResult[CompareResult[\"EQUAL\"] = 0] = \"EQUAL\";\n        /** lhs is greater than rhs */\n        CompareResult[CompareResult[\"GT\"] = 2] = \"GT\";\n    })(CompareResult = Component.CompareResult || (Component.CompareResult = {}));\n})(Component || (Component = {}));\n","import { Decoder, Encoder } from \"@ndn/tlv\";\nimport { toHex } from \"@ndn/util\";\nimport { TT } from \"../an_browser.js\";\nimport { Component } from \"./component_browser.js\";\n/**\n * Name.\n * This type is immutable.\n */\nexport class Name {\n    static decodeFrom(decoder) {\n        const { value } = decoder.read();\n        return new Name(value);\n    }\n    /** List of name components. */\n    comps;\n    constructor(arg1, parseComponent = Component.from) {\n        switch (true) {\n            case arg1 instanceof Name: {\n                const other = arg1;\n                this.comps = other.comps;\n                this.value_ = other.value_;\n                break;\n            }\n            case typeof arg1 === \"string\": {\n                const uri = arg1;\n                this.comps = uri.replace(/^(?:ndn:)?\\/*/, \"\").split(\"/\")\n                    .filter((comp) => comp !== \"\").map(parseComponent);\n                this.valueEncoderBufSize = uri.length + 4 * this.comps.length;\n                break;\n            }\n            case Array.isArray(arg1): {\n                this.comps = Array.from(arg1, Component.from);\n                break;\n            }\n            case arg1 instanceof Uint8Array: {\n                this.value_ = arg1;\n                const comps = [];\n                const decoder = new Decoder(this.value_);\n                while (!decoder.eof) {\n                    comps.push(decoder.decode(Component));\n                }\n                this.comps = comps;\n                break;\n            }\n            default: { // undefined\n                this.comps = [];\n                this.valueEncoderBufSize = 0;\n                break;\n            }\n        }\n    }\n    valueEncoderBufSize;\n    value_;\n    uri_;\n    hex_;\n    /** Number of name components. */\n    get length() {\n        return this.comps.length;\n    }\n    /** Name TLV-VALUE. */\n    get value() {\n        if (!this.value_) {\n            this.value_ = Encoder.encode(this.comps, this.valueEncoderBufSize ?? 256);\n        }\n        return this.value_;\n    }\n    /** Name TLV-VALUE hexadecimal representation, good for map keys. */\n    get valueHex() {\n        this.hex_ ??= toHex(this.value);\n        return this.hex_;\n    }\n    /** Retrieve i-th component. */\n    get(i) {\n        i = i < 0 ? i + this.length : i;\n        return this.comps[i];\n    }\n    /**\n     * Retrieve i-th component.\n     * @throws i-th component does not exist.\n     */\n    at(i) {\n        const comp = this.get(i);\n        if (!comp) {\n            throw new Error(`component ${i} out of range`);\n        }\n        return comp;\n    }\n    /** Get URI string. */\n    toString() {\n        this.uri_ ??= `/${this.comps.map((comp) => comp.toString()).join(\"/\")}`;\n        return this.uri_;\n    }\n    /** Get sub name [begin, end). */\n    slice(begin, end) {\n        return new Name(this.comps.slice(begin, end));\n    }\n    /** Get prefix of n components. */\n    getPrefix(n) {\n        return this.slice(0, n);\n    }\n    append(...args) {\n        let suffix;\n        if (args.length === 2 &&\n            typeof args[0].create === \"function\") {\n            suffix = [args[0].create(args[1])];\n        }\n        else {\n            suffix = args;\n        }\n        return new Name([...this.comps, ...suffix]);\n    }\n    /** Return a copy of Name with a component replaced. */\n    replaceAt(i, comp) {\n        const comps = [...this.comps];\n        comps.splice(i, 1, comp);\n        return new Name(comps);\n    }\n    /** Compare with other name. */\n    compare(other) {\n        other = Name.from(other);\n        const commonSize = Math.min(this.length, other.length);\n        const cmp = this.comparePrefix(other, commonSize);\n        if (cmp !== Name.CompareResult.EQUAL) {\n            return cmp;\n        }\n        if (this.length > commonSize) {\n            return Name.CompareResult.RPREFIX;\n        }\n        if (other.length > commonSize) {\n            return Name.CompareResult.LPREFIX;\n        }\n        return Name.CompareResult.EQUAL;\n    }\n    /** Determine if this name equals other. */\n    equals(other) {\n        other = Name.from(other);\n        if (this.hex_ !== undefined && other.hex_ !== undefined) {\n            return this.hex_ === other.hex_;\n        }\n        return this.length === other.length && this.comparePrefix(other, this.length) === Name.CompareResult.EQUAL;\n    }\n    /** Determine if this name is a prefix of other. */\n    isPrefixOf(other) {\n        other = Name.from(other);\n        return this.length <= other.length && this.comparePrefix(other, this.length) === Name.CompareResult.EQUAL;\n    }\n    comparePrefix(other, n) {\n        for (let i = 0; i < n; ++i) {\n            const cmp = this.comps[i].compare(other.comps[i]);\n            if (cmp !== Component.CompareResult.EQUAL) {\n                return cmp;\n            }\n        }\n        return Name.CompareResult.EQUAL;\n    }\n    encodeTo(encoder) {\n        if (this.value_) {\n            encoder.prependTlv(TT.Name, this.value_);\n        }\n        else {\n            encoder.prependTlv(TT.Name, ...this.comps);\n        }\n    }\n}\n(function (Name) {\n    function isNameLike(obj) {\n        return obj instanceof Name || typeof obj === \"string\";\n    }\n    Name.isNameLike = isNameLike;\n    function from(input) {\n        return input instanceof Name ? input : new Name(input);\n    }\n    Name.from = from;\n    /** Name compare result. */\n    let CompareResult;\n    (function (CompareResult) {\n        /** lhs is less than, but not a prefix of rhs */\n        CompareResult[CompareResult[\"LT\"] = -2] = \"LT\";\n        /** lhs is a prefix of rhs */\n        CompareResult[CompareResult[\"LPREFIX\"] = -1] = \"LPREFIX\";\n        /** lhs and rhs are equal */\n        CompareResult[CompareResult[\"EQUAL\"] = 0] = \"EQUAL\";\n        /** rhs is a prefix of lhs */\n        CompareResult[CompareResult[\"RPREFIX\"] = 1] = \"RPREFIX\";\n        /** rhs is less than, but not a prefix of lhs */\n        CompareResult[CompareResult[\"GT\"] = 2] = \"GT\";\n    })(CompareResult = Name.CompareResult || (Name.CompareResult = {}));\n})(Name || (Name = {}));\n","/**\n * Map that transforms keys.\n *\n * K: input key type.\n * V: value type.\n * I: indexable key type.\n * L: lookup key type.\n */\nexport class KeyMap {\n    keyOf;\n    /**\n     * Constructor.\n     * @param keyOf function to transform input key to indexable key.\n     */\n    constructor(keyOf) {\n        this.keyOf = keyOf;\n    }\n    m = new Map();\n    get size() { return this.m.size; }\n    has(key) {\n        return this.m.has(this.keyOf(key));\n    }\n    get(key) {\n        return this.m.get(this.keyOf(key))?.[1];\n    }\n    set(key, value) {\n        this.m.set(this.keyOf(key), [key, value]);\n        return this;\n    }\n    delete(key) {\n        return this.m.delete(this.keyOf(key));\n    }\n    [Symbol.iterator]() {\n        return this.m.values();\n    }\n}\n/**\n * MultiMap that transforms keys.\n *\n * K: input key type.\n * V: value type.\n * I: indexable key type.\n * L: lookup key type.\n */\nexport class KeyMultiMap {\n    /**\n     * Constructor.\n     * @param keyOf function to transform input key to indexable key.\n     */\n    constructor(keyOf) {\n        this.m = new KeyMap(keyOf);\n    }\n    m;\n    size_ = 0;\n    /** Number of distinct keys. */\n    get dimension() { return this.m.size; }\n    /** Number of values. */\n    get size() { return this.size_; }\n    /** Count values associated with a key. */\n    count(key) {\n        return this.m.get(key)?.size ?? 0;\n    }\n    /** List values associated with a key. */\n    list(key) {\n        return this.m.get(key) ?? new Set();\n    }\n    /**\n     * Add a key-value pair.\n     * Values are stored in a Set, so duplicates are skipped.\n     * @returns count(key) after the operation.\n     */\n    add(key, value) {\n        let c = this.m.get(key);\n        if (!c) {\n            c = new Set();\n            this.m.set(key, c);\n        }\n        const n = c.size;\n        c.add(value);\n        this.size_ += c.size - n;\n        return c.size;\n    }\n    /**\n     * Remove a key-value pair.\n     * No-op if key-value does not exist.\n     * @returns count(key) after the operation.\n     */\n    remove(key, value) {\n        const c = this.m.get(key);\n        if (!c) {\n            return 0;\n        }\n        const n = c.size;\n        c.delete(value);\n        this.size_ += c.size - n;\n        if (c.size === 0) {\n            this.m.delete(key);\n        }\n        return c.size;\n    }\n    /** Iterate over key and associated values. */\n    associations() {\n        return this.m[Symbol.iterator]();\n    }\n    /** Iterate over key-value pairs. */\n    *[Symbol.iterator]() {\n        for (const [key, values] of this.associations()) {\n            for (const value of values) {\n                yield [key, value];\n            }\n        }\n    }\n}\n/** Container that associates a key with multiple distinct values. */\nexport class MultiMap extends KeyMultiMap {\n    constructor() {\n        super((k) => k);\n    }\n}\n/**\n * MultiSet that transforms keys.\n *\n * K: input key type.\n * I: indexable key type.\n * L: lookup key type.\n */\nexport class KeyMultiSet {\n    /**\n     * Constructor.\n     * @param keyOf function to transform input key to indexable key.\n     */\n    constructor(keyOf) {\n        this.m = new KeyMap(keyOf);\n    }\n    m;\n    size_ = 0;\n    /** Number of distinct keys. */\n    get dimension() { return this.m.size; }\n    /** Number of values. */\n    get size() { return this.size_; }\n    /** Count occurrences of a key. */\n    count(key) {\n        return this.m.get(key) ?? 0;\n    }\n    /**\n     * Add a key.\n     * @returns number of occurrences after the operation.\n     */\n    add(key) {\n        const n = this.count(key) + 1;\n        this.m.set(key, n);\n        ++this.size_;\n        return n;\n    }\n    /**\n     * Remove a key.\n     * No-op if key does not exist.\n     * @returns number of occurrences after the operation.\n     */\n    remove(key) {\n        let n = this.count(key);\n        if (n === 0) {\n            return n;\n        }\n        --this.size_;\n        --n;\n        if (n === 0) {\n            this.m.delete(key);\n        }\n        else {\n            this.m.set(key, n);\n        }\n        return n;\n    }\n    /** Iterate over key and number of occurrences. */\n    multiplicities() {\n        return this.m[Symbol.iterator]();\n    }\n}\n","import { KeyMap, KeyMultiMap, KeyMultiSet } from \"@ndn/util\";\nfunction keyOf(nameOrHex) {\n    return typeof nameOrHex === \"string\" ? nameOrHex : nameOrHex.valueHex;\n}\n/**\n * Map keyed by name.\n * Lookups may accept either name or name.valueHex.\n */\nexport class NameMap extends KeyMap {\n    constructor() {\n        super(keyOf);\n    }\n}\n/**\n * MultiMap keyed by name.\n * Lookups may accept either name or name.valueHex.\n */\nexport class NameMultiMap extends KeyMultiMap {\n    constructor() {\n        super(keyOf);\n    }\n}\n/**\n * MultiSet keyed by name.\n * Lookups may accept either name or name.valueHex.\n */\nexport class NameMultiSet extends KeyMultiSet {\n    constructor() {\n        super(keyOf);\n    }\n}\n","/** Pretty-print TLV-TYPE number. */\nexport function printTT(tlvType) {\n    const s = tlvType.toString(16).toUpperCase();\n    if (tlvType < 0xFD) {\n        return `0x${s.padStart(2, \"0\")}`;\n    }\n    if (tlvType <= 0xFFFF) {\n        return `0x${s.padStart(4, \"0\")}`;\n    }\n    return `0x${s.padStart(8, \"0\")}`;\n}\n","import { assert } from \"@ndn/util\";\nimport { printTT } from \"./string_browser.js\";\nconst AUTO_ORDER_SKIP = 100;\nfunction nest(evd) {\n    return (target, { decoder }) => { evd.decode(target, decoder); };\n}\nfunction isCritical(tt) {\n    return tt <= 0x1F || tt % 2 === 1;\n}\n/** TLV-VALUE decoder that understands Packet Format v0.3 evolvability guidelines. */\nexport class EvDecoder {\n    typeName;\n    topTT;\n    rules = new Map();\n    requiredTT = new Set();\n    nextOrder = AUTO_ORDER_SKIP;\n    isCritical = isCritical;\n    unknownHandler;\n    /** Callbacks before decoding TLV-VALUE. */\n    beforeObservers = [];\n    /** Callbacks after decoding TLV-VALUE. */\n    afterObservers = [];\n    /**\n     * Constructor.\n     * @param typeName type name, used in error messages.\n     * @param topTT if specified, check top-level TLV-TYPE to be in this list.\n     */\n    constructor(typeName, topTT = []) {\n        this.typeName = typeName;\n        this.topTT = Array.isArray(topTT) ? topTT : [topTT];\n    }\n    /**\n     * Add a decoding rule.\n     * @param tt TLV-TYPE to match this rule.\n     * @param cb callback or nested EvDecoder to handle element TLV.\n     * @param options additional rule options.\n     */\n    add(tt, cb, { order = (this.nextOrder += AUTO_ORDER_SKIP), required = false, repeat = false, } = {}) {\n        assert(!this.rules.has(tt), \"duplicate rule for same TLV-TYPE\");\n        this.rules.set(tt, {\n            cb: cb instanceof EvDecoder ? nest(cb) : cb,\n            order,\n            required,\n            repeat,\n        });\n        if (required) {\n            this.requiredTT.add(tt);\n        }\n        return this;\n    }\n    /** Set callback to determine whether TLV-TYPE is critical. */\n    setIsCritical(cb) {\n        this.isCritical = cb;\n        return this;\n    }\n    /** Set callback to handle unknown elements. */\n    setUnknown(cb) {\n        this.unknownHandler = cb;\n        return this;\n    }\n    /** Decode TLV to target object. */\n    decode(target, decoder) {\n        const topTlv = decoder.read();\n        const { type, vd } = topTlv;\n        if (this.topTT.length > 0 && !this.topTT.includes(type)) {\n            throw new Error(`TLV-TYPE ${printTT(type)} is not ${this.typeName}`);\n        }\n        return this.decodeV(target, vd, topTlv);\n    }\n    /** Decode TLV-VALUE to target object. */\n    decodeValue(target, vd) {\n        return this.decodeV(target, vd);\n    }\n    decodeV(target, vd, topTlv) {\n        for (const cb of this.beforeObservers) {\n            cb(target, topTlv);\n        }\n        let currentOrder = 0;\n        const foundTT = new Set();\n        const missingTT = new Set(this.requiredTT);\n        while (!vd.eof) {\n            const tlv = vd.read();\n            const tt = tlv.type;\n            const rule = this.rules.get(tt);\n            if (!rule) {\n                if (!this.unknownHandler?.(target, tlv, currentOrder)) {\n                    this.handleUnrecognized(tt, \"unknown\");\n                }\n                continue;\n            }\n            if (currentOrder > rule.order) {\n                this.handleUnrecognized(tt, \"out of order\");\n                continue;\n            }\n            currentOrder = rule.order;\n            if (!rule.repeat && foundTT.has(tt)) {\n                throw new Error(`TLV-TYPE ${printTT(tt)} cannot repeat in ${this.typeName}`);\n            }\n            foundTT.add(tt);\n            missingTT.delete(tt);\n            rule.cb(target, tlv);\n        }\n        if (missingTT.size > 0) {\n            throw new Error(`TLV-TYPE ${Array.from(missingTT, printTT).join(\",\")} missing in ${this.typeName}`);\n        }\n        for (const cb of this.afterObservers) {\n            cb(target, topTlv);\n        }\n        return target;\n    }\n    handleUnrecognized(tt, reason) {\n        if (this.isCritical(tt)) {\n            throw new Error(`TLV-TYPE ${printTT(tt)} is ${reason} in ${this.typeName}`);\n        }\n    }\n}\n","import { __importDefault, __importStar } from \"tslib\";\nimport _cjsDefaultImport0 from \"minimalistic-assert\"; const assert = __importDefault(_cjsDefaultImport0).default;\nexport function concatBuffers(list, totalLength) {\n    totalLength ??= list.reduce((l, { byteLength }) => l + byteLength, 0);\n    const c = new Uint8Array(totalLength);\n    let offset = 0;\n    for (const part of list) {\n        c.set(part, offset);\n        offset += part.byteLength;\n    }\n    assert.equal(offset, totalLength);\n    return c;\n}\nexport const console = globalThis.console;\nexport const crypto = globalThis.crypto;\nif (!crypto.subtle && !globalThis.isSecureContext) {\n    Object.defineProperty(crypto, \"subtle\", {\n        configurable: true,\n        get() {\n            console.error(\"NDNts depends on Web Crypto but it is unavailable because this webpage is not delivered securely, \" +\n                \"see https://mdn.io/SecureContext\");\n            return undefined;\n        },\n    });\n}\nexport const CustomEvent = globalThis.CustomEvent;\nexport function delay(after, value) {\n    return new Promise((resolve) => setTimeout(resolve, after, value));\n}\nexport function timingSafeEqual(a, b) {\n    // length has been checked by caller\n    // https://codahale.com/a-lesson-in-timing-attacks/\n    let result = 0;\n    for (let i = 0; i < a.byteLength; ++i) {\n        result |= a[i] ^ b[i];\n    }\n    return result === 0;\n}\n","import { crypto, timingSafeEqual as platformTimingSafeEqual } from \"./platform_browser.js\";\n/** Timing-safe equality comparison. */\nexport function timingSafeEqual(a, b) {\n    if (a.byteLength !== b.byteLength) {\n        return false;\n    }\n    return platformTimingSafeEqual(a, b);\n}\n/** SHA256 digest. */\nexport async function sha256(input) {\n    const digest = await crypto.subtle.digest(\"SHA-256\", input);\n    return new Uint8Array(digest);\n}\n","import { Encoder, EvDecoder } from \"@ndn/tlv\";\nimport { TT } from \"./an_browser.js\";\nimport { Name } from \"./name/mod_browser.js\";\nconst EVD = new EvDecoder(\"FwHint\")\n    .add(TT.Name, (t, { decoder }) => t.push(decoder.decode(Name)), { repeat: true });\n/** ForwardingHint in Interest. */\nexport class FwHint {\n    static decodeValue(vd) {\n        const t = new FwHint();\n        EVD.decodeValue(t.delegations, vd);\n        return t;\n    }\n    constructor(arg) {\n        if (Array.isArray(arg)) {\n            for (const name of arg) {\n                this.delegations.push(Name.from(name));\n            }\n        }\n        else if (arg instanceof FwHint) {\n            this.delegations = [...arg.delegations];\n        }\n        else if (Name.isNameLike(arg)) {\n            this.delegations = [Name.from(arg)];\n        }\n    }\n    delegations = [];\n    encodeTo(encoder) {\n        encoder.prependTlv(TT.ForwardingHint, Encoder.OmitEmpty, ...this.delegations);\n    }\n}\n","export const FIELDS = Symbol(\"FIELDS\");\nexport function definePublicFields(typ, fieldDefs) {\n    for (const [field, clearing] of Object.entries(fieldDefs)) {\n        Object.defineProperty(typ.prototype, field, {\n            enumerable: true,\n            get() {\n                return this[FIELDS][field];\n            },\n            set(v) {\n                const f = this[FIELDS];\n                f[field] = v;\n                for (const c of clearing) {\n                    f[c] = undefined;\n                }\n            },\n        });\n    }\n}\n","import { fromHex, toHex } from \"@ndn/util\";\nimport { TT } from \"../an_browser.js\";\nimport { Component } from \"./component_browser.js\";\nconst DIGEST_LENGTH = 32;\nclass DigestComp {\n    tt;\n    altUriPrefix;\n    altUriRegex;\n    constructor(tt, altUriPrefix) {\n        this.tt = tt;\n        this.altUriPrefix = altUriPrefix;\n        this.altUriRegex = new RegExp(`^${altUriPrefix}=([0-9a-fA-F]{${2 * DIGEST_LENGTH}})$`);\n    }\n    match(comp) {\n        return comp.type === this.tt && comp.length === DIGEST_LENGTH;\n    }\n    create(v) {\n        if (v.length !== DIGEST_LENGTH) {\n            throw new Error(`digest length must be ${DIGEST_LENGTH}`);\n        }\n        return new Component(this.tt, v);\n    }\n    parse(comp) {\n        return comp.value;\n    }\n    toAltUri(comp) {\n        return `${this.altUriPrefix}=${toHex(comp.value).toLowerCase()}`;\n    }\n    fromAltUri(input) {\n        const m = this.altUriRegex.exec(input);\n        if (!m) {\n            return undefined;\n        }\n        return new Component(this.tt, fromHex(m[1]));\n    }\n}\nclass ImplicitDigestComp extends DigestComp {\n    constructor() {\n        super(TT.ImplicitSha256DigestComponent, \"sha256digest\");\n    }\n    /** Remove ImplicitDigest if present at last component. */\n    strip(name) {\n        if (name.get(-1)?.is(this)) {\n            return name.getPrefix(-1);\n        }\n        return name;\n    }\n}\n/** ImplicitSha256DigestComponent */\nexport const ImplicitDigest = new ImplicitDigestComp();\nconst PARAMS_PLACEHOLDER_TAG = Symbol(\"ParametersSha256DigestComponent.placeholder\");\nclass ParamsDigestComp extends DigestComp {\n    /** ParamsDigest placeholder during Interest encoding. */\n    PLACEHOLDER;\n    constructor() {\n        super(TT.ParametersSha256DigestComponent, \"params-sha256\");\n        this.PLACEHOLDER = Object.assign(new Component(TT.ParametersSha256DigestComponent), { [PARAMS_PLACEHOLDER_TAG]: true });\n    }\n    /** Determine if comp is a ParamsDigest placeholder. */\n    isPlaceholder(comp) {\n        return !!comp[PARAMS_PLACEHOLDER_TAG];\n    }\n    /** Find ParamsDigest or placeholder in name. */\n    findIn(name, matchPlaceholder = true) {\n        return name.comps.findIndex((comp) => this.match(comp) ||\n            (matchPlaceholder && this.isPlaceholder(comp)));\n    }\n}\n/** ParametersSha256DigestComponent */\nexport const ParamsDigest = new ParamsDigestComp();\n","import { Encoder, EvDecoder } from \"@ndn/tlv\";\nimport { TT } from \"./an_browser.js\";\nimport { Name } from \"./name/mod_browser.js\";\nconst EVD = new EvDecoder(\"KeyLocator\", TT.KeyLocator)\n    .add(TT.Name, (t, { value }) => t.name = new Name(value))\n    .add(TT.KeyDigest, (t, { value }) => t.digest = value);\n/** KeyLocator in SigInfo. */\nexport class KeyLocator {\n    static decodeFrom(decoder) {\n        return EVD.decode(new KeyLocator(), decoder);\n    }\n    name;\n    digest;\n    constructor(...args) {\n        for (const arg of args) {\n            if (Name.isNameLike(arg)) {\n                this.name = Name.from(arg);\n            }\n            else if (arg instanceof Uint8Array) {\n                this.digest = arg;\n            }\n            else if (arg instanceof KeyLocator) {\n                Object.assign(this, arg);\n            }\n            else {\n                throw new Error(\"unknown KeyLocator constructor argument\");\n            }\n        }\n    }\n    encodeTo(encoder) {\n        encoder.prependTlv(TT.KeyLocator, Encoder.OmitEmpty, this.name, [TT.KeyDigest, Encoder.OmitEmpty, this.digest]);\n    }\n}\n(function (KeyLocator) {\n    function isCtorArg(arg) {\n        return arg instanceof KeyLocator || Name.isNameLike(arg) || arg instanceof Uint8Array;\n    }\n    KeyLocator.isCtorArg = isCtorArg;\n    /**\n     * Extract KeyLocator name.\n     * @throws KeyLocator is missing or does not have Name.\n     */\n    function mustGetName(kl) {\n        const name = kl?.name;\n        if (!name) {\n            throw new Error(\"KeyLocator does not have name\");\n        }\n        return name;\n    }\n    KeyLocator.mustGetName = mustGetName;\n})(KeyLocator || (KeyLocator = {}));\n","import { __importDefault, __importStar } from \"tslib\";\nimport _cjsDefaultImport0 from \"mnemonist/default-weak-map.js\"; const DefaultWeakMap = __importDefault(_cjsDefaultImport0).default;\nconst RECORDS = new DefaultWeakMap(() => new Map());\nexport var Extensible;\n(function (Extensible) {\n    Extensible.TAG = Symbol(\"Extensible\");\n    /** Clone extension fields of src to dst. */\n    function cloneRecord(dst, src) {\n        RECORDS.set(dst, new Map(RECORDS.get(src)));\n    }\n    Extensible.cloneRecord = cloneRecord;\n})(Extensible || (Extensible = {}));\nexport var Extension;\n(function (Extension) {\n    /** Retrieve value of an extension field. */\n    function get(obj, tt) {\n        return RECORDS.get(obj).get(tt);\n    }\n    Extension.get = get;\n    /** Assign value of an extension field. */\n    function set(obj, tt, value) {\n        RECORDS.get(obj).set(tt, value);\n    }\n    Extension.set = set;\n    /** Clear value of an extension field. */\n    function clear(obj, tt) {\n        RECORDS.get(obj).delete(tt);\n    }\n    Extension.clear = clear;\n})(Extension || (Extension = {}));\n/** Registry of known extension fields of a parent TLV element. */\nexport class ExtensionRegistry {\n    table = new Map();\n    /** Add an extension. */\n    registerExtension = (ext) => {\n        this.table.set(ext.tt, ext);\n    };\n    /** Remove an extension. */\n    unregisterExtension = (tt) => {\n        this.table.delete(tt);\n    };\n    /** UnknownElementCallback for EvDecoder. */\n    decodeUnknown = (target, tlv, order) => {\n        const { type: tt } = tlv;\n        const ext = this.table.get(tt);\n        if (!ext) {\n            return false;\n        }\n        const record = RECORDS.get(target);\n        record.set(tt, ext.decode(target, tlv, record.get(tt)));\n        return true;\n    };\n    /** Encode extension fields. */\n    encode(source) {\n        const record = RECORDS.peek(source);\n        if (!record) {\n            return [];\n        }\n        const fields = [];\n        for (const [tt, value] of record) {\n            const ext = this.table.get(tt);\n            if (!ext) {\n                throw new Error(`unknown extension type ${tt}`);\n            }\n            fields.push({ tt, value, ext });\n        }\n        fields.sort((a, b) => (a.ext.order ?? a.tt) - (b.ext.order ?? b.tt));\n        return fields.map(({ value, ext }) => ext.encode(source, value));\n    }\n}\n","import { Encoder, EvDecoder, Extensible, ExtensionRegistry, NNI } from \"@ndn/tlv\";\nimport { assert, crypto } from \"@ndn/util\";\nimport { SigType, TT } from \"./an_browser.js\";\nimport { KeyLocator } from \"./key-locator_browser.js\";\nconst EXTENSIONS = new ExtensionRegistry();\nconst EVD = new EvDecoder(\"SigInfo\", [TT.ISigInfo, TT.DSigInfo])\n    .add(TT.SigType, (t, { nni }) => t.type = nni, { required: true })\n    .add(TT.KeyLocator, (t, { decoder }) => t.keyLocator = decoder.decode(KeyLocator))\n    .add(TT.SigNonce, (t, { value }) => t.nonce = value)\n    .add(TT.SigTime, (t, { nni }) => t.time = nni)\n    .add(TT.SigSeqNum, (t, { nniBig }) => t.seqNum = nniBig)\n    .setUnknown(EXTENSIONS.decodeUnknown);\n/** SignatureInfo on Interest or Data. */\nexport class SigInfo {\n    static decodeFrom(decoder) {\n        return EVD.decode(new SigInfo(), decoder);\n    }\n    type = SigType.Null;\n    keyLocator;\n    nonce;\n    time;\n    seqNum;\n    [Extensible.TAG] = EXTENSIONS;\n    /**\n     * Construct from flexible arguments.\n     *\n     * Arguments can include, in any order:\n     * - SigInfo to copy from\n     * - number as SigType\n     * - KeyLocator, or Name/URI/KeyDigest to construct KeyLocator\n     * - SigInfo.Nonce(v)\n     * - SigInfo.Time(v)\n     * - SigInfo.SeqNum(v)\n     */\n    constructor(...args) {\n        const klArgs = [];\n        for (const arg of args) {\n            if (typeof arg === \"number\") {\n                this.type = arg;\n            }\n            else if (KeyLocator.isCtorArg(arg)) {\n                klArgs.push(arg);\n            }\n            else if (arg instanceof SigInfo) {\n                Object.assign(this, arg);\n                Extensible.cloneRecord(this, arg);\n            }\n            else if (arg[ctorAssign]) {\n                arg[ctorAssign](this);\n            }\n            else {\n                throw new Error(\"unknown SigInfo constructor argument\");\n            }\n        }\n        if (klArgs.length > 0) {\n            this.keyLocator = new KeyLocator(...klArgs);\n        }\n    }\n    /**\n     * Create an Encodable.\n     * @param tt either TT.ISigInfo or TT.DSigInfo.\n     */\n    encodeAs(tt) {\n        return {\n            encodeTo: (encoder) => this.encodeTo(encoder, tt),\n        };\n    }\n    encodeTo(encoder, tt) {\n        encoder.prependTlv(tt, [TT.SigType, NNI(this.type)], this.keyLocator, [TT.SigNonce, Encoder.OmitEmpty, this.nonce], this.time !== undefined && [TT.SigTime, NNI(this.time)], this.seqNum !== undefined && [TT.SigSeqNum, NNI(this.seqNum)], ...EXTENSIONS.encode(this));\n    }\n}\nconst ctorAssign = Symbol(\"SigInfo.ctorAssign\");\n(function (SigInfo) {\n    function Nonce(v) {\n        return {\n            [ctorAssign](si) {\n                si.nonce = v instanceof Uint8Array ? v : generateNonce(v);\n            },\n        };\n    }\n    SigInfo.Nonce = Nonce;\n    /** Generate a random nonce. */\n    function generateNonce(size = 8) {\n        assert(size >= 1);\n        return crypto.getRandomValues(new Uint8Array(size));\n    }\n    SigInfo.generateNonce = generateNonce;\n    function Time(v = Date.now()) {\n        return {\n            [ctorAssign](si) { si.time = v; },\n        };\n    }\n    SigInfo.Time = Time;\n    function SeqNum(v) {\n        return {\n            [ctorAssign](si) { si.seqNum = v; },\n        };\n    }\n    SigInfo.SeqNum = SeqNum;\n    SigInfo.registerExtension = EXTENSIONS.registerExtension;\n    SigInfo.unregisterExtension = EXTENSIONS.unregisterExtension;\n})(SigInfo || (SigInfo = {}));\n","import { sha256, timingSafeEqual } from \"@ndn/util\";\nimport { SigType } from \"../an_browser.js\";\nimport { KeyLocator } from \"../key-locator_browser.js\";\nimport { SigInfo } from \"../sig-info_browser.js\";\nexport var LLSign;\n(function (LLSign) {\n    LLSign.OP = Symbol(\"LLSign.OP\");\n})(LLSign || (LLSign = {}));\nexport var LLVerify;\n(function (LLVerify) {\n    LLVerify.OP = Symbol(\"LLVerify.OP\");\n})(LLVerify || (LLVerify = {}));\nexport var Signer;\n(function (Signer) {\n    /**\n     * Put SigInfo on packet if it does not exist.\n     * @param pkt target packet.\n     * @param sigType optionally set sigType.\n     * @param keyLocator optionally set keyLocator; false to delete KeyLocator.\n     */\n    function putSigInfo(pkt, sigType, keyLocator) {\n        pkt.sigInfo ??= new SigInfo();\n        if (sigType !== undefined) {\n            pkt.sigInfo.type = sigType;\n        }\n        if (keyLocator === false) {\n            pkt.sigInfo.keyLocator = undefined;\n        }\n        else if (keyLocator !== undefined) {\n            pkt.sigInfo.keyLocator = new KeyLocator(keyLocator);\n        }\n        return pkt.sigInfo;\n    }\n    Signer.putSigInfo = putSigInfo;\n})(Signer || (Signer = {}));\nexport var Verifier;\n(function (Verifier) {\n    /** Throw if packet does not have expected SigType. */\n    function checkSigType(pkt, expectedSigType) {\n        if (pkt.sigInfo?.type !== expectedSigType) {\n            throw new Error(`packet does not have SigType ${expectedSigType}`);\n        }\n    }\n    Verifier.checkSigType = checkSigType;\n    /** Throw bad signature error if not OK. */\n    function throwOnBadSig(ok) {\n        if (!ok) {\n            throw new Error(\"bad signature value\");\n        }\n    }\n    Verifier.throwOnBadSig = throwOnBadSig;\n})(Verifier || (Verifier = {}));\n/** Signer and Verifier that do nothing. */\nexport const noopSigning = {\n    sign() {\n        return Promise.resolve();\n    },\n    verify() {\n        return Promise.resolve();\n    },\n};\n/** Signer and Verifier for SigType.Sha256 digest. */\nexport const digestSigning = {\n    sign(pkt) {\n        Signer.putSigInfo(pkt, SigType.Sha256, false);\n        return pkt[LLSign.OP]((input) => sha256(input));\n    },\n    async verify(pkt) {\n        Verifier.checkSigType(pkt, SigType.Sha256);\n        return pkt[LLVerify.OP](async (input, sig) => {\n            const h = await sha256(input);\n            const ok = timingSafeEqual(sig, h);\n            Verifier.throwOnBadSig(ok);\n        });\n    },\n};\n/**\n * Signer for SigType.Null, a packet that is not signed.\n * @see https://redmine.named-data.net/projects/ndn-tlv/wiki/NullSignature\n */\nexport const nullSigner = {\n    sign(pkt) {\n        Signer.putSigInfo(pkt, SigType.Null, false);\n        pkt.sigValue = new Uint8Array();\n        return Promise.resolve();\n    },\n};\n","import { Encoder, EvDecoder, NNI } from \"@ndn/tlv\";\nimport { assert, sha256 } from \"@ndn/util\";\nimport { TT } from \"./an_browser.js\";\nimport { FwHint } from \"./fwhint_browser.js\";\nimport { definePublicFields, FIELDS } from \"./impl-public-fields_browser.js\";\nimport { Name, ParamsDigest } from \"./name/mod_browser.js\";\nimport { LLSign, LLVerify } from \"./security/signing_browser.js\";\nimport { SigInfo } from \"./sig-info_browser.js\";\nconst HOPLIMIT_MAX = 255;\nclass Fields {\n    constructor(...args) {\n        for (const arg of args) {\n            if (Name.isNameLike(arg)) {\n                this.name = Name.from(arg);\n            }\n            else if (arg instanceof FwHint) {\n                this.fwHint = new FwHint(arg);\n            }\n            else if (arg instanceof Uint8Array) {\n                this.appParameters = arg;\n            }\n            else if (arg instanceof Interest) {\n                Object.assign(this, arg[FIELDS]);\n            }\n            else if (arg[ctorAssign]) {\n                arg[ctorAssign](this);\n            }\n            else {\n                throw new Error(\"unknown Interest constructor argument\");\n            }\n        }\n    }\n    name = new Name();\n    canBePrefix = false;\n    mustBeFresh = false;\n    fwHint;\n    get nonce() { return this.nonce_; }\n    set nonce(v) { this.nonce_ = v && NNI.constrain(v, \"Nonce\", 0xFFFFFFFF); }\n    nonce_;\n    get lifetime() { return this.lifetime_; }\n    set lifetime(v) { this.lifetime_ = NNI.constrain(v, \"InterestLifetime\"); }\n    lifetime_ = Interest.DefaultLifetime;\n    get hopLimit() { return this.hopLimit_; }\n    set hopLimit(v) { this.hopLimit_ = NNI.constrain(v, \"HopLimit\", HOPLIMIT_MAX); }\n    hopLimit_ = HOPLIMIT_MAX;\n    appParameters;\n    sigInfo;\n    sigValue = new Uint8Array();\n    paramsPortion;\n    signedPortion;\n}\nconst EVD = new EvDecoder(\"Interest\", TT.Interest)\n    .add(TT.Name, (t, { decoder }) => t.name = decoder.decode(Name), { required: true })\n    .add(TT.CanBePrefix, (t) => t.canBePrefix = true)\n    .add(TT.MustBeFresh, (t) => t.mustBeFresh = true)\n    .add(TT.ForwardingHint, (t, { vd }) => t.fwHint = FwHint.decodeValue(vd))\n    .add(TT.Nonce, (t, { value }) => t.nonce = NNI.decode(value, { len: 4 }))\n    .add(TT.InterestLifetime, (t, { nni }) => t.lifetime = nni)\n    .add(TT.HopLimit, (t, { value }) => t.hopLimit = NNI.decode(value, { len: 1 }))\n    .add(TT.AppParameters, (t, { value, tlv, after }) => {\n    if (ParamsDigest.findIn(t.name, false) < 0) {\n        throw new Error(\"ParamsDigest missing in parameterized Interest\");\n    }\n    t.appParameters = value;\n    assert(tlv.buffer === after.buffer);\n    t.paramsPortion = new Uint8Array(tlv.buffer, tlv.byteOffset, tlv.byteLength + after.byteLength);\n})\n    .add(TT.ISigInfo, (t, { decoder }) => t.sigInfo = decoder.decode(SigInfo))\n    .add(TT.ISigValue, (t, { value, tlv }) => {\n    if (!t.name.get(-1)?.is(ParamsDigest)) {\n        throw new Error(\"ParamsDigest missing or out of place in signed Interest\");\n    }\n    if (!t.paramsPortion) {\n        throw new Error(\"AppParameters missing in signed Interest\");\n    }\n    if (!t.sigInfo) {\n        throw new Error(\"ISigInfo missing in signed Interest\");\n    }\n    assert(tlv.buffer === t.paramsPortion.buffer);\n    t.sigValue = value;\n    // t.name.value should be readily available during decoding;\n    // t.name.getPrefix(-1).value would require re-encoding from components\n    const signedPart0 = t.name.value.subarray(0, -t.name.get(-1).tlv.byteLength);\n    const signedPart1 = new Uint8Array(tlv.buffer, t.paramsPortion.byteOffset, tlv.byteOffset - t.paramsPortion.byteOffset);\n    t.signedPortion = new Uint8Array(signedPart0.byteLength + signedPart1.byteLength);\n    t.signedPortion.set(signedPart0, 0);\n    t.signedPortion.set(signedPart1, signedPart0.byteLength);\n});\n/** Interest packet. */\nexport class Interest {\n    /**\n     * Construct from flexible arguments.\n     *\n     * Arguments can include, in any order:\n     * - Interest to copy from\n     * - Name or name URI\n     * - Interest.CanBePrefix\n     * - Interest.MustBeFresh\n     * - FwHint\n     * - Interest.Nonce(v)\n     * - Interest.Lifetime(v)\n     * - Interest.HopLimit(v)\n     * - Uint8Array as AppParameters\n     */\n    constructor(...args) {\n        this[FIELDS] = new Fields(...args);\n    }\n    [FIELDS];\n    static decodeFrom(decoder) {\n        const interest = new Interest();\n        EVD.decode(interest[FIELDS], decoder);\n        return interest;\n    }\n    encodeTo(encoder) {\n        const { name, canBePrefix, mustBeFresh, fwHint, nonce, lifetime, hopLimit, appParameters } = this[FIELDS];\n        if (name.length === 0) {\n            throw new Error(\"invalid empty Interest name\");\n        }\n        if (appParameters && ParamsDigest.findIn(name, false) < 0) {\n            throw new Error(\"ParamsDigest missing\");\n        }\n        encoder.prependTlv(TT.Interest, name, canBePrefix && [TT.CanBePrefix], mustBeFresh && [TT.MustBeFresh], fwHint, [TT.Nonce, NNI(nonce ?? Interest.generateNonce(), { len: 4 })], lifetime !== Interest.DefaultLifetime && [TT.InterestLifetime, NNI(lifetime)], hopLimit !== HOPLIMIT_MAX && [TT.HopLimit, NNI(hopLimit, { len: 1 })], ...this.encodeParamsPortion());\n    }\n    encodeParamsPortion() {\n        const { appParameters, sigInfo, sigValue } = this[FIELDS];\n        if (!appParameters) {\n            return [];\n        }\n        const w = [[TT.AppParameters, appParameters]];\n        if (sigInfo) {\n            w.push(sigInfo.encodeAs(TT.ISigInfo), [TT.ISigValue, sigValue]);\n        }\n        return w;\n    }\n    appendParamsDigestPlaceholder() {\n        const f = this[FIELDS];\n        this.name = f.name.append(ParamsDigest.PLACEHOLDER);\n        return f.name.length - 1;\n    }\n    async updateParamsDigest() {\n        const f = this[FIELDS];\n        let pdIndex = ParamsDigest.findIn(f.name);\n        if (pdIndex < 0) {\n            pdIndex = this.appendParamsDigestPlaceholder();\n        }\n        f.appParameters ??= new Uint8Array();\n        f.paramsPortion = Encoder.encode(this.encodeParamsPortion());\n        const d = await sha256(f.paramsPortion);\n        f.name = f.name.replaceAt(pdIndex, ParamsDigest.create(d));\n    }\n    async validateParamsDigest(requireAppParameters = false) {\n        const { appParameters, paramsPortion, name } = this[FIELDS];\n        if (!appParameters) {\n            if (requireAppParameters) {\n                throw new Error(\"AppParameters is missing\");\n            }\n            return;\n        }\n        if (!paramsPortion) {\n            throw new Error(\"parameters portion is empty\");\n        }\n        const pdComp = name.at(ParamsDigest.findIn(name, false));\n        const d = await sha256(paramsPortion);\n        // This is not a constant-time comparison. It's for integrity purpose only.\n        if (!pdComp.equals(ParamsDigest.create(d))) {\n            throw new Error(\"incorrect ParamsDigest\");\n        }\n    }\n    async [LLSign.OP](sign) {\n        const f = this[FIELDS];\n        let pdIndex = ParamsDigest.findIn(f.name);\n        if (pdIndex < 0) {\n            pdIndex = this.appendParamsDigestPlaceholder();\n        }\n        else if (pdIndex !== f.name.length - 1) {\n            throw new Error(\"ParamsDigest out of place for signed Interest\");\n        }\n        f.signedPortion = Encoder.encode([\n            ...f.name.getPrefix(-1).comps,\n            [TT.AppParameters, f.appParameters],\n            f.sigInfo?.encodeAs(TT.ISigInfo),\n        ]);\n        this.sigValue = await sign(f.signedPortion);\n        return this.updateParamsDigest();\n    }\n    async [LLVerify.OP](verify) {\n        const { signedPortion, sigValue } = this[FIELDS];\n        await this.validateParamsDigest();\n        if (!signedPortion) {\n            throw new Error(\"SignedPortion is missing\");\n        }\n        await verify(signedPortion, sigValue);\n    }\n}\ndefinePublicFields(Interest, {\n    name: [\"signedPortion\"],\n    canBePrefix: [],\n    mustBeFresh: [],\n    fwHint: [],\n    nonce: [],\n    lifetime: [],\n    hopLimit: [],\n    appParameters: [\"paramsPortion\", \"signedPortion\"],\n    sigInfo: [\"paramsPortion\", \"signedPortion\"],\n    sigValue: [\"paramsPortion\"],\n});\nconst ctorAssign = Symbol(\"Interest.ctorAssign\");\n(function (Interest) {\n    /** Generate a random nonce. */\n    function generateNonce() {\n        return Math.trunc(Math.random() * 0x100000000);\n    }\n    Interest.generateNonce = generateNonce;\n    /** Default InterestLifetime. */\n    Interest.DefaultLifetime = 4000;\n    /** Constructor argument to set CanBePrefix flag. */\n    Interest.CanBePrefix = {\n        [ctorAssign](f) { f.canBePrefix = true; },\n    };\n    /** Constructor argument to set MustBeFresh flag. */\n    Interest.MustBeFresh = {\n        [ctorAssign](f) { f.mustBeFresh = true; },\n    };\n    /** Constructor argument to set Nonce field. */\n    function Nonce(v = generateNonce()) {\n        return {\n            [ctorAssign](f) { f.nonce = v; },\n        };\n    }\n    Interest.Nonce = Nonce;\n    /** Constructor argument to set InterestLifetime field. */\n    function Lifetime(v) {\n        return {\n            [ctorAssign](f) { f.lifetime = v; },\n        };\n    }\n    Interest.Lifetime = Lifetime;\n    /** Constructor argument to set HopLimit field. */\n    function HopLimit(v) {\n        return {\n            [ctorAssign](f) { f.hopLimit = v; },\n        };\n    }\n    Interest.HopLimit = HopLimit;\n    /** Turn ModifyFields to ModifyFunc; return ModifyFunc as-is. */\n    function makeModifyFunc(input) {\n        if (!input) {\n            return () => undefined;\n        }\n        if (typeof input === \"function\") {\n            return input;\n        }\n        const patch = {};\n        for (const key of [\"canBePrefix\", \"mustBeFresh\", \"fwHint\", \"lifetime\", \"hopLimit\"]) {\n            if (input[key] !== undefined) {\n                patch[key] = input[key];\n            }\n        }\n        return (interest) => {\n            Object.assign(interest, patch);\n        };\n    }\n    Interest.makeModifyFunc = makeModifyFunc;\n})(Interest || (Interest = {}));\n","import { Encoder, EvDecoder, NNI } from \"@ndn/tlv\";\nimport { sha256 } from \"@ndn/util\";\nimport { TT } from \"./an_browser.js\";\nimport { definePublicFields, FIELDS } from \"./impl-public-fields_browser.js\";\nimport { Component, ImplicitDigest, Name } from \"./name/mod_browser.js\";\nimport { LLSign, LLVerify } from \"./security/signing_browser.js\";\nimport { SigInfo } from \"./sig-info_browser.js\";\nclass Fields {\n    constructor(...args) {\n        let isFinalBlock = false;\n        for (const arg of args) {\n            if (Name.isNameLike(arg)) {\n                this.name = Name.from(arg);\n            }\n            else if (arg instanceof Uint8Array) {\n                this.content = arg;\n            }\n            else if (arg === Data.FinalBlock) {\n                isFinalBlock = true;\n            }\n            else if (arg instanceof Data) {\n                Object.assign(this, arg[FIELDS]);\n            }\n            else if (arg[ctorAssign]) {\n                arg[ctorAssign](this);\n            }\n            else {\n                throw new Error(\"unknown Data constructor argument\");\n            }\n        }\n        this.isFinalBlock = isFinalBlock;\n    }\n    name = new Name();\n    get contentType() { return this.contentType_; }\n    set contentType(v) { this.contentType_ = NNI.constrain(v, \"ContentType\"); }\n    contentType_ = 0;\n    get freshnessPeriod() { return this.freshnessPeriod_; }\n    set freshnessPeriod(v) { this.freshnessPeriod_ = NNI.constrain(v, \"FreshnessPeriod\"); }\n    freshnessPeriod_ = 0;\n    finalBlockId;\n    /** Determine whether FinalBlockId equals the last name component. */\n    get isFinalBlock() {\n        return !!this.finalBlockId && this.name.length > 0 &&\n            this.finalBlockId.equals(this.name.get(-1));\n    }\n    /**\n     * Setting to false deletes FinalBlockId.\n     *\n     * Setting to true assigns FinalBlockId to be the last name component.\n     * It is not allowed if the name is empty.\n     */\n    set isFinalBlock(v) {\n        if (!v) {\n            this.finalBlockId = undefined;\n            return;\n        }\n        if (this.name.length === 0) {\n            throw new Error(\"cannot set FinalBlockId when Name is empty\");\n        }\n        this.finalBlockId = this.name.get(-1);\n    }\n    content = new Uint8Array();\n    sigInfo = new SigInfo();\n    sigValue = new Uint8Array();\n    signedPortion;\n    topTlv;\n    topTlvDigest;\n}\nconst EVD = new EvDecoder(\"Data\", TT.Data)\n    .add(TT.Name, (t, { decoder }) => t.name = decoder.decode(Name), { required: true })\n    .add(TT.MetaInfo, new EvDecoder(\"MetaInfo\")\n    .add(TT.ContentType, (t, { nni }) => t.contentType = nni)\n    .add(TT.FreshnessPeriod, (t, { nni }) => t.freshnessPeriod = nni)\n    .add(TT.FinalBlock, (t, { vd }) => t.finalBlockId = vd.decode(Component)))\n    .add(TT.Content, (t, { value }) => t.content = value)\n    .add(TT.DSigInfo, (t, { decoder }) => t.sigInfo = decoder.decode(SigInfo), { required: true })\n    .add(TT.DSigValue, (t, { value, before }) => {\n    t.sigValue = value;\n    t.signedPortion = before;\n}, { required: true });\nEVD.beforeObservers.push((t, tlv) => t.topTlv = tlv.tlv);\n/** Data packet. */\nexport class Data {\n    /**\n     * Construct from flexible arguments.\n     *\n     * Arguments can include, in any order unless otherwise specified:\n     * - Data to copy from\n     * - Name or name URI\n     * - Data.ContentType(v)\n     * - Data.FreshnessPeriod(v)\n     * - Data.FinalBlock (must appear after Name)\n     * - Uint8Array as Content\n     */\n    constructor(...args) {\n        this[FIELDS] = new Fields(...args);\n    }\n    [FIELDS];\n    static decodeFrom(decoder) {\n        const data = new Data();\n        EVD.decode(data[FIELDS], decoder);\n        return data;\n    }\n    encodeTo(encoder) {\n        const f = this[FIELDS];\n        if (f.topTlv) {\n            encoder.encode(f.topTlv);\n            return;\n        }\n        encoder.encode(Encoder.extract([\n            TT.Data,\n            Encoder.extract(this.encodeSignedPortion(), (output) => f.signedPortion = output),\n            [TT.DSigValue, f.sigValue],\n        ], (output) => f.topTlv = output));\n    }\n    encodeSignedPortion() {\n        const { name, contentType, freshnessPeriod, finalBlockId, content, sigInfo } = this[FIELDS];\n        return [\n            name,\n            [\n                TT.MetaInfo, Encoder.OmitEmpty,\n                contentType > 0 && [TT.ContentType, NNI(contentType)],\n                freshnessPeriod > 0 && [TT.FreshnessPeriod, NNI(freshnessPeriod)],\n                finalBlockId && [TT.FinalBlock, finalBlockId],\n            ],\n            content.length > 0 && [TT.Content, content],\n            sigInfo.encodeAs(TT.DSigInfo),\n        ];\n    }\n    /** Return the implicit digest if it's already computed. */\n    getImplicitDigest() {\n        return this[FIELDS].topTlvDigest;\n    }\n    /** Compute the implicit digest. */\n    async computeImplicitDigest() {\n        let digest = this.getImplicitDigest();\n        if (!digest) {\n            const f = this[FIELDS];\n            if (!f.topTlv) {\n                Encoder.encode(this);\n            }\n            digest = await sha256(f.topTlv);\n            f.topTlvDigest = digest;\n        }\n        return digest;\n    }\n    /** Return the full name if the implicit digest is already computed. */\n    getFullName() {\n        const digest = this.getImplicitDigest();\n        if (!digest) {\n            return undefined;\n        }\n        return this[FIELDS].name.append(ImplicitDigest, digest);\n    }\n    /** Compute the full name (name plus implicit digest). */\n    async computeFullName() {\n        await this.computeImplicitDigest();\n        return this.getFullName();\n    }\n    /**\n     * Determine if a Data can satisfy an Interest.\n     * @param isCacheLookup if true, Data with zero FreshnessPeriod cannot satisfy Interest with MustBeFresh;\n     *                      if false, this check does not apply.\n     * @returns a Promise that will be resolved with the result.\n     */\n    async canSatisfy(interest, { isCacheLookup = false } = {}) {\n        if (isCacheLookup && interest.mustBeFresh && this.freshnessPeriod <= 0) {\n            return false;\n        }\n        if (interest.canBePrefix ? interest.name.isPrefixOf(this.name) : interest.name.equals(this.name)) {\n            return true;\n        }\n        if (interest.name.length === this.name.length + 1 && interest.name.get(-1).is(ImplicitDigest)) {\n            const fullName = this.getFullName();\n            if (!fullName) {\n                return interest.name.equals(await this.computeFullName());\n            }\n            return interest.name.equals(fullName);\n        }\n        return false;\n    }\n    async [LLSign.OP](sign) {\n        const signedPortion = Encoder.encode(this.encodeSignedPortion());\n        this[FIELDS].signedPortion = signedPortion;\n        this.sigValue = await sign(signedPortion);\n    }\n    async [LLVerify.OP](verify) {\n        const { signedPortion, sigValue } = this[FIELDS];\n        if (!sigValue) {\n            throw new Error(\"SigValue is missing\");\n        }\n        if (!signedPortion) {\n            throw new Error(\"SignedPortion is missing\");\n        }\n        await verify(signedPortion, sigValue);\n    }\n}\nconst clearingFields = [\"topTlv\", \"topTlvDigest\", \"signedPortion\"];\ndefinePublicFields(Data, {\n    name: clearingFields,\n    contentType: clearingFields,\n    freshnessPeriod: clearingFields,\n    finalBlockId: clearingFields,\n    isFinalBlock: clearingFields,\n    content: clearingFields,\n    sigInfo: clearingFields,\n    sigValue: clearingFields.slice(0, 2),\n});\nconst ctorAssign = Symbol(\"Data.ctorAssign\");\n(function (Data) {\n    /** Constructor argument to set ContentType field. */\n    function ContentType(v) {\n        return {\n            [ctorAssign](f) { return f.contentType = v; },\n        };\n    }\n    Data.ContentType = ContentType;\n    /** Constructor argument to set FreshnessPeriod field. */\n    function FreshnessPeriod(v) {\n        return {\n            [ctorAssign](f) { return f.freshnessPeriod = v; },\n        };\n    }\n    Data.FreshnessPeriod = FreshnessPeriod;\n    /** Constructor argument to set the current packet as FinalBlock. */\n    Data.FinalBlock = Symbol(\"Data.FinalBlock\");\n})(Data || (Data = {}));\n","import { EvDecoder, NNI } from \"@ndn/tlv\";\nimport { NackReason, TT } from \"./an_browser.js\";\nconst EVD = new EvDecoder(\"NackHeader\", TT.Nack)\n    .add(TT.NackReason, (t, { nni }) => t.reason = nni);\n/** Nack header. */\nexport class NackHeader {\n    get reason() { return this.reason_; }\n    set reason(v) { this.reason_ = NNI.constrain(v, \"Reason\"); }\n    reason_ = 0;\n    static decodeFrom(decoder) {\n        return EVD.decode(new NackHeader(), decoder);\n    }\n    constructor(reason = 0) {\n        this.reason = reason;\n    }\n    encodeTo(encoder) {\n        encoder.prependTlv(TT.Nack, this.reason_ > 0 && [TT.NackReason, NNI(this.reason_)]);\n    }\n}\n/** Nack packet. */\nexport class Nack {\n    interest;\n    get reason() { return this.header.reason; }\n    set reason(v) { this.header.reason = v; }\n    header;\n    constructor(interest, header = NackReason.NoRoute) {\n        this.interest = interest;\n        if (typeof header === \"number\") {\n            this.header = new NackHeader(header);\n        }\n        else {\n            this.header = header;\n        }\n    }\n}\n","import { __importDefault, __importStar } from \"tslib\";\nimport _cjsDefaultImport0 from \"minimalistic-assert\"; const assert = __importDefault(_cjsDefaultImport0).default;\n/** Yield all values from an iterable but catch any error. */\nexport async function* safeIter(iterable, onError) {\n    try {\n        yield* iterable;\n    }\n    catch (err) {\n        onError?.(err);\n    }\n}\n/**\n * Map and flatten once.\n * This differs from flatMap in streaming-iterables, which recursively flattens the result.\n */\nexport async function* flatMapOnce(f, iterable) {\n    for await (const item of iterable) {\n        yield* f(item);\n    }\n}\n/** Delete keys from a Set or Map until its size is below capacity. */\nexport function evict(capacity, ct) {\n    assert(capacity >= 0);\n    for (const key of ct.keys()) {\n        if (ct.size <= capacity) {\n            break;\n        }\n        ct.delete(key);\n    }\n}\n","export default function pDefer() {\n\tconst deferred = {};\n\n\tdeferred.promise = new Promise((resolve, reject) => {\n\t\tdeferred.resolve = resolve;\n\t\tdeferred.reject = reject;\n\t});\n\n\treturn deferred;\n}\n","// ported from https://www.npmjs.com/package/fast-fifo\nclass FixedFIFO {\n    buffer;\n    mask;\n    top;\n    btm;\n    next;\n    constructor(hwm) {\n        if (!(hwm > 0) || ((hwm - 1) & hwm) !== 0) {\n            throw new Error('Max size for a FixedFIFO should be a power of two');\n        }\n        this.buffer = new Array(hwm);\n        this.mask = hwm - 1;\n        this.top = 0;\n        this.btm = 0;\n        this.next = null;\n    }\n    push(data) {\n        if (this.buffer[this.top] !== undefined) {\n            return false;\n        }\n        this.buffer[this.top] = data;\n        this.top = (this.top + 1) & this.mask;\n        return true;\n    }\n    shift() {\n        const last = this.buffer[this.btm];\n        if (last === undefined) {\n            return undefined;\n        }\n        this.buffer[this.btm] = undefined;\n        this.btm = (this.btm + 1) & this.mask;\n        return last;\n    }\n    isEmpty() {\n        return this.buffer[this.btm] === undefined;\n    }\n}\nexport class FIFO {\n    size;\n    hwm;\n    head;\n    tail;\n    constructor(options = {}) {\n        this.hwm = options.splitLimit ?? 16;\n        this.head = new FixedFIFO(this.hwm);\n        this.tail = this.head;\n        this.size = 0;\n    }\n    calculateSize(obj) {\n        if (obj?.byteLength != null) {\n            return obj.byteLength;\n        }\n        return 1;\n    }\n    push(val) {\n        if (val?.value != null) {\n            this.size += this.calculateSize(val.value);\n        }\n        if (!this.head.push(val)) {\n            const prev = this.head;\n            this.head = prev.next = new FixedFIFO(2 * this.head.buffer.length);\n            this.head.push(val);\n        }\n    }\n    shift() {\n        let val = this.tail.shift();\n        if (val === undefined && (this.tail.next != null)) {\n            const next = this.tail.next;\n            this.tail.next = null;\n            this.tail = next;\n            val = this.tail.shift();\n        }\n        if (val?.value != null) {\n            this.size -= this.calculateSize(val.value);\n        }\n        return val;\n    }\n    isEmpty() {\n        return this.head.isEmpty();\n    }\n}\n//# sourceMappingURL=fifo.js.map","/**\n * @packageDocumentation\n *\n * An iterable that you can push values into.\n *\n * @example\n *\n * ```js\n * import { pushable } from 'it-pushable'\n *\n * const source = pushable()\n *\n * setTimeout(() => source.push('hello'), 100)\n * setTimeout(() => source.push('world'), 200)\n * setTimeout(() => source.end(), 300)\n *\n * const start = Date.now()\n *\n * for await (const value of source) {\n *   console.log(`got \"${value}\" after ${Date.now() - start}ms`)\n * }\n * console.log(`done after ${Date.now() - start}ms`)\n *\n * // Output:\n * // got \"hello\" after 105ms\n * // got \"world\" after 207ms\n * // done after 309ms\n * ```\n *\n * @example\n *\n * ```js\n * import { pushableV } from 'it-pushable'\n * import all from 'it-all'\n *\n * const source = pushableV()\n *\n * source.push(1)\n * source.push(2)\n * source.push(3)\n * source.end()\n *\n * console.info(await all(source))\n *\n * // Output:\n * // [ [1, 2, 3] ]\n * ```\n */\nimport deferred from 'p-defer';\nimport { FIFO } from './fifo.js';\nexport class AbortError extends Error {\n    type;\n    code;\n    constructor(message, code) {\n        super(message ?? 'The operation was aborted');\n        this.type = 'aborted';\n        this.code = code ?? 'ABORT_ERR';\n    }\n}\nexport function pushable(options = {}) {\n    const getNext = (buffer) => {\n        const next = buffer.shift();\n        if (next == null) {\n            return { done: true };\n        }\n        if (next.error != null) {\n            throw next.error;\n        }\n        return {\n            done: next.done === true,\n            // @ts-expect-error if done is false, value will be present\n            value: next.value\n        };\n    };\n    return _pushable(getNext, options);\n}\nexport function pushableV(options = {}) {\n    const getNext = (buffer) => {\n        let next;\n        const values = [];\n        while (!buffer.isEmpty()) {\n            next = buffer.shift();\n            if (next == null) {\n                break;\n            }\n            if (next.error != null) {\n                throw next.error;\n            }\n            if (next.done === false) {\n                // @ts-expect-error if done is false value should be pushed\n                values.push(next.value);\n            }\n        }\n        if (next == null) {\n            return { done: true };\n        }\n        return {\n            done: next.done === true,\n            value: values\n        };\n    };\n    return _pushable(getNext, options);\n}\nfunction _pushable(getNext, options) {\n    options = options ?? {};\n    let onEnd = options.onEnd;\n    let buffer = new FIFO();\n    let pushable;\n    let onNext;\n    let ended;\n    let drain = deferred();\n    const waitNext = async () => {\n        try {\n            if (!buffer.isEmpty()) {\n                return getNext(buffer);\n            }\n            if (ended) {\n                return { done: true };\n            }\n            return await new Promise((resolve, reject) => {\n                onNext = (next) => {\n                    onNext = null;\n                    buffer.push(next);\n                    try {\n                        resolve(getNext(buffer));\n                    }\n                    catch (err) {\n                        reject(err);\n                    }\n                    return pushable;\n                };\n            });\n        }\n        finally {\n            if (buffer.isEmpty()) {\n                // settle promise in the microtask queue to give consumers a chance to\n                // await after calling .push\n                queueMicrotask(() => {\n                    drain.resolve();\n                    drain = deferred();\n                });\n            }\n        }\n    };\n    const bufferNext = (next) => {\n        if (onNext != null) {\n            return onNext(next);\n        }\n        buffer.push(next);\n        return pushable;\n    };\n    const bufferError = (err) => {\n        buffer = new FIFO();\n        if (onNext != null) {\n            return onNext({ error: err });\n        }\n        buffer.push({ error: err });\n        return pushable;\n    };\n    const push = (value) => {\n        if (ended) {\n            return pushable;\n        }\n        // @ts-expect-error `byteLength` is not declared on PushType\n        if (options?.objectMode !== true && value?.byteLength == null) {\n            throw new Error('objectMode was not true but tried to push non-Uint8Array value');\n        }\n        return bufferNext({ done: false, value });\n    };\n    const end = (err) => {\n        if (ended)\n            return pushable;\n        ended = true;\n        return (err != null) ? bufferError(err) : bufferNext({ done: true });\n    };\n    const _return = () => {\n        buffer = new FIFO();\n        end();\n        return { done: true };\n    };\n    const _throw = (err) => {\n        end(err);\n        return { done: true };\n    };\n    pushable = {\n        [Symbol.asyncIterator]() { return this; },\n        next: waitNext,\n        return: _return,\n        throw: _throw,\n        push,\n        end,\n        get readableLength() {\n            return buffer.size;\n        },\n        onEmpty: async (options) => {\n            const signal = options?.signal;\n            signal?.throwIfAborted();\n            if (buffer.isEmpty()) {\n                return;\n            }\n            let cancel;\n            let listener;\n            if (signal != null) {\n                cancel = new Promise((resolve, reject) => {\n                    listener = () => {\n                        reject(new AbortError());\n                    };\n                    signal.addEventListener('abort', listener);\n                });\n            }\n            try {\n                await Promise.race([\n                    drain.promise,\n                    cancel\n                ]);\n            }\n            finally {\n                if (listener != null && signal != null) {\n                    signal?.removeEventListener('abort', listener);\n                }\n            }\n        }\n    };\n    if (onEnd == null) {\n        return pushable;\n    }\n    const _pushable = pushable;\n    pushable = {\n        [Symbol.asyncIterator]() { return this; },\n        next() {\n            return _pushable.next();\n        },\n        throw(err) {\n            _pushable.throw(err);\n            if (onEnd != null) {\n                onEnd(err);\n                onEnd = undefined;\n            }\n            return { done: true };\n        },\n        return() {\n            _pushable.return();\n            if (onEnd != null) {\n                onEnd();\n                onEnd = undefined;\n            }\n            return { done: true };\n        },\n        push,\n        end(err) {\n            _pushable.end(err);\n            if (onEnd != null) {\n                onEnd(err);\n                onEnd = undefined;\n            }\n            return pushable;\n        },\n        get readableLength() {\n            return _pushable.readableLength;\n        }\n    };\n    return pushable;\n}\n//# sourceMappingURL=index.js.map","async function* _batch(size, iterable) {\n    let dataBatch = [];\n    for await (const data of iterable) {\n        dataBatch.push(data);\n        if (dataBatch.length === size) {\n            yield dataBatch;\n            dataBatch = [];\n        }\n    }\n    if (dataBatch.length > 0) {\n        yield dataBatch;\n    }\n}\nfunction* _syncBatch(size, iterable) {\n    let dataBatch = [];\n    for (const data of iterable) {\n        dataBatch.push(data);\n        if (dataBatch.length === size) {\n            yield dataBatch;\n            dataBatch = [];\n        }\n    }\n    if (dataBatch.length > 0) {\n        yield dataBatch;\n    }\n}\nfunction batch(size, iterable) {\n    if (iterable === undefined) {\n        return curriedIterable => batch(size, curriedIterable);\n    }\n    if (iterable[Symbol.asyncIterator]) {\n        return _batch(size, iterable);\n    }\n    return _syncBatch(size, iterable);\n}\n\nconst TIMEOUT = Symbol('TIMEOUT');\nconst createTimer = (duration) => {\n    let timeoutId;\n    return [\n        new Promise(resolve => {\n            timeoutId = setTimeout(() => resolve(TIMEOUT), duration);\n        }),\n        () => {\n            clearTimeout(timeoutId);\n        },\n    ];\n};\n// Like `batch` but flushes early if the `timeout` is reached\n// NOTE: The strategy is to only hold onto a single item for a maximum of `timeout` ms.\nasync function* _batchWithTimeout(size, timeout, iterable) {\n    const iterator = iterable[Symbol.asyncIterator]();\n    let pendingData;\n    let batchData = [];\n    let timer;\n    let clearTimer;\n    const startTimer = () => {\n        deleteTimer();\n        [timer, clearTimer] = createTimer(timeout);\n    };\n    const deleteTimer = () => {\n        if (clearTimer) {\n            clearTimer();\n        }\n        timer = undefined;\n    };\n    pendingData = iterator.next();\n    while (true) {\n        const res = await (timer ? Promise.race([pendingData, timer]) : pendingData);\n        if (res === TIMEOUT || res.done) {\n            // Flush early (before we reach the batch size)\n            if (batchData.length) {\n                yield batchData;\n                batchData = [];\n            }\n            deleteTimer();\n            // And exit appropriately\n            if (res !== TIMEOUT) {\n                // done\n                break;\n            }\n            continue;\n        }\n        // Fetch next item early doors (before we potentially yield)\n        pendingData = iterator.next();\n        // Then handle the value\n        batchData.push(res.value);\n        if (batchData.length === 1) {\n            // Start timer once we have at least 1 item ready to go\n            startTimer();\n        }\n        if (batchData.length === size) {\n            yield batchData;\n            batchData = [];\n            deleteTimer();\n            continue;\n        }\n    }\n}\nfunction batchWithTimeout(size, timeout, iterable) {\n    if (iterable === undefined) {\n        return curriedIterable => batchWithTimeout(size, timeout, curriedIterable);\n    }\n    if (iterable[Symbol.asyncIterator] && timeout !== Infinity) {\n        return _batchWithTimeout(size, timeout, iterable);\n    }\n    // For sync iterables or an infinite timeout, the timeout is irrelevant so just fallback to regular `batch`.\n    return batch(size, iterable);\n}\n\nfunction getIterator(iterable) {\n    if (typeof iterable.next === 'function') {\n        return iterable;\n    }\n    if (typeof iterable[Symbol.iterator] === 'function') {\n        return iterable[Symbol.iterator]();\n    }\n    if (typeof iterable[Symbol.asyncIterator] === 'function') {\n        return iterable[Symbol.asyncIterator]();\n    }\n    throw new TypeError('\"values\" does not to conform to any of the iterator or iterable protocols');\n}\n\nfunction defer() {\n    let reject;\n    let resolve;\n    const promise = new Promise((resolveFunc, rejectFunc) => {\n        resolve = resolveFunc;\n        reject = rejectFunc;\n    });\n    return {\n        promise,\n        reject,\n        resolve,\n    };\n}\n\nfunction _buffer(size, iterable) {\n    const iterator = getIterator(iterable);\n    const resultQueue = [];\n    const readQueue = [];\n    let reading = false;\n    let ended = false;\n    function fulfillReadQueue() {\n        while (readQueue.length > 0 && resultQueue.length > 0) {\n            const readDeferred = readQueue.shift();\n            const { error, value } = resultQueue.shift();\n            if (error) {\n                readDeferred.reject(error);\n            }\n            else {\n                readDeferred.resolve({ done: false, value });\n            }\n        }\n        while (readQueue.length > 0 && ended) {\n            const { resolve } = readQueue.shift();\n            resolve({ done: true, value: undefined });\n        }\n    }\n    async function fillQueue() {\n        if (ended) {\n            return;\n        }\n        if (reading) {\n            return;\n        }\n        if (resultQueue.length >= size) {\n            return;\n        }\n        reading = true;\n        try {\n            const { done, value } = await iterator.next();\n            if (done) {\n                ended = true;\n            }\n            else {\n                resultQueue.push({ value });\n            }\n        }\n        catch (error) {\n            ended = true;\n            resultQueue.push({ error });\n        }\n        fulfillReadQueue();\n        reading = false;\n        fillQueue();\n    }\n    async function next() {\n        if (resultQueue.length > 0) {\n            const { error, value } = resultQueue.shift();\n            if (error) {\n                throw error;\n            }\n            fillQueue();\n            return { done: false, value };\n        }\n        if (ended) {\n            return { done: true, value: undefined }; // stupid ts\n        }\n        const deferred = defer();\n        readQueue.push(deferred);\n        fillQueue();\n        return deferred.promise;\n    }\n    const asyncIterableIterator = {\n        next,\n        [Symbol.asyncIterator]: () => asyncIterableIterator,\n    };\n    return asyncIterableIterator;\n}\nfunction* syncBuffer(size, iterable) {\n    const valueQueue = [];\n    let e;\n    try {\n        for (const value of iterable) {\n            valueQueue.push(value);\n            if (valueQueue.length <= size) {\n                continue;\n            }\n            yield valueQueue.shift();\n        }\n    }\n    catch (error) {\n        e = error;\n    }\n    for (const value of valueQueue) {\n        yield value;\n    }\n    if (e) {\n        throw e;\n    }\n}\nfunction buffer(size, iterable) {\n    if (iterable === undefined) {\n        return curriedIterable => buffer(size, curriedIterable);\n    }\n    if (size === 0) {\n        return iterable;\n    }\n    if (iterable[Symbol.asyncIterator]) {\n        return _buffer(size, iterable);\n    }\n    return syncBuffer(size, iterable);\n}\n\nasync function _collect(iterable) {\n    const values = [];\n    for await (const value of iterable) {\n        values.push(value);\n    }\n    return values;\n}\nfunction collect(iterable) {\n    if (iterable[Symbol.asyncIterator]) {\n        return _collect(iterable);\n    }\n    return Array.from(iterable);\n}\n\nasync function* _concat(iterables) {\n    for await (const iterable of iterables) {\n        yield* iterable;\n    }\n}\nfunction* _syncConcat(iterables) {\n    for (const iterable of iterables) {\n        yield* iterable;\n    }\n}\nfunction concat(...iterables) {\n    const hasAnyAsync = iterables.find(itr => itr[Symbol.asyncIterator] !== undefined);\n    if (hasAnyAsync) {\n        return _concat(iterables);\n    }\n    else {\n        return _syncConcat(iterables);\n    }\n}\n\nasync function _consume(iterable) {\n    for await (const _val of iterable) {\n        // do nothing\n    }\n}\nfunction consume(iterable) {\n    if (iterable[Symbol.asyncIterator]) {\n        return _consume(iterable);\n    }\n    for (const _val of iterable) {\n        // do nothing\n    }\n}\n\nasync function* _drop(count, iterable) {\n    let skipped = 0;\n    for await (const val of iterable) {\n        if (skipped < count) {\n            skipped++;\n            continue;\n        }\n        yield await val;\n    }\n}\nfunction* _syncDrop(count, iterable) {\n    let skipped = 0;\n    for (const val of iterable) {\n        if (skipped < count) {\n            skipped++;\n            continue;\n        }\n        yield val;\n    }\n}\nfunction drop(count, iterable) {\n    if (iterable === undefined) {\n        return curriedIterable => drop(count, curriedIterable);\n    }\n    if (iterable[Symbol.asyncIterator]) {\n        return _drop(count, iterable);\n    }\n    return _syncDrop(count, iterable);\n}\n\nasync function* _filter(filterFunc, iterable) {\n    for await (const data of iterable) {\n        if (await filterFunc(data)) {\n            yield data;\n        }\n    }\n}\nfunction filter(filterFunc, iterable) {\n    if (iterable === undefined) {\n        return (curriedIterable) => _filter(filterFunc, curriedIterable);\n    }\n    return _filter(filterFunc, iterable);\n}\n\n/**\n * Returns a new iterator by pulling every item out of `iterable` (and all its sub iterables) and yielding them depth-first. Checks for the iterable interfaces and iterates it if it exists. If the value is a string it is not iterated as that ends up in an infinite loop. Errors from the source `iterable` are raised immediately.\n\n*note*: Typescript doesn't have recursive types but you can nest iterables as deep as you like.\n\n```ts\nimport { flatten } from 'streaming-iterables'\n\nfor await (const item of flatten([1, 2, [3, [4, 5], 6])) {\n  console.log(item)\n}\n// 1\n// 2\n// 3\n// 4\n// 5\n// 6\n```\n */\nasync function* flatten(iterable) {\n    for await (const maybeItr of iterable) {\n        if (maybeItr && typeof maybeItr !== 'string' && (maybeItr[Symbol.iterator] || maybeItr[Symbol.asyncIterator])) {\n            yield* flatten(maybeItr);\n        }\n        else {\n            yield maybeItr;\n        }\n    }\n}\n\nasync function* _map(func, iterable) {\n    for await (const val of iterable) {\n        yield await func(val);\n    }\n}\nfunction map(func, iterable) {\n    if (iterable === undefined) {\n        return curriedIterable => _map(func, curriedIterable);\n    }\n    return _map(func, iterable);\n}\n\nfunction flatMap(func, iterable) {\n    if (iterable === undefined) {\n        return curriedIterable => flatMap(func, curriedIterable);\n    }\n    return filter(i => i !== undefined && i !== null, flatten(map(func, iterable)));\n}\n\nfunction _flatTransform(concurrency, func, iterable) {\n    const iterator = getIterator(iterable);\n    const resultQueue = [];\n    const readQueue = [];\n    let ended = false;\n    let reading = false;\n    let inflightCount = 0;\n    let lastError = null;\n    function fulfillReadQueue() {\n        while (readQueue.length > 0 && resultQueue.length > 0) {\n            const { resolve } = readQueue.shift();\n            const value = resultQueue.shift();\n            resolve({ done: false, value });\n        }\n        while (readQueue.length > 0 && inflightCount === 0 && ended) {\n            const { resolve, reject } = readQueue.shift();\n            if (lastError) {\n                reject(lastError);\n                lastError = null;\n            }\n            else {\n                resolve({ done: true, value: undefined });\n            }\n        }\n    }\n    async function fillQueue() {\n        if (ended) {\n            fulfillReadQueue();\n            return;\n        }\n        if (reading) {\n            return;\n        }\n        if (inflightCount + resultQueue.length >= concurrency) {\n            return;\n        }\n        reading = true;\n        inflightCount++;\n        try {\n            const { done, value } = await iterator.next();\n            if (done) {\n                ended = true;\n                inflightCount--;\n                fulfillReadQueue();\n            }\n            else {\n                mapAndQueue(value);\n            }\n        }\n        catch (error) {\n            ended = true;\n            inflightCount--;\n            lastError = error;\n            fulfillReadQueue();\n        }\n        reading = false;\n        fillQueue();\n    }\n    async function mapAndQueue(itrValue) {\n        try {\n            const value = await func(itrValue);\n            if (value && value[Symbol.asyncIterator]) {\n                for await (const asyncVal of value) {\n                    resultQueue.push(asyncVal);\n                }\n            }\n            else {\n                resultQueue.push(value);\n            }\n        }\n        catch (error) {\n            ended = true;\n            lastError = error;\n        }\n        inflightCount--;\n        fulfillReadQueue();\n        fillQueue();\n    }\n    async function next() {\n        if (resultQueue.length === 0) {\n            const deferred = defer();\n            readQueue.push(deferred);\n            fillQueue();\n            return deferred.promise;\n        }\n        const value = resultQueue.shift();\n        fillQueue();\n        return { done: false, value };\n    }\n    const asyncIterableIterator = {\n        next,\n        [Symbol.asyncIterator]: () => asyncIterableIterator,\n    };\n    return asyncIterableIterator;\n}\nfunction flatTransform(concurrency, func, iterable) {\n    if (func === undefined) {\n        return (curriedFunc, curriedIterable) => curriedIterable\n            ? flatTransform(concurrency, curriedFunc, curriedIterable)\n            : flatTransform(concurrency, curriedFunc);\n    }\n    if (iterable === undefined) {\n        return (curriedIterable) => flatTransform(concurrency, func, curriedIterable);\n    }\n    return filter(i => i !== undefined && i !== null, flatten(_flatTransform(concurrency, func, iterable)));\n}\n\nasync function onceReadable(stream) {\n    return new Promise(resolve => {\n        stream.once('readable', () => {\n            resolve();\n        });\n    });\n}\nasync function* _fromStream(stream) {\n    while (true) {\n        const data = stream.read();\n        if (data !== null) {\n            yield data;\n            continue;\n        }\n        if (stream._readableState.ended) {\n            break;\n        }\n        await onceReadable(stream);\n    }\n}\n/**\n * Wraps the stream in an async iterator or returns the stream if it already is an async iterator.\n\n*note*: Since Node 10, streams already async iterators. This function may be used to ensure compatibility with older versions of Node.\n\n```ts\nimport { fromStream } from 'streaming-iterables'\nimport { createReadStream } from 'fs'\n\nconst pokeLog = fromStream(createReadStream('./pokedex-operating-system.log'))\n\nfor await (const pokeData of pokeLog) {\n  console.log(pokeData) // Buffer(...)\n}\n```\n * @deprecated This method is deprecated since, node 10 is out of LTS. It may be removed in an upcoming major release.\n */\nfunction fromStream(stream) {\n    if (typeof stream[Symbol.asyncIterator] === 'function') {\n        return stream;\n    }\n    return _fromStream(stream);\n}\n\n/**\n * Combine multiple iterators into a single iterable. Reads one item off each iterable in order repeatedly until they are all exhausted. If you care less about order and want them faster see `parallelMerge()`.\n */\nasync function* merge(...iterables) {\n    const sources = new Set(iterables.map(getIterator));\n    while (sources.size > 0) {\n        for (const iterator of sources) {\n            const nextVal = await iterator.next();\n            if (nextVal.done) {\n                sources.delete(iterator);\n            }\n            else {\n                yield nextVal.value;\n            }\n        }\n    }\n}\n\nfunction pipeline(firstFn, ...fns) {\n    let previousFn = firstFn();\n    for (const func of fns) {\n        previousFn = func(previousFn);\n    }\n    return previousFn;\n}\n\nasync function* _parallelMap(concurrency, func, iterable) {\n    let transformError = null;\n    const wrapFunc = value => ({\n        value: func(value),\n    });\n    const stopOnError = async function* (source) {\n        for await (const value of source) {\n            if (transformError) {\n                return;\n            }\n            yield value;\n        }\n    };\n    const output = pipeline(() => iterable, buffer(1), stopOnError, map(wrapFunc), buffer(concurrency - 1));\n    const itr = getIterator(output);\n    while (true) {\n        const { value, done } = await itr.next();\n        if (done) {\n            break;\n        }\n        try {\n            const val = await value.value;\n            if (!transformError) {\n                yield val;\n            }\n        }\n        catch (error) {\n            transformError = error;\n        }\n    }\n    if (transformError) {\n        throw transformError;\n    }\n}\nfunction parallelMap(concurrency, func, iterable) {\n    if (func === undefined) {\n        return (curriedFunc, curriedIterable) => parallelMap(concurrency, curriedFunc, curriedIterable);\n    }\n    if (iterable === undefined) {\n        return curriedIterable => parallelMap(concurrency, func, curriedIterable);\n    }\n    if (concurrency === 1) {\n        return map(func, iterable);\n    }\n    return _parallelMap(concurrency, func, iterable);\n}\n\nfunction parallelFlatMap(concurrency, func, iterable) {\n    if (func === undefined) {\n        return (curriedFunc, curriedIterable) => curriedIterable\n            ? parallelFlatMap(concurrency, curriedFunc, curriedIterable)\n            : parallelFlatMap(concurrency, curriedFunc);\n    }\n    if (iterable === undefined) {\n        return (curriedIterable) => parallelFlatMap(concurrency, func, curriedIterable);\n    }\n    return filter(i => i !== undefined && i !== null, flatten(parallelMap(concurrency, func, iterable)));\n}\n\n/**\n *Combine multiple iterators into a single iterable. Reads one item off of every iterable and yields them as they resolve. This is useful for pulling items out of a collection of iterables as soon as they're available. Errors `iterables` are raised immediately.\n\n```ts\nimport { parallelMerge } from 'streaming-iterables'\nimport { getPokemon, getTransformer } from 'iterable-pokedex'\n\n// pokemon are much faster to load btw\nconst heros = parallelMerge(getPokemon(), getTransformer())\nfor await (const hero of heros) {\n  console.log(hero)\n}\n// charmander\n// bulbasaur\n// megatron\n// pikachu\n// eevee\n// bumblebee\n// jazz\n```\n */\nasync function* parallelMerge(...iterables) {\n    const inputs = iterables.map(getIterator);\n    const concurrentWork = new Set();\n    const values = new Map();\n    let lastError = null;\n    let errCb = null;\n    let valueCb = null;\n    const notifyError = err => {\n        lastError = err;\n        if (errCb) {\n            errCb(err);\n        }\n    };\n    const notifyDone = value => {\n        if (valueCb) {\n            valueCb(value);\n        }\n    };\n    const waitForQueue = () => new Promise((resolve, reject) => {\n        if (lastError) {\n            reject(lastError);\n        }\n        if (values.size > 0) {\n            return resolve();\n        }\n        valueCb = resolve;\n        errCb = reject;\n    });\n    const queueNext = input => {\n        const nextVal = Promise.resolve(input.next()).then(async ({ done, value }) => {\n            if (!done) {\n                values.set(input, value);\n            }\n            concurrentWork.delete(nextVal);\n        });\n        concurrentWork.add(nextVal);\n        nextVal.then(notifyDone, notifyError);\n    };\n    for (const input of inputs) {\n        queueNext(input);\n    }\n    while (true) {\n        // We technically don't have to check `values.size` as the for loop should have emptied it\n        // However I haven't yet found specs verifying that behavior, only tests\n        // the guard in waitForQueue() checking for values is in place for the same reason\n        if (concurrentWork.size === 0 && values.size === 0) {\n            return;\n        }\n        await waitForQueue();\n        for (const [input, value] of values) {\n            values.delete(input);\n            yield value;\n            queueNext(input);\n        }\n    }\n}\n\nasync function _reduce(func, start, iterable) {\n    let value = start;\n    for await (const nextItem of iterable) {\n        value = await func(value, nextItem);\n    }\n    return value;\n}\nfunction reduce(func, start, iterable) {\n    if (start === undefined) {\n        return (curriedStart, curriedIterable) => curriedIterable ? _reduce(func, curriedStart, curriedIterable) : reduce(func, curriedStart);\n    }\n    if (iterable === undefined) {\n        return (curriedIterable) => reduce(func, start, curriedIterable);\n    }\n    return _reduce(func, start, iterable);\n}\n\nasync function* _take(count, iterable) {\n    let taken = 0;\n    for await (const val of iterable) {\n        yield await val;\n        taken++;\n        if (taken >= count) {\n            break;\n        }\n    }\n}\nfunction* _syncTake(count, iterable) {\n    let taken = 0;\n    for (const val of iterable) {\n        yield val;\n        taken++;\n        if (taken >= count) {\n            break;\n        }\n    }\n}\nfunction take(count, iterable) {\n    if (iterable === undefined) {\n        return curriedIterable => take(count, curriedIterable);\n    }\n    if (iterable[Symbol.asyncIterator]) {\n        return _take(count, iterable);\n    }\n    return _syncTake(count, iterable);\n}\n\nasync function* _takeLast(count, iterable) {\n    const buffer = [];\n    for await (const res of iterable) {\n        buffer.push(res);\n        if (buffer.length > count) {\n            buffer.shift();\n        }\n    }\n    while (buffer.length) {\n        yield await buffer.shift();\n    }\n}\nfunction* _syncTakeLast(count, iterable) {\n    const buffer = [];\n    for (const res of iterable) {\n        buffer.push(res);\n        if (buffer.length > count) {\n            buffer.shift();\n        }\n    }\n    while (buffer.length) {\n        yield buffer.shift();\n    }\n}\nfunction takeLast(count, iterable) {\n    if (iterable === undefined) {\n        return curriedIterable => takeLast(count, curriedIterable);\n    }\n    if (iterable[Symbol.asyncIterator]) {\n        return _takeLast(count, iterable);\n    }\n    return _syncTakeLast(count, iterable);\n}\n\nasync function* _takeWhile(predicate, iterable) {\n    for await (const data of iterable) {\n        if (!await predicate(data)) {\n            return;\n        }\n        yield data;\n    }\n}\nfunction takeWhile(predicate, iterable) {\n    if (iterable === undefined) {\n        return (curriedIterable) => _takeWhile(predicate, curriedIterable);\n    }\n    return _takeWhile(predicate, iterable);\n}\n\nasync function* _asyncTap(func, iterable) {\n    for await (const val of iterable) {\n        await func(val);\n        yield val;\n    }\n}\nfunction tap(func, iterable) {\n    if (iterable === undefined) {\n        return (curriedIterable) => _asyncTap(func, curriedIterable);\n    }\n    return _asyncTap(func, iterable);\n}\n\nconst sleep = (ms) => new Promise(resolve => setTimeout(resolve, ms));\nfunction _throttle(limit, interval, iterable) {\n    if (!Number.isFinite(limit)) {\n        throw new TypeError('Expected `limit` to be a finite number');\n    }\n    if (limit <= 0) {\n        throw new TypeError('Expected `limit` to be greater than 0');\n    }\n    if (!Number.isFinite(interval)) {\n        throw new TypeError('Expected `interval` to be a finite number');\n    }\n    return (async function* __throttle() {\n        let sent = 0;\n        let time;\n        for await (const val of iterable) {\n            if (sent < limit) {\n                if (typeof time === 'undefined') {\n                    time = Date.now();\n                }\n                sent++;\n                yield val;\n                continue;\n            }\n            // Only wait if the interval hasn't already passed while we were\n            // yielding the previous values.\n            const elapsedMs = Date.now() - (time || 0);\n            const waitFor = interval - elapsedMs;\n            if (waitFor > 0) {\n                await sleep(waitFor);\n            }\n            time = Date.now();\n            sent = 1;\n            yield val;\n        }\n    })();\n}\nfunction throttle(limit, interval, iterable) {\n    if (iterable === undefined) {\n        return (curriedIterable) => _throttle(limit, interval, curriedIterable);\n    }\n    return _throttle(limit, interval, iterable);\n}\n\nfunction addTime(a, b) {\n    let seconds = a[0] + b[0];\n    let nanoseconds = a[1] + b[1];\n    if (nanoseconds >= 1000000000) {\n        const remainder = nanoseconds % 1000000000;\n        seconds += (nanoseconds - remainder) / 1000000000;\n        nanoseconds = remainder;\n    }\n    return [seconds, nanoseconds];\n}\nasync function* _asyncTime(config, iterable) {\n    const itr = iterable[Symbol.asyncIterator]();\n    let total = [0, 0];\n    while (true) {\n        const start = process.hrtime();\n        const { value, done } = await itr.next();\n        const delta = process.hrtime(start);\n        total = addTime(total, delta);\n        if (config.progress) {\n            config.progress(delta, total);\n        }\n        if (done) {\n            if (config.total) {\n                config.total(total);\n            }\n            return value;\n        }\n        yield value;\n    }\n}\nfunction* _syncTime(config, iterable) {\n    const itr = iterable[Symbol.iterator]();\n    let total = [0, 0];\n    while (true) {\n        const start = process.hrtime();\n        const { value, done } = itr.next();\n        const delta = process.hrtime(start);\n        total = addTime(total, delta);\n        if (config.progress) {\n            config.progress(delta, total);\n        }\n        if (done) {\n            if (config.total) {\n                config.total(total);\n            }\n            return value;\n        }\n        yield value;\n    }\n}\nfunction time(config = {}, iterable) {\n    if (iterable === undefined) {\n        return curriedIterable => time(config, curriedIterable);\n    }\n    if (iterable[Symbol.asyncIterator] !== undefined) {\n        return _asyncTime(config, iterable);\n    }\n    else {\n        return _syncTime(config, iterable);\n    }\n}\n\nfunction _transform(concurrency, func, iterable) {\n    const iterator = getIterator(iterable);\n    const resultQueue = [];\n    const readQueue = [];\n    let ended = false;\n    let reading = false;\n    let inflightCount = 0;\n    let lastError = null;\n    function fulfillReadQueue() {\n        while (readQueue.length > 0 && resultQueue.length > 0) {\n            const { resolve } = readQueue.shift();\n            const value = resultQueue.shift();\n            resolve({ done: false, value });\n        }\n        while (readQueue.length > 0 && inflightCount === 0 && ended) {\n            const { resolve, reject } = readQueue.shift();\n            if (lastError) {\n                reject(lastError);\n                lastError = null;\n            }\n            else {\n                resolve({ done: true, value: undefined });\n            }\n        }\n    }\n    async function fillQueue() {\n        if (ended) {\n            fulfillReadQueue();\n            return;\n        }\n        if (reading) {\n            return;\n        }\n        if (inflightCount + resultQueue.length >= concurrency) {\n            return;\n        }\n        reading = true;\n        inflightCount++;\n        try {\n            const { done, value } = await iterator.next();\n            if (done) {\n                ended = true;\n                inflightCount--;\n                fulfillReadQueue();\n            }\n            else {\n                mapAndQueue(value);\n            }\n        }\n        catch (error) {\n            ended = true;\n            inflightCount--;\n            lastError = error;\n            fulfillReadQueue();\n        }\n        reading = false;\n        fillQueue();\n    }\n    async function mapAndQueue(itrValue) {\n        try {\n            const value = await func(itrValue);\n            resultQueue.push(value);\n        }\n        catch (error) {\n            ended = true;\n            lastError = error;\n        }\n        inflightCount--;\n        fulfillReadQueue();\n        fillQueue();\n    }\n    async function next() {\n        if (resultQueue.length === 0) {\n            const deferred = defer();\n            readQueue.push(deferred);\n            fillQueue();\n            return deferred.promise;\n        }\n        const value = resultQueue.shift();\n        fillQueue();\n        return { done: false, value };\n    }\n    const asyncIterableIterator = {\n        next,\n        [Symbol.asyncIterator]: () => asyncIterableIterator,\n    };\n    return asyncIterableIterator;\n}\nfunction transform(concurrency, func, iterable) {\n    if (func === undefined) {\n        return (curriedFunc, curriedIterable) => curriedIterable\n            ? transform(concurrency, curriedFunc, curriedIterable)\n            : transform(concurrency, curriedFunc);\n    }\n    if (iterable === undefined) {\n        return (curriedIterable) => transform(concurrency, func, curriedIterable);\n    }\n    return _transform(concurrency, func, iterable);\n}\n\nasync function _writeToStream(stream, iterable) {\n    let lastError = null;\n    let errCb = null;\n    let drainCb = null;\n    const notifyError = err => {\n        lastError = err;\n        if (errCb) {\n            errCb(err);\n        }\n    };\n    const notifyDrain = () => {\n        if (drainCb) {\n            drainCb();\n        }\n    };\n    const cleanup = () => {\n        stream.removeListener('error', notifyError);\n        stream.removeListener('drain', notifyDrain);\n    };\n    stream.once('error', notifyError);\n    const waitForDrain = () => new Promise((resolve, reject) => {\n        if (lastError) {\n            return reject(lastError);\n        }\n        stream.once('drain', notifyDrain);\n        drainCb = resolve;\n        errCb = reject;\n    });\n    for await (const value of iterable) {\n        if (stream.write(value) === false) {\n            await waitForDrain();\n        }\n        if (lastError) {\n            break;\n        }\n    }\n    cleanup();\n    if (lastError) {\n        throw lastError;\n    }\n}\nfunction writeToStream(stream, iterable) {\n    if (iterable === undefined) {\n        return (curriedIterable) => _writeToStream(stream, curriedIterable);\n    }\n    return _writeToStream(stream, iterable);\n}\n\nexport { batch, batchWithTimeout, buffer, collect, concat, consume, drop, filter, flatMap, flatTransform, flatten, fromStream, getIterator, map, merge, parallelFlatMap, parallelMap, parallelMerge, pipeline, reduce, take, takeLast, takeWhile, tap, throttle, time, transform, writeToStream };\n","import { Data, Interest, Nack, Name, NameMultiSet } from \"@ndn/packet\";\nimport { safeIter } from \"@ndn/util\";\nimport { pushable } from \"it-pushable\";\nimport { filter, pipeline, tap } from \"streaming-iterables\";\nimport { TypedEventTarget } from \"typescript-event-target\";\nimport { Forwarder } from \"./forwarder_browser.js\";\nfunction duplexFromRxTx(rxtx) {\n    return (iterable) => {\n        const rxtxD = rxtx;\n        if (typeof rxtxD.duplex === \"function\") {\n            return rxtxD.duplex(iterable);\n        }\n        const rxtxS = rxtx;\n        rxtxS.tx(iterable);\n        return rxtxS.rx;\n    };\n}\nfunction computeAnnouncement(name, announcement) {\n    switch (typeof announcement) {\n        case \"number\": {\n            return name.getPrefix(announcement);\n        }\n        case \"boolean\": {\n            return announcement ? name : undefined;\n        }\n    }\n    return Name.from(announcement);\n}\nexport class FaceImpl extends TypedEventTarget {\n    fw;\n    rxtx;\n    attributes;\n    routes = new NameMultiSet();\n    announcements = new NameMultiSet();\n    running = true;\n    txQueue = pushable({ objectMode: true });\n    constructor(fw, rxtx, attributes) {\n        super();\n        this.fw = fw;\n        this.rxtx = rxtx;\n        this.attributes = {\n            local: false,\n            advertiseFrom: true,\n            routeCapture: true,\n            ...rxtx.attributes,\n            ...attributes,\n        };\n        fw.dispatchTypedEvent(\"faceadd\", new Forwarder.FaceEvent(\"faceadd\", this));\n        fw.faces.add(this);\n        void pipeline(() => this.txLoop(), tap((pkt) => fw.dispatchPacketEvent(\"pkttx\", this, pkt)), duplexFromRxTx(rxtx), tap((pkt) => fw.dispatchPacketEvent(\"pktrx\", this, pkt)), this.rxLoop);\n        rxtx.addEventListener?.(\"up\", this.handleLowerUp);\n        rxtx.addEventListener?.(\"down\", this.handleLowerDown);\n    }\n    close() {\n        if (!this.running) {\n            return;\n        }\n        this.running = false;\n        this.rxtx.removeEventListener?.(\"up\", this.handleLowerUp);\n        this.rxtx.removeEventListener?.(\"down\", this.handleLowerDown);\n        this.fw.faces.delete(this);\n        for (const [name] of this.routes.multiplicities()) {\n            this.fw.fib.delete(this, name.valueHex);\n        }\n        for (const [name] of this.announcements.multiplicities()) {\n            this.fw.readvertise.removeAnnouncement(this, name);\n        }\n        this.txQueue.end(new Error(\"close\"));\n        this.dispatchTypedEvent(\"close\", new Event(\"close\"));\n        this.fw.dispatchTypedEvent(\"facerm\", new Forwarder.FaceEvent(\"facerm\", this));\n    }\n    toString() {\n        return this.attributes.describe ?? \"FwFace\";\n    }\n    hasRoute(nameInput) {\n        const name = Name.from(nameInput);\n        return this.routes.count(name) > 0;\n    }\n    addRoute(nameInput, announcement = true) {\n        const name = Name.from(nameInput);\n        this.fw.dispatchTypedEvent(\"prefixadd\", new Forwarder.PrefixEvent(\"prefixadd\", this, name));\n        if (this.routes.add(name) === 1) {\n            this.fw.fib.insert(this, name.valueHex, this.attributes.routeCapture);\n        }\n        const ann = computeAnnouncement(name, announcement);\n        if (ann) {\n            this.addAnnouncement(ann);\n        }\n    }\n    removeRoute(nameInput, announcement = true) {\n        const name = Name.from(nameInput);\n        const ann = computeAnnouncement(name, announcement);\n        if (ann) {\n            this.removeAnnouncement(ann);\n        }\n        if (this.routes.remove(name) === 0) {\n            this.fw.fib.delete(this, name.valueHex);\n        }\n        this.fw.dispatchTypedEvent(\"prefixrm\", new Forwarder.PrefixEvent(\"prefixrm\", this, name));\n    }\n    addAnnouncement(nameInput) {\n        if (!this.attributes.advertiseFrom) {\n            return;\n        }\n        const name = Name.from(nameInput);\n        if (this.announcements.add(name) === 1) {\n            this.fw.readvertise.addAnnouncement(this, name);\n        }\n    }\n    removeAnnouncement(nameInput) {\n        if (!this.attributes.advertiseFrom) {\n            return;\n        }\n        const name = Name.from(nameInput);\n        if (this.announcements.remove(name) === 0) {\n            this.fw.readvertise.removeAnnouncement(this, name);\n        }\n    }\n    /** Transmit a packet on the face. */\n    send(pkt) {\n        if (!this.running) {\n            return;\n        }\n        this.txQueue.push(pkt);\n    }\n    handleLowerUp = () => {\n        this.dispatchTypedEvent(\"up\", new Event(\"up\"));\n    };\n    handleLowerDown = () => {\n        this.dispatchTypedEvent(\"down\", new Event(\"down\"));\n    };\n    rxLoop = async (input) => {\n        for await (const pkt of filter(() => this.running, input)) {\n            switch (true) {\n                case pkt.l3 instanceof Interest: {\n                    this.fw[pkt.cancel ? \"cancelInterest\" : \"processInterest\"](this, pkt);\n                    break;\n                }\n                case pkt.l3 instanceof Data: {\n                    this.fw.processData(this, pkt);\n                    break;\n                }\n                case pkt.l3 instanceof Nack: {\n                    this.fw.processNack(this, pkt);\n                    break;\n                }\n            }\n        }\n        this.close();\n    };\n    txLoop() {\n        return safeIter(this.txQueue);\n    }\n}\n","import { __importDefault, __importStar } from \"tslib\";\nimport { lpm } from \"@ndn/packet\";\nimport { assert } from \"@ndn/util\";\nimport _cjsDefaultImport0 from \"mnemonist/default-map.js\"; const DefaultMap = __importDefault(_cjsDefaultImport0).default;\nclass FibEntry {\n    nexthops = new Map(); // face=>capture\n}\nexport class Fib {\n    table = new DefaultMap(() => new FibEntry());\n    insert(face, nameHex, capture) {\n        const entry = this.table.get(nameHex);\n        assert(!entry.nexthops.has(face));\n        entry.nexthops.set(face, capture);\n    }\n    delete(face, nameHex) {\n        const entry = this.table.peek(nameHex);\n        assert(!!entry);\n        entry.nexthops.delete(face);\n        if (entry.nexthops.size === 0) {\n            this.table.delete(nameHex);\n        }\n    }\n    lookup(name) {\n        const result = new Set();\n        for (const entry of lpm(name, (prefixHex) => this.table.peek(prefixHex))) {\n            let capture = false;\n            for (const [nh, c] of entry.nexthops) {\n                result.add(nh);\n                capture ||= c;\n            }\n            if (capture) {\n                break;\n            }\n        }\n        return result;\n    }\n}\n","import { toHex } from \"@ndn/util\";\n/**\n * Name longest prefix match algorithm.\n * @param name target name.\n * @param get callback function to retrieve entry by hexadecimal name prefix.\n */\nexport function* lpm(name, get) {\n    const prefixes = [\"\"];\n    let s = \"\";\n    for (const comp of name.comps) {\n        s += toHex(comp.tlv);\n        prefixes.push(s);\n    }\n    while (prefixes.length > 0) {\n        const prefix = prefixes.pop();\n        const entry = get(prefix);\n        if (entry !== undefined) {\n            yield entry;\n        }\n    }\n}\n","var n=function(n){return 1e3*n[0]+n[1]/1e6},r=function(n){return Number(n.toFixed(2))},e=function(n,e){var t=function(){return r(e())};return t.startedAt=function(){return n},t.seconds=t.s=function(){return r(e()/1e3)},t.milliseconds=t.ms=function(){return r(e())},t.microseconds=t.us=function(){return r(1e3*e())},t.nanoseconds=t.ns=function(){return r(1e6*e())},t},t=\"undefined\"!=typeof process&&process.hrtime?function(){var r=process.hrtime();return e(n(r),function(){return n(process.hrtime(r))})}:\"undefined\"!=typeof window&&window.performance?function(){var n=window.performance.now();return e(n,function(){return window.performance.now()-n})}:function(){var n=Date.now();return e(n,function(){return Date.now()-n})};export{t as default};\n","export var FwPacket;\n(function (FwPacket) {\n    function create(l3, token) {\n        return { l3, token };\n    }\n    FwPacket.create = create;\n    /** Whether this is a plain packet that can be sent on the wire. */\n    function isEncodable({ reject, cancel }) {\n        return !reject && !cancel;\n    }\n    FwPacket.isEncodable = isEncodable;\n})(FwPacket || (FwPacket = {}));\n/** Indicate an Interest has been rejected. */\nexport class RejectInterest {\n    reject;\n    l3;\n    token;\n    constructor(reject, l3, token) {\n        this.reject = reject;\n        this.l3 = l3;\n        this.token = token;\n    }\n}\n/** Request to cancel a pending Interest. */\nexport class CancelInterest {\n    l3;\n    token;\n    constructor(l3, token) {\n        this.l3 = l3;\n        this.token = token;\n    }\n    cancel = true;\n}\n","import { __importDefault, __importStar } from \"tslib\";\nimport { Interest } from \"@ndn/packet\";\nimport hirestime from \"hirestime\";\nimport _cjsDefaultImport0 from \"mnemonist/default-map.js\"; const DefaultMap = __importDefault(_cjsDefaultImport0).default;\nimport { filter, flatMap, pipeline, reduce, tap } from \"streaming-iterables\";\nimport { FwPacket, RejectInterest } from \"./packet_browser.js\";\nconst getNow = hirestime();\n/** Aggregated pending Interests from one or more downstream faces. */\nexport class PitEntry {\n    pit;\n    key;\n    /** Representative Interest. */\n    interest;\n    /** Outgoing numeric PIT token. */\n    token;\n    /** Downstream records. */\n    dnRecords = new DefaultMap(() => ({ nRx: 0, expire: 0, nonce: 0, token: undefined }));\n    /** Last expiration time among downstream. */\n    lastExpire = 0;\n    /** Entry expiration timer; should match this.lastExpire. */\n    expireTimer;\n    constructor(pit, key, interest) {\n        this.pit = pit;\n        this.key = key;\n        this.interest = new Interest(interest);\n    }\n    /** Record Interest from downstream. */\n    receiveInterest(face, { l3: interest, token }) {\n        const now = getNow();\n        const expire = now + interest.lifetime;\n        const nonce = interest.nonce ?? Interest.generateNonce();\n        const dnR = this.dnRecords.get(face);\n        ++dnR.nRx;\n        dnR.expire = expire;\n        dnR.nonce = nonce;\n        dnR.token = token;\n        this.updateExpire(now);\n    }\n    /** Record Interest cancellation from downstream. */\n    cancelInterest(face) {\n        const dnR = this.dnRecords.peek(face);\n        if (!dnR) {\n            return;\n        }\n        this.dnRecords.delete(face);\n        this.updateExpire();\n        face.send(new RejectInterest(\"cancel\", this.interest, dnR.token));\n    }\n    /** Forward Interest to upstream. */\n    forwardInterest(face) {\n        const lifetime = this.lastExpire - getNow();\n        if (lifetime <= 0) {\n            return;\n        }\n        this.interest.lifetime = lifetime;\n        face.send(FwPacket.create(this.interest, this.token));\n    }\n    /** Determine which downstream faces should receive Data from upstream. */\n    *returnData(up) {\n        clearTimeout(this.expireTimer);\n        this.pit.eraseEntry(this);\n        const now = getNow();\n        for (const [dn, { expire, token }] of this.dnRecords) {\n            if (expire > now && dn !== up) {\n                yield { dn, token };\n            }\n        }\n    }\n    updateExpire(now = getNow()) {\n        let lastExpire = 0;\n        for (const { expire } of this.dnRecords.values()) {\n            lastExpire = Math.max(lastExpire, expire);\n        }\n        if (lastExpire <= now) {\n            lastExpire = 0;\n        }\n        if (this.lastExpire === lastExpire) {\n            return;\n        }\n        this.lastExpire = lastExpire;\n        clearTimeout(this.expireTimer);\n        if (this.lastExpire === 0) {\n            this.expire();\n        }\n        else {\n            this.pit.insertEntry(this);\n            this.expireTimer = setTimeout(this.expire, this.lastExpire - now);\n        }\n    }\n    expire = () => {\n        this.pit.eraseEntry(this);\n        for (const [face, { token }] of this.dnRecords) {\n            face.send(new RejectInterest(\"expire\", this.interest, token));\n        }\n    };\n}\n/** Pending Interest table. */\nexport class Pit {\n    dataNoTokenMatch;\n    constructor(dataNoTokenMatch) {\n        this.dataNoTokenMatch = dataNoTokenMatch;\n    }\n    byName = new Map();\n    byToken = new Map();\n    lastToken = 0;\n    generateToken() {\n        do {\n            --this.lastToken;\n            if (this.lastToken <= 0) {\n                this.lastToken = 0xFFFFFFFF;\n            }\n        } while (this.byToken.has(this.lastToken));\n        return this.lastToken;\n    }\n    insertEntry(entry) {\n        this.byName.set(entry.key, entry);\n        entry.token ??= this.generateToken();\n        this.byToken.set(entry.token, entry);\n    }\n    eraseEntry(entry) {\n        this.byName.delete(entry.key);\n        this.byToken.delete(entry.token);\n    }\n    /**\n     * Cancel timers and other I/O resources.\n     * This instance should not be used after this operation.\n     */\n    close() {\n        for (const entry of this.byName.values()) {\n            clearTimeout(entry.expireTimer);\n        }\n    }\n    lookup({ l3: interest }, canInsert = true) {\n        const key = `${interest.name.valueHex} ${interest.canBePrefix ? \"+\" : \"-\"}${interest.mustBeFresh ? \"+\" : \"-\"}`;\n        let entry = this.byName.get(key);\n        if (!entry && canInsert) {\n            entry = new PitEntry(this, key, interest);\n        }\n        return entry;\n    }\n    /**\n     * Satisfy pending Interests with incoming Data.\n     * @returns true if Data satisfies any pending Interest; false if Data is unsolicited.\n     */\n    async satisfy(face, { l3: data, token }) {\n        const nSentData = await pipeline(() => this.findPotentialMatches(data, token), filter(({ interest }) => data.canSatisfy(interest)), flatMap((entry) => entry.returnData(face)), tap(({ dn, token: dnToken }) => dn.send(FwPacket.create(data, dnToken))), reduce((count) => count + 1, 0));\n        return nSentData > 0;\n    }\n    *findPotentialMatches(data, token) {\n        if (typeof token === \"number\") {\n            const entry = this.byToken.get(token);\n            if (entry) {\n                yield entry;\n            }\n            return;\n        }\n        if (!this.dataNoTokenMatch) {\n            return;\n        }\n        let keySuffixes = [\" ++\", \" +-\", \" -+\", \" --\"];\n        for (let prefix = data.name; prefix.length > 0; prefix = prefix.getPrefix(-1)) {\n            const prefixHex = prefix.valueHex;\n            for (const keySuffix of keySuffixes) {\n                const entry = this.byName.get(prefixHex + keySuffix);\n                if (entry) {\n                    yield entry;\n                }\n            }\n            keySuffixes = [\" ++\", \" +-\"];\n        }\n    }\n}\n","import { __importDefault, __importStar } from \"tslib\";\nimport { NameMap, NameMultiMap } from \"@ndn/packet\";\nimport { pushable } from \"it-pushable\";\nimport _cjsDefaultImport0 from \"retry\"; const retry = __importDefault(_cjsDefaultImport0).default;\nimport { Forwarder } from \"./forwarder_browser.js\";\n/**\n * Manage advertised prefix of the forwarder.\n *\n * This class keeps track of what prefixes are announced by the owning forwarder.\n * It accepts announcements from faces attached to the forwarder, and then informs\n * each destination on what prefixes should be advertised.\n */\nexport class Readvertise {\n    fw;\n    constructor(fw) {\n        this.fw = fw;\n    }\n    announcements = new NameMultiMap();\n    destinations = new Set();\n    addAnnouncement(face, name) {\n        if (this.announcements.add(name, face) > 1) {\n            return;\n        }\n        this.fw.dispatchTypedEvent(\"annadd\", new Forwarder.AnnouncementEvent(\"annadd\", name));\n        for (const dest of this.destinations) {\n            dest.advertise(name);\n        }\n    }\n    removeAnnouncement(face, name) {\n        if (this.announcements.remove(name, face) > 0) {\n            return;\n        }\n        this.fw.dispatchTypedEvent(\"annrm\", new Forwarder.AnnouncementEvent(\"annrm\", name));\n        for (const dest of this.destinations) {\n            dest.withdraw(name);\n        }\n    }\n    /**\n     * Cancel timers and other I/O resources.\n     * This instance should not be used after this operation.\n     */\n    close() {\n        for (const dest of this.destinations) {\n            dest.disable();\n        }\n    }\n}\n/**\n * A destination of prefix advertisement.\n *\n * Generally, a prefix advertised to a destination would cause Interests matching the prefix\n * to come to the forwarder, aka prefix registration.\n */\nexport class ReadvertiseDestination {\n    retryOptions;\n    readvertise;\n    table = new NameMap();\n    queue = pushable({ objectMode: true });\n    closed = false;\n    constructor(retryOptions = {\n        forever: true,\n        minTimeout: 5000,\n        maxTimeout: 60000,\n        randomize: true,\n    }) {\n        this.retryOptions = retryOptions;\n    }\n    /** Enable and attach to a forwarder. */\n    enable(fw) {\n        this.readvertise = fw.readvertise;\n        this.readvertise.destinations.add(this);\n        for (const [name] of this.readvertise.announcements.associations()) {\n            this.queue.push(name);\n        }\n        void this.process();\n    }\n    /**\n     * Disable and detach from forwarder.\n     *\n     * Once detached, this instance is no longer usable.\n     */\n    disable() {\n        this.readvertise?.destinations.delete(this);\n        this.readvertise = undefined;\n        for (const [name, record] of this.table) {\n            this.queue.push(name);\n            record.status = ReadvertiseDestination.Status.WITHDRAWING;\n        }\n        this.queue.end();\n        this.closed = true;\n    }\n    /** Set a prefix to be advertised. */\n    advertise(name) {\n        let record = this.table.get(name);\n        if (!record) {\n            record = {\n                status: ReadvertiseDestination.Status.ADVERTISING,\n                state: this.makeState(name),\n            };\n            this.table.set(name, record);\n        }\n        record.status = ReadvertiseDestination.Status.ADVERTISING;\n        this.restart(name, record);\n    }\n    /** Set a prefix to be withdrawn. */\n    withdraw(name) {\n        const record = this.table.get(name);\n        if (!record) {\n            return;\n        }\n        record.status = ReadvertiseDestination.Status.WITHDRAWING;\n        this.restart(name, record);\n    }\n    restart(name, record) {\n        record.retry?.stop();\n        record.retry = retry.operation(this.retryOptions);\n        record.retry.attempt(() => {\n            if (this.closed) {\n                record.retry.stop();\n            }\n            else {\n                this.queue.push(name);\n            }\n        });\n    }\n    async process() {\n        for await (const name of this.queue) {\n            const record = this.table.get(name);\n            if (!record) {\n                continue;\n            }\n            const { status, retry, state } = record;\n            switch (status) {\n                case ReadvertiseDestination.Status.ADVERTISING: {\n                    try {\n                        await this.doAdvertise(name, state);\n                        if (record.status === ReadvertiseDestination.Status.ADVERTISING) {\n                            record.status = ReadvertiseDestination.Status.ADVERTISED;\n                            retry.stop();\n                        }\n                    }\n                    catch (err) {\n                        retry.retry(err);\n                    }\n                    break;\n                }\n                case ReadvertiseDestination.Status.WITHDRAWING: {\n                    try {\n                        await this.doWithdraw(name, state);\n                        if (record.status === ReadvertiseDestination.Status.WITHDRAWING) {\n                            record.status = ReadvertiseDestination.Status.WITHDRAWN;\n                            retry.stop();\n                            this.table.delete(name);\n                        }\n                    }\n                    catch (err) {\n                        retry.retry(err);\n                    }\n                    break;\n                }\n            }\n        }\n    }\n    /** Create per-prefix state. */\n    makeState(name) {\n        void name;\n        return {};\n    }\n}\n(function (ReadvertiseDestination) {\n    let Status;\n    (function (Status) {\n        Status[Status[\"ADVERTISING\"] = 0] = \"ADVERTISING\";\n        Status[Status[\"ADVERTISED\"] = 1] = \"ADVERTISED\";\n        Status[Status[\"WITHDRAWING\"] = 2] = \"WITHDRAWING\";\n        Status[Status[\"WITHDRAWN\"] = 3] = \"WITHDRAWN\";\n    })(Status = ReadvertiseDestination.Status || (ReadvertiseDestination.Status = {}));\n})(ReadvertiseDestination || (ReadvertiseDestination = {}));\n","import { trackEventListener } from \"@ndn/util\";\nimport { TypedEventTarget } from \"typescript-event-target\";\nimport { FaceImpl } from \"./face_browser.js\";\nimport { Fib } from \"./fib_browser.js\";\nimport { Pit } from \"./pit_browser.js\";\nimport { Readvertise } from \"./readvertise_browser.js\";\nexport var Forwarder;\n(function (Forwarder) {\n    Forwarder.DefaultOptions = {\n        dataNoTokenMatch: true,\n    };\n    /** Create a new forwarding plane. */\n    function create(options) {\n        return new ForwarderImpl({ ...Forwarder.DefaultOptions, ...options });\n    }\n    Forwarder.create = create;\n    let defaultInstance;\n    /** Access the default forwarding plane instance. */\n    function getDefault() {\n        if (!defaultInstance) {\n            defaultInstance = Forwarder.create();\n        }\n        return defaultInstance;\n    }\n    Forwarder.getDefault = getDefault;\n    /** Replace the default forwarding plane instance. */\n    function replaceDefault(fw) {\n        defaultInstance = fw;\n    }\n    Forwarder.replaceDefault = replaceDefault;\n    /** Delete default instance (mainly for unit testing). */\n    function deleteDefault() {\n        if (!defaultInstance) {\n            return;\n        }\n        defaultInstance.close();\n        defaultInstance = undefined;\n    }\n    Forwarder.deleteDefault = deleteDefault;\n    /** Face event. */\n    class FaceEvent extends Event {\n        face;\n        constructor(type, face) {\n            super(type);\n            this.face = face;\n        }\n    }\n    Forwarder.FaceEvent = FaceEvent;\n    /** Prefix registration event. */\n    class PrefixEvent extends Event {\n        face;\n        prefix;\n        constructor(type, face, prefix) {\n            super(type);\n            this.face = face;\n            this.prefix = prefix;\n        }\n    }\n    Forwarder.PrefixEvent = PrefixEvent;\n    /** Prefix announcement event. */\n    class AnnouncementEvent extends Event {\n        name;\n        constructor(type, name) {\n            super(type);\n            this.name = name;\n        }\n    }\n    Forwarder.AnnouncementEvent = AnnouncementEvent;\n    /** Packet event. */\n    class PacketEvent extends Event {\n        face;\n        packet;\n        constructor(type, face, packet) {\n            super(type);\n            this.face = face;\n            this.packet = packet;\n        }\n    }\n    Forwarder.PacketEvent = PacketEvent;\n})(Forwarder || (Forwarder = {}));\nexport class ForwarderImpl extends TypedEventTarget {\n    opts;\n    nodeNames = [];\n    faces = new Set();\n    fib = new Fib();\n    pit;\n    readvertise = new Readvertise(this);\n    maybeHaveEventListener = trackEventListener(this);\n    constructor(opts) {\n        super();\n        this.opts = opts;\n        this.pit = new Pit(opts.dataNoTokenMatch);\n    }\n    addFace(face, attributes = {}) {\n        return new FaceImpl(this, face, attributes);\n    }\n    pickInterestForwardingName(interest) {\n        const fhName = interest.fwHint?.delegations[0];\n        if (fhName && this.nodeNames.every((nodeName) => !fhName.isPrefixOf(nodeName))) {\n            return fhName;\n        }\n        return interest.name;\n    }\n    /** Process incoming Interest. */\n    processInterest(face, pkt) {\n        const pi = this.pit.lookup(pkt);\n        pi.receiveInterest(face, pkt);\n        const fwName = this.pickInterestForwardingName(pkt.l3);\n        for (const nh of this.fib.lookup(fwName)) {\n            if (nh !== face) {\n                pi.forwardInterest(nh);\n            }\n        }\n    }\n    /** Process incoming cancel Interest request. */\n    cancelInterest(face, pkt) {\n        const pi = this.pit.lookup(pkt, false);\n        pi?.cancelInterest(face);\n    }\n    /** Process incoming Data. */\n    processData(face, pkt) {\n        void this.pit.satisfy(face, pkt);\n    }\n    /** Process incoming Nack. */\n    processNack(face, nack) {\n        // ignore Nack\n        void face;\n        void nack;\n    }\n    close() {\n        this.pit.close();\n        this.readvertise.close();\n        for (const face of this.faces) {\n            face.close();\n        }\n    }\n    dispatchPacketEvent(type, face, pkt) {\n        if (this.maybeHaveEventListener[type]) {\n            this.dispatchTypedEvent(type, new Forwarder.PacketEvent(type, face, pkt));\n        }\n    }\n}\n","import { randomJitter } from \"@ndn/util\";\n/** Construct RetxGenerator from RetxPolicy. */\nexport function makeRetxGenerator(policy) {\n    if (!policy) {\n        return () => [];\n    }\n    if (typeof policy === \"number\") {\n        return makeRetxGenerator({ limit: policy });\n    }\n    if (typeof policy === \"function\") {\n        return policy;\n    }\n    return function* (interestLifetime) {\n        const { limit = 0, interval = interestLifetime * 0.5, randomize = 0.1, backoff = 1, max = interestLifetime * 0.9, } = policy;\n        const jitter = randomJitter(randomize);\n        let nextInterval = interval;\n        for (let i = 0; i < limit; ++i) {\n            yield nextInterval * jitter();\n            nextInterval = Math.min(nextInterval * backoff, max);\n        }\n    };\n}\n","/**\n * Create a random jitter generator function.\n * @param r jitter factor around 1.\n * @param x median value.\n * @returns jitter generator function.\n *\n * randomJitter(0.1, 2) generates random values within [1.8, 2.2].\n */\nexport function randomJitter(r, x = 1) {\n    r = Math.max(0, Math.min(r, 1));\n    const min = 1 - r;\n    const distance = 2 * r;\n    return () => x * (min + distance * Math.random());\n}\n","import { __importDefault, __importStar } from \"tslib\";\nimport { Forwarder } from \"@ndn/fw\";\nimport _cjsDefaultImport0 from \"applymixins\"; const applyMixins = __importDefault(_cjsDefaultImport0).default;\nimport { EndpointConsumer } from \"./consumer_browser.js\";\nimport { EndpointProducer } from \"./producer_browser.js\";\n/**\n * Endpoint is the main entry point for an application to interact with the forwarding plane.\n * It provides basic consumer and producer functionality.\n */\nexport class Endpoint {\n    opts;\n    fw;\n    constructor(opts = {}) {\n        this.opts = opts;\n        this.fw = opts.fw ?? Forwarder.getDefault();\n    }\n}\napplyMixins(Endpoint, [EndpointConsumer, EndpointProducer]);\n(function (Endpoint) {\n    /** Delete default Forwarder instance (mainly for unit testing). */\n    Endpoint.deleteDefaultForwarder = Forwarder.deleteDefault;\n})(Endpoint || (Endpoint = {}));\n","import { CancelInterest, FwPacket } from \"@ndn/fw\";\nimport { Data, Interest } from \"@ndn/packet\";\nimport { pushable } from \"it-pushable\";\nimport { makeRetxGenerator } from \"./retx_browser.js\";\n/** Consumer functionality of Endpoint. */\nexport class EndpointConsumer {\n    /** Consume a single piece of Data. */\n    consume(interestInput, opts = {}) {\n        const interest = interestInput instanceof Interest ? interestInput : new Interest(interestInput);\n        const { describe = `consume(${interest.name})`, signal, modifyInterest, retx, verifier, } = { ...this.opts, ...opts };\n        Interest.makeModifyFunc(modifyInterest)(interest);\n        let nRetx = -1;\n        const retxGen = makeRetxGenerator(retx)(interest.lifetime)[Symbol.iterator]();\n        const promise = new Promise((resolve, reject) => {\n            const rx = pushable({ objectMode: true });\n            let timer;\n            const cancelRetx = () => {\n                clearTimeout(timer);\n                timer = undefined;\n            };\n            const sendInterest = () => {\n                cancelRetx();\n                const { value, done } = retxGen.next();\n                if (!done) {\n                    timer = setTimeout(sendInterest, value);\n                }\n                rx.push(FwPacket.create(interest));\n                ++nRetx;\n            };\n            const onAbort = () => {\n                cancelRetx();\n                rx.push(new CancelInterest(interest));\n            };\n            signal?.addEventListener(\"abort\", onAbort);\n            this.fw.addFace({\n                rx,\n                async tx(iterable) {\n                    for await (const pkt of iterable) {\n                        if (pkt.l3 instanceof Data) {\n                            try {\n                                await verifier?.verify(pkt.l3);\n                            }\n                            catch (err) {\n                                reject(new Error(`Data verify failed: ${err} @${describe}`));\n                                break;\n                            }\n                            resolve(pkt.l3);\n                            break;\n                        }\n                        if (pkt.reject && !timer) {\n                            reject(new Error(`Interest rejected: ${pkt.reject} @${describe}`));\n                            break;\n                        }\n                    }\n                    cancelRetx();\n                    signal?.removeEventListener(\"abort\", onAbort);\n                    rx.end();\n                },\n            }, {\n                describe,\n                local: true,\n            });\n            sendInterest();\n        });\n        return Object.defineProperties(promise, {\n            interest: { value: interest },\n            nRetx: { get() { return nRetx; } },\n        });\n    }\n}\n","import { FwPacket } from \"@ndn/fw\";\nimport { Data, Interest, Name, SigType } from \"@ndn/packet\";\nimport { flatTransform } from \"streaming-iterables\";\n/** Producer functionality of Endpoint. */\nexport class EndpointProducer {\n    /**\n     * Start a producer.\n     * @param prefixInput prefix registration; if undefined, prefixes may be added later.\n     * @param handler function to handle incoming Interest.\n     */\n    produce(prefixInput, handler, opts = {}) {\n        const prefix = prefixInput === undefined ? undefined : new Name(prefixInput);\n        const { describe = `produce(${prefix})`, signal, routeCapture = true, announcement, concurrency = 1, dataSigner, dataBuffer, autoBuffer = true, } = { ...this.opts, ...opts };\n        let producer; // eslint-disable-line prefer-const\n        const processInterestUnbuffered = async (interest) => {\n            const data = await handler(interest, producer);\n            if (!(data instanceof Data)) {\n                return undefined;\n            }\n            await signUnsignedData(data, dataSigner);\n            if (!await data.canSatisfy(interest)) { // isCacheLookup=false because the buffer is not considered a cache\n                return undefined;\n            }\n            return data;\n        };\n        let processInterest = processInterestUnbuffered;\n        if (dataBuffer) {\n            processInterest = async (interest) => {\n                let found = await dataBuffer.find(interest);\n                if (!found) {\n                    const output = await processInterestUnbuffered(interest);\n                    if (output) {\n                        if (autoBuffer) {\n                            await dataBuffer.insert(output);\n                        }\n                        return output;\n                    }\n                    found = await dataBuffer.find(interest);\n                }\n                return found;\n            };\n        }\n        const face = this.fw.addFace({\n            duplex: flatTransform(concurrency, async function* ({ l3: interest, token }) {\n                if (!(interest instanceof Interest)) {\n                    return;\n                }\n                const data = await processInterest(interest).catch(() => undefined);\n                if (!data) {\n                    return;\n                }\n                yield FwPacket.create(data, token);\n            }),\n        }, {\n            describe,\n            local: true,\n            routeCapture,\n        });\n        if (prefix) {\n            face.addRoute(prefix, announcement);\n        }\n        const onAbort = () => {\n            face.close();\n            signal?.removeEventListener(\"abort\", onAbort);\n        };\n        signal?.addEventListener(\"abort\", onAbort);\n        producer = {\n            prefix,\n            face,\n            dataBuffer,\n            processInterest,\n            close: onAbort,\n        };\n        return producer;\n    }\n}\nexport async function signUnsignedData(data, dataSigner) {\n    if (dataSigner && data.sigInfo.type === SigType.Null) {\n        await dataSigner.sign(data);\n    }\n}\n","import { TT } from \"../an_browser.js\";\nimport { Component } from \"./component_browser.js\";\nimport { ImplicitDigest, ParamsDigest } from \"./digest-comp_browser.js\";\nimport { Name } from \"./name_browser.js\";\n/**\n * Functions to print and parse names in alternate/pretty URI syntax.\n *\n * This class is constructed with a sequence of NamingConventions. Each component is matched\n * against these conventions in order, and the first matching convention can determine how to\n * print that component in an alternate URI syntax, if available.\n *\n * Other than pre-constructed 'AltUri' instances exported by this and naming convention packages,\n * you may construct an instance with only the naming conventions you have adopted, so that a\n * component that happens to match a convention that your application did not adopt is not\n * mistakenly interpreted with that convention.\n */\nexport class AltUriConverter {\n    conventions;\n    constructor(conventions) {\n        this.conventions = conventions;\n    }\n    /** Print component in alternate URI syntax */\n    ofComponent = (comp) => {\n        for (const conv of this.conventions) {\n            if (conv.match(comp)) {\n                return conv.toAltUri(comp);\n            }\n        }\n        return comp.toString();\n    };\n    /** Print name in alternate URI syntax. */\n    ofName = (name) => `/${name.comps.map((comp) => this.ofComponent(comp)).join(\"/\")}`;\n    /** Parse component from alternate URI syntax */\n    parseComponent = (input) => {\n        for (const conv of this.conventions) {\n            const comp = conv.fromAltUri(input);\n            if (comp) {\n                return comp;\n            }\n        }\n        return Component.from(input);\n    };\n    /** Parse name from alternate URI syntax. */\n    parseName = (input) => new Name(input, this.parseComponent);\n}\nclass Generic {\n    match({ type }) { return type === TT.GenericNameComponent; }\n    create() { /* c8 ignore next */ throw new TypeError(\"not supported\"); }\n    parse() { /* c8 ignore next */ throw new TypeError(\"not supported\"); }\n    toAltUri(comp) { return comp.toString().slice(2); }\n    fromAltUri() { return undefined; }\n}\n/** Print Generic, ImplicitDigest, ParamsDigest in alternate URI syntax. */\nexport const AltUri = new AltUriConverter([\n    new Generic(),\n    ImplicitDigest,\n    ParamsDigest,\n]);\n","const DEFAULT_MTU = 1200;\n/**\n * Low-level transport.\n *\n * The transport understands NDN TLV structures, but does not otherwise concern with packet format.\n */\nexport class Transport {\n    attributes;\n    constructor(attributes) {\n        this.attributes = attributes;\n    }\n    /**\n     * Return the transport MTU, if known.\n     * The transport should be able to send TLV structure of up to this size.\n     */\n    get mtu() { return DEFAULT_MTU; }\n    /**\n     * Reopen the transport after it has failed.\n     * @returns the same transport or a new transport after it has been reconnected.\n     */\n    reopen() {\n        return Promise.reject(new Transport.ReopenNotSupportedError());\n    }\n    toString() {\n        /* c8 ignore next */\n        return this.attributes.describe ?? this.constructor.name;\n    }\n}\n(function (Transport) {\n    /**\n     * Error thrown by transport.reopen() to indicate that reopen operation is not supported.\n     * No further reopen() will be attempted.\n     */\n    class ReopenNotSupportedError extends Error {\n        constructor() {\n            super(\"reopen not supported\");\n        }\n    }\n    Transport.ReopenNotSupportedError = ReopenNotSupportedError;\n})(Transport || (Transport = {}));\n","import { TT as l3TT } from \"@ndn/packet\";\nexport const TT = {\n    LpPacket: 0x64,\n    LpPayload: 0x50,\n    LpSeqNum: 0x51,\n    FragIndex: 0x52,\n    FragCount: 0x53,\n    PitToken: 0x62,\n    Nack: l3TT.Nack,\n    NackReason: l3TT.NackReason,\n    CongestionMark: 0x0340,\n};\n","import { NackHeader } from \"@ndn/packet\";\nimport { Encoder, EvDecoder, NNI } from \"@ndn/tlv\";\nimport { asDataView } from \"@ndn/util\";\nimport { TT } from \"./an_browser.js\";\nfunction isCritical(tt) {\n    return !(tt >= 800 && tt <= 959 && tt % 4 === 0);\n}\nconst EVD = new EvDecoder(\"LpPacket\", TT.LpPacket)\n    .setIsCritical(isCritical)\n    .add(TT.LpSeqNum, (t, { value }) => t.fragSeqNum = asDataView(value).getBigUint64(0))\n    .add(TT.FragIndex, (t, { nni }) => t.fragIndex = nni)\n    .add(TT.FragCount, (t, { nni }) => t.fragCount = nni)\n    .add(TT.PitToken, (t, { value }) => t.pitToken = value)\n    .add(TT.Nack, (t, { decoder }) => t.nack = decoder.decode(NackHeader))\n    .add(TT.LpPayload, (t, { value }) => t.payload = value);\n/** NDNLPv2 packet. */\nexport class LpPacket {\n    static decodeFrom(decoder) {\n        return EVD.decode(new LpPacket(), decoder);\n    }\n    fragSeqNum;\n    fragIndex = 0;\n    fragCount = 1;\n    pitToken;\n    nack;\n    payload;\n    encodeTo(encoder) {\n        encoder.prependTlv(TT.LpPacket, this.fragSeqNum !== undefined && [TT.LpSeqNum, NNI(this.fragSeqNum, { len: 8 })], this.fragIndex > 0 && [TT.FragIndex, NNI(this.fragIndex)], this.fragCount > 1 && [TT.FragCount, NNI(this.fragCount)], ...this.encodeL3Headers(), [TT.LpPayload, Encoder.OmitEmpty, this.payload]);\n    }\n    encodeL3Headers() {\n        return [\n            [TT.PitToken, Encoder.OmitEmpty, this.pitToken],\n            this.nack,\n        ];\n    }\n    copyL3HeadersFrom(src) {\n        this.pitToken = src.pitToken;\n        this.nack = src.nack;\n    }\n}\n","import { Encoder } from \"@ndn/tlv\";\nimport { LpPacket } from \"./packet_browser.js\";\nclass SeqNumGen {\n    current = (BigInt(Math.trunc(Math.random() * 0x100000000)) << 32n) |\n        BigInt(Math.trunc(Math.random() * 0x100000000));\n    next() {\n        this.current = BigInt.asUintN(64, this.current + 1n);\n        return this.current;\n    }\n}\nconst OVERHEAD = 0 +\n    1 + 3 + // LpPacket TL\n    1 + 1 + 8 + // LpSeqNum\n    1 + 1 + 2 + // FragIndex\n    1 + 1 + 2 + // FragCount\n    1 + 3 + // LpPayload TL\n    0;\n/** NDNLPv2 fragmenter. */\nexport class Fragmenter {\n    seqNumGen = new SeqNumGen();\n    /**\n     * Fragment a packet.\n     * @returns a sequence of fragments, or empty array if fragmentation fails.\n     */\n    fragment(full, mtu) {\n        const fragmentRoom = mtu - OVERHEAD;\n        const sizeofL3Headers = Encoder.encode(full.encodeL3Headers()).length;\n        const sizeofPayload = full.payload?.byteLength ?? 0;\n        const sizeofFirstFragment = Math.min(sizeofPayload, fragmentRoom - sizeofL3Headers);\n        if (sizeofFirstFragment === sizeofPayload) { // no fragmentation necessary\n            return [full];\n        }\n        if (sizeofFirstFragment <= 0) { // MTU is too small for L3 headers, drop the packet\n            return [];\n        }\n        const fragments = [];\n        const first = new LpPacket();\n        first.copyL3HeadersFrom(full);\n        first.fragSeqNum = this.seqNumGen.next();\n        first.payload = full.payload.subarray(0, sizeofFirstFragment);\n        fragments.push(first);\n        for (let offset = sizeofFirstFragment; offset < sizeofPayload; offset += fragmentRoom) {\n            const fragment = new LpPacket();\n            fragment.fragSeqNum = this.seqNumGen.next();\n            fragment.fragIndex = fragments.length;\n            fragment.payload = full.payload.subarray(offset, offset + fragmentRoom);\n            fragments.push(fragment);\n        }\n        for (const fragment of fragments) {\n            fragment.fragCount = fragments.length;\n        }\n        return fragments;\n    }\n}\n","import { concatBuffers, evict } from \"@ndn/util\";\nimport { LpPacket } from \"./packet_browser.js\";\nclass PartialPacket {\n    seqNumBase;\n    constructor(seqNumBase) {\n        this.seqNumBase = seqNumBase;\n    }\n    buffer = [];\n    accepted = 0;\n    payloadLength = 0;\n    accept(fragment) {\n        if (this.accepted === 0) { // first\n            this.buffer.length = fragment.fragCount;\n            this.acceptOne(fragment);\n            return undefined;\n        }\n        if (fragment.fragCount !== this.buffer.length) { // mismatch\n            return false;\n        }\n        if (this.buffer[fragment.fragIndex]) { // duplicate\n            return undefined;\n        }\n        this.acceptOne(fragment);\n        if (this.accepted === this.buffer.length) {\n            return this.reassemble();\n        }\n        return undefined;\n    }\n    acceptOne(fragment) {\n        this.buffer[fragment.fragIndex] = fragment;\n        ++this.accepted;\n        this.payloadLength += fragment.payload?.length ?? 0;\n    }\n    reassemble() {\n        const full = new LpPacket();\n        full.copyL3HeadersFrom(this.buffer[0]);\n        const parts = [];\n        for (const fragment of this.buffer) {\n            const part = fragment?.payload;\n            if (part) {\n                parts.push(part);\n            }\n        }\n        full.payload = concatBuffers(parts, this.payloadLength);\n        return full;\n    }\n}\n/** NDNLPv2 reassembler. */\nexport class Reassembler {\n    capacity;\n    constructor(capacity) {\n        this.capacity = capacity;\n    }\n    partials = new Map();\n    /**\n     * Process a fragment.\n     * @returns fully reassembled packet, or undefined if packet is not yet complete.\n     */\n    accept(fragment) {\n        if (fragment.fragCount === 1) { // not fragmented\n            return fragment;\n        }\n        if (fragment.fragSeqNum === undefined ||\n            fragment.fragIndex >= fragment.fragCount) { // bad fragment\n            return undefined;\n        }\n        const seqNumBase = BigInt.asUintN(64, fragment.fragSeqNum - BigInt(fragment.fragIndex));\n        const partial = this.getPartial(seqNumBase);\n        const result = partial.accept(fragment);\n        if (result) {\n            return result;\n        }\n        if (result !== false) {\n            this.putPartial(partial);\n        }\n        return undefined;\n    }\n    getPartial(seqNumBase) {\n        const partial = this.partials.get(seqNumBase);\n        if (partial) {\n            this.partials.delete(seqNumBase);\n            return partial;\n        }\n        return new PartialPacket(seqNumBase);\n    }\n    putPartial(partial) {\n        this.partials.set(partial.seqNumBase, partial);\n        evict(this.capacity, this.partials);\n    }\n}\n","import { __importDefault, __importStar } from \"tslib\";\nimport { Data, Interest, Nack, TT as l3TT } from \"@ndn/packet\";\nimport { Decoder, Encoder, printTT } from \"@ndn/tlv\";\nimport { assert, flatMapOnce, toHex } from \"@ndn/util\";\nimport _cjsDefaultImport0 from \"it-keepalive\"; const itKeepAlive = __importDefault(_cjsDefaultImport0).default;\nimport { TT } from \"./an_browser.js\";\nimport { Fragmenter } from \"./fragmenter_browser.js\";\nimport { LpPacket } from \"./packet_browser.js\";\nimport { Reassembler } from \"./reassembler_browser.js\";\nconst IDLE = Encoder.encode(new LpPacket());\n/** NDNLPv2 service. */\nexport class LpService {\n    transport;\n    constructor({ keepAlive = 60000, mtu = Infinity, reassemblerCapacity = 16, }, transport) {\n        this.transport = transport;\n        if (Number.isFinite(keepAlive) && keepAlive > 0) {\n            this.keepAlive = Math.ceil(keepAlive);\n        }\n        this.mtu = mtu;\n        this.reassembler = new Reassembler(reassemblerCapacity);\n    }\n    keepAlive;\n    mtu;\n    fragmenter = new Fragmenter();\n    reassembler;\n    rx = (iterable) => flatMapOnce((tlv) => this.decode(tlv), iterable);\n    *decode(dtlv) {\n        const { type, decoder, tlv } = dtlv;\n        try {\n            if (type !== TT.LpPacket) {\n                yield this.decodeL3(dtlv);\n                return;\n            }\n            const fragment = decoder.decode(LpPacket);\n            const lpp = this.reassembler.accept(fragment);\n            if (!lpp?.payload) {\n                return;\n            }\n            const l3pkt = this.decodeL3(new Decoder(lpp.payload).read());\n            if (lpp.nack) {\n                if (l3pkt.l3 instanceof Interest) {\n                    l3pkt.l3 = new Nack(l3pkt.l3, lpp.nack);\n                }\n                else {\n                    throw new Error(\"Nack can only appear on Interest\");\n                }\n            }\n            l3pkt.token = lpp.pitToken;\n            yield l3pkt;\n        }\n        catch (err) {\n            yield new LpService.RxError(err, tlv);\n        }\n    }\n    decodeL3({ type, decoder }) {\n        switch (type) {\n            case l3TT.Interest: {\n                return { l3: decoder.decode(Interest) };\n            }\n            case l3TT.Data: {\n                return { l3: decoder.decode(Data) };\n            }\n            default: {\n                throw new Error(`unrecognized TLV-TYPE ${printTT(type)} as L3Pkt`);\n            }\n        }\n    }\n    tx = (iterable) => flatMapOnce((pkt) => this.encode(pkt), this.keepAlive ?\n        itKeepAlive(() => false, { timeout: this.keepAlive })(iterable) :\n        iterable);\n    *encode(pkt) {\n        if (pkt === false) {\n            yield IDLE;\n            return;\n        }\n        const mtu = Math.min(this.mtu, this.transport.mtu);\n        const { l3, token } = pkt;\n        const lpp = new LpPacket();\n        lpp.pitToken = token;\n        try {\n            if (l3 instanceof Interest || l3 instanceof Data) {\n                const payload = Encoder.encode(l3);\n                if (!token && payload.length <= mtu) {\n                    return yield payload;\n                }\n                lpp.payload = payload;\n            }\n            else {\n                assert(l3 instanceof Nack);\n                lpp.nack = l3.header;\n                lpp.payload = Encoder.encode(l3.interest);\n            }\n        }\n        catch (err) {\n            return yield new LpService.TxError(err, l3);\n        }\n        if (Number.isFinite(mtu)) {\n            yield* this.fragmenter.fragment(lpp, mtu).map((fragment) => Encoder.encode(fragment, mtu));\n        }\n        else {\n            yield Encoder.encode(lpp);\n        }\n    }\n}\n(function (LpService) {\n    class RxError extends Error {\n        packet;\n        constructor(inner, packet) {\n            super(`${inner.message} ${toHex(packet)}`);\n            this.packet = packet;\n        }\n    }\n    LpService.RxError = RxError;\n    class TxError extends Error {\n        packet;\n        constructor(inner, packet) {\n            super(`${inner.message} ${packet instanceof Nack ? packet.interest.name : packet.name}`);\n            this.packet = packet;\n        }\n    }\n    LpService.TxError = TxError;\n})(LpService || (LpService = {}));\n","export class AbortError extends Error {\n    constructor(message, code) {\n        super(message ?? 'The operation was aborted');\n        this.type = 'aborted';\n        this.code = code ?? 'ABORT_ERR';\n    }\n}\n//# sourceMappingURL=abort-error.js.map","/**\n * @packageDocumentation\n *\n * @example\n *\n * ```js\n * import { abortableSource } from 'abortable-iterator'\n *\n * async function main () {\n *   // An example function that creates an async iterator that yields an increasing\n *   // number every x milliseconds and NEVER ENDS!\n *   const asyncCounter = async function * (start, delay) {\n *     let i = start\n *     while (true) {\n *       yield new Promise(resolve => setTimeout(() => resolve(i++), delay))\n *     }\n *   }\n *\n *   // Create a counter that'll yield numbers from 0 upwards every second\n *   const everySecond = asyncCounter(0, 1000)\n *\n *   // Make everySecond abortable!\n *   const controller = new AbortController()\n *   const abortableEverySecond = abortableSource(everySecond, controller.signal)\n *\n *   // Abort after 5 seconds\n *   setTimeout(() => controller.abort(), 5000)\n *\n *   try {\n *     // Start the iteration, which will throw after 5 seconds when it is aborted\n *     for await (const n of abortableEverySecond) {\n *       console.log(n)\n *     }\n *   } catch (err) {\n *     if (err.code === 'ERR_ABORTED') {\n *       // Expected - all ok :D\n *     } else {\n *       throw err\n *     }\n *   }\n * }\n *\n * main()\n * ```\n */\nimport { AbortError } from './abort-error.js';\nimport { getIterator } from 'get-iterator';\n/**\n * Wrap an iterator to make it abortable, allow cleanup when aborted via onAbort\n */\nexport function abortableSource(source, signal, options) {\n    const opts = options ?? {};\n    const iterator = getIterator(source);\n    async function* abortable() {\n        let nextAbortHandler;\n        const abortHandler = () => {\n            if (nextAbortHandler != null)\n                nextAbortHandler();\n        };\n        signal.addEventListener('abort', abortHandler);\n        while (true) {\n            let result;\n            try {\n                if (signal.aborted) {\n                    const { abortMessage, abortCode } = opts;\n                    throw new AbortError(abortMessage, abortCode);\n                }\n                const abort = new Promise((resolve, reject) => {\n                    nextAbortHandler = () => {\n                        const { abortMessage, abortCode } = opts;\n                        reject(new AbortError(abortMessage, abortCode));\n                    };\n                });\n                // Race the iterator and the abort signals\n                result = await Promise.race([abort, iterator.next()]);\n                nextAbortHandler = null;\n            }\n            catch (err) {\n                signal.removeEventListener('abort', abortHandler);\n                // Might not have been aborted by a known signal\n                const isKnownAborter = err.type === 'aborted' && signal.aborted;\n                if (isKnownAborter && (opts.onAbort != null)) {\n                    // Do any custom abort handling for the iterator\n                    opts.onAbort(source);\n                }\n                // End the iterator if it is a generator\n                if (typeof iterator.return === 'function') {\n                    try {\n                        const p = iterator.return();\n                        if (p instanceof Promise) { // eslint-disable-line max-depth\n                            p.catch(err => {\n                                if (opts.onReturnError != null) {\n                                    opts.onReturnError(err);\n                                }\n                            });\n                        }\n                    }\n                    catch (err) {\n                        if (opts.onReturnError != null) { // eslint-disable-line max-depth\n                            opts.onReturnError(err);\n                        }\n                    }\n                }\n                if (isKnownAborter && opts.returnOnAbort === true) {\n                    return;\n                }\n                throw err;\n            }\n            if (result.done === true) {\n                break;\n            }\n            yield result.value;\n        }\n        signal.removeEventListener('abort', abortHandler);\n    }\n    return abortable();\n}\nexport function abortableSink(sink, signal, options) {\n    return (source) => sink(abortableSource(source, signal, options));\n}\nexport function abortableDuplex(duplex, signal, options) {\n    return {\n        sink: abortableSink(duplex.sink, signal, {\n            ...options,\n            onAbort: undefined\n        }),\n        source: abortableSource(duplex.source, signal, options)\n    };\n}\nexport { AbortError };\nexport { abortableSink as abortableTransform };\n//# sourceMappingURL=index.js.map","export function getIterator(obj) {\n    if (obj != null) {\n        if (typeof obj[Symbol.iterator] === 'function') {\n            return obj[Symbol.iterator]();\n        }\n        if (typeof obj[Symbol.asyncIterator] === 'function') {\n            return obj[Symbol.asyncIterator]();\n        }\n        if (typeof obj.next === 'function') {\n            return obj; // probably an iterator\n        }\n    }\n    throw new Error('argument is not an iterator or iterable');\n}\n//# sourceMappingURL=index.js.map","import { __importDefault, __importStar } from \"tslib\";\nimport { Forwarder, FwPacket } from \"@ndn/fw\";\nimport { LpService } from \"@ndn/lp\";\nimport { Interest } from \"@ndn/packet\";\nimport { asDataView, CustomEvent } from \"@ndn/util\";\nimport { abortableSource, AbortError as IteratorAbortError } from \"abortable-iterator\";\nimport { pushable } from \"it-pushable\";\nimport _cjsDefaultImport0 from \"retry\"; const retry = __importDefault(_cjsDefaultImport0).default;\nimport { consume, filter, map, pipeline } from \"streaming-iterables\";\nimport { TypedEventTarget } from \"typescript-event-target\";\nimport { Transport } from \"./transport_browser.js\";\n/** Network layer face for sending and receiving L3 packets. */\nexport class L3Face extends TypedEventTarget {\n    transport;\n    attributes;\n    lp;\n    rx;\n    wireTokenPrefix = Math.trunc(Math.random() * 0x10000);\n    get state() { return this.state_; }\n    set state(newState) {\n        if (newState === this.state_) {\n            return;\n        }\n        const evt = new L3Face.StateEvent(\"state\", newState, this.state_);\n        this.state_ = newState;\n        this.dispatchTypedEvent(\"state\", evt);\n        switch (newState) {\n            case L3Face.State.UP: {\n                this.dispatchTypedEvent(\"up\", new Event(\"up\"));\n                break;\n            }\n            case L3Face.State.DOWN: {\n                const err = this.lastError instanceof Error ?\n                    this.lastError :\n                    new Error(`${this.lastError ?? \"unknown error\"}`);\n                this.dispatchTypedEvent(\"down\", new CustomEvent(\"down\", { detail: err }));\n                this.lastError = undefined;\n                break;\n            }\n            case L3Face.State.CLOSED: {\n                this.dispatchTypedEvent(\"close\", new Event(\"close\"));\n                break;\n            }\n        }\n    }\n    state_ = L3Face.State.UP;\n    lastError;\n    rxSources = pushable({ objectMode: true });\n    reopenRetry;\n    constructor(transport, attributes = {}, lpOptions = {}) {\n        super();\n        this.transport = transport;\n        this.attributes = {\n            describe: `L3Face(${transport})`,\n            advertiseFrom: false,\n            ...transport.attributes,\n            ...attributes,\n        };\n        this.lp = new LpService(lpOptions, transport);\n        this.rx = this.makeRx();\n    }\n    async *makeRx() {\n        for await (const source of this.rxSources) {\n            try {\n                yield* this.rxTransform(source);\n                this.lastError = new Error(\"RX ending\");\n                this.state = L3Face.State.DOWN;\n            }\n            catch (err) {\n                if (!(err instanceof IteratorAbortError)) {\n                    this.lastError = err;\n                    this.state = L3Face.State.DOWN;\n                }\n            }\n        }\n    }\n    async *rxTransform(transportRx) {\n        yield* pipeline(() => transportRx, this.lp.rx, filter((pkt) => {\n            if (pkt instanceof LpService.RxError) {\n                this.dispatchTypedEvent(\"rxerror\", new CustomEvent(\"rxerror\", { detail: pkt }));\n                return false;\n            }\n            return true;\n        }), map(({ l3, token: wireToken }) => {\n            let internalToken;\n            if (l3 instanceof Interest) {\n                internalToken = wireToken;\n            }\n            else if (wireToken?.length === 6) {\n                const dv = asDataView(wireToken);\n                if (dv.getUint16(0) === this.wireTokenPrefix) {\n                    internalToken = dv.getUint32(2);\n                }\n            }\n            return FwPacket.create(l3, internalToken);\n        }));\n    }\n    txTransform(fwTx) {\n        return pipeline(() => fwTx, filter((pkt) => FwPacket.isEncodable(pkt)), map(({ l3, token: internalToken }) => {\n            let wireToken;\n            if (typeof internalToken === \"number\") {\n                wireToken = new Uint8Array(6);\n                const dv = asDataView(wireToken);\n                dv.setUint16(0, this.wireTokenPrefix);\n                dv.setUint32(2, internalToken);\n            }\n            else if (internalToken instanceof Uint8Array) {\n                wireToken = internalToken;\n            }\n            return { l3, token: wireToken };\n        }), this.lp.tx, filter((value) => {\n            if (value instanceof LpService.TxError) {\n                this.dispatchTypedEvent(\"txerror\", new CustomEvent(\"txerror\", { detail: value }));\n                return false;\n            }\n            return true;\n        }));\n    }\n    tx = async (iterable) => {\n        const txSourceIterator = this.txTransform(iterable)[Symbol.asyncIterator]();\n        const txSourceIterable = {\n            [Symbol.asyncIterator]: () => ({\n                next: () => txSourceIterator.next(),\n            }),\n        };\n        while (this.state !== L3Face.State.CLOSED) {\n            if (this.state === L3Face.State.DOWN) {\n                this.reopenTransport();\n            }\n            const abort = new AbortController();\n            const handleStateChange = () => abort.abort();\n            this.addEventListener(\"state\", handleStateChange, { once: true });\n            try {\n                const txSource = abortableSource(txSourceIterable, abort.signal);\n                if (this.state === L3Face.State.UP) {\n                    this.rxSources.push(abortableSource(this.transport.rx, abort.signal));\n                    await this.transport.tx(txSource);\n                }\n                else {\n                    await consume(txSource);\n                }\n                this.state = L3Face.State.CLOSED;\n            }\n            catch (err) {\n                if (!(err instanceof IteratorAbortError)) {\n                    this.lastError = err;\n                    this.state = L3Face.State.DOWN;\n                }\n            }\n            finally {\n                abort.abort();\n                this.removeEventListener(\"state\", handleStateChange);\n            }\n        }\n        this.reopenRetry?.stop();\n        this.rxSources.end();\n    };\n    reopenTransport() {\n        this.reopenRetry?.stop();\n        this.reopenRetry = retry.operation({\n            forever: true,\n            minTimeout: 100,\n            maxTimeout: 60000,\n            randomize: true,\n        });\n        this.reopenRetry.attempt(async () => {\n            try {\n                this.transport = await this.transport.reopen();\n            }\n            catch (err) {\n                if (!(err instanceof Transport.ReopenNotSupportedError)) {\n                    this.reopenRetry.retry(err);\n                }\n                return;\n            }\n            if (this.state === L3Face.State.CLOSED) {\n                // eslint-disable-next-line @typescript-eslint/no-empty-function\n                void this.transport.tx((async function* () { })()); // shutdown transport\n                return;\n            }\n            this.reopenRetry.stop();\n            this.state = L3Face.State.UP;\n        });\n    }\n}\n(function (L3Face) {\n    let State;\n    (function (State) {\n        State[State[\"UP\"] = 0] = \"UP\";\n        State[State[\"DOWN\"] = 1] = \"DOWN\";\n        State[State[\"CLOSED\"] = 2] = \"CLOSED\";\n    })(State = L3Face.State || (L3Face.State = {}));\n    class StateEvent extends Event {\n        state;\n        prev;\n        constructor(type, state, prev) {\n            super(type);\n            this.state = state;\n            this.prev = prev;\n        }\n    }\n    L3Face.StateEvent = StateEvent;\n    function makeCreateFace(createTransport) {\n        return (async (opts, ...args) => {\n            const created = await createTransport(...args);\n            const { fw = Forwarder.getDefault(), addRoutes, l3, lp, callback, } = opts;\n            const makeFace = (transport) => {\n                const l3face = new L3Face(transport, { advertiseFrom: false, ...l3 }, lp);\n                const fwFace = fw.addFace(l3face);\n                processAddRoutes(fwFace, addRoutes);\n                callback?.(transport, l3face, fwFace);\n                return fwFace;\n            };\n            return Array.isArray(created) ? created.map(makeFace) : makeFace(created);\n        });\n    }\n    L3Face.makeCreateFace = makeCreateFace;\n    function processAddRoutes(fwFace, addRoutes = [\"/\"]) {\n        for (const routeName of addRoutes) {\n            fwFace.addRoute(routeName);\n        }\n    }\n    L3Face.processAddRoutes = processAddRoutes;\n})(L3Face || (L3Face = {}));\n","import { __importDefault, __importStar } from \"tslib\";\nimport { L3Face, rxFromPacketIterable, Transport } from \"@ndn/l3face\";\nimport _cjsDefaultImport0 from \"event-iterator\"; const EventIterator = __importDefault(_cjsDefaultImport0).default;\nimport { binaryType, extractMessage, makeWebSocket } from \"./ws_browser.js\";\n/** WebSocket transport. */\nexport class WsTransport extends Transport {\n    sock;\n    opts;\n    rx;\n    highWaterMark;\n    lowWaterMark;\n    constructor(sock, opts) {\n        super({ describe: `WebSocket(${sock.url})` });\n        this.sock = sock;\n        this.opts = opts;\n        sock.binaryType = binaryType;\n        this.rx = rxFromPacketIterable(new EventIterator(({ push, stop }) => {\n            const handleMessage = (evt) => {\n                push(extractMessage(evt));\n            };\n            sock.addEventListener(\"message\", handleMessage);\n            sock.addEventListener(\"close\", stop);\n            return () => {\n                sock.removeEventListener(\"message\", handleMessage);\n                sock.removeEventListener(\"close\", stop);\n            };\n        }));\n        this.highWaterMark = opts.highWaterMark ?? 1024 * 1024;\n        this.lowWaterMark = opts.lowWaterMark ?? 16 * 1024;\n    }\n    close() {\n        this.sock.close();\n    }\n    get mtu() { return Infinity; }\n    tx = async (iterable) => {\n        try {\n            for await (const pkt of iterable) {\n                if (this.sock.readyState !== this.sock.OPEN) {\n                    throw new Error(`unexpected WebSocket.readyState ${this.sock.readyState}`);\n                }\n                this.sock.send(pkt);\n                if (this.sock.bufferedAmount > this.highWaterMark) {\n                    await this.waitForTxBuffer();\n                }\n            }\n        }\n        finally {\n            this.close();\n        }\n    };\n    waitForTxBuffer() {\n        return new Promise((resolve) => {\n            const timer = setInterval(() => {\n                if (this.sock.bufferedAmount <= this.lowWaterMark || this.sock.readyState !== this.sock.OPEN) {\n                    clearInterval(timer);\n                    resolve();\n                }\n            }, 100);\n        });\n    }\n    reopen() {\n        return WsTransport.connect(this.sock.url, this.opts);\n    }\n}\n(function (WsTransport) {\n    /**\n     * Create a transport and connect to remote endpoint.\n     * @param uri server URI or WebSocket object.\n     * @param opts other options.\n     */\n    function connect(uri, opts = {}) {\n        const { connectTimeout = 10000, signal, } = opts;\n        return new Promise((resolve, reject) => {\n            const sock = typeof uri === \"string\" ? makeWebSocket(uri) : uri;\n            if (sock.readyState === sock.OPEN) {\n                resolve(new WsTransport(sock, opts));\n                return;\n            }\n            let timeout; // eslint-disable-line prefer-const\n            const fail = (err) => {\n                clearTimeout(timeout);\n                sock.close();\n                reject(err);\n            };\n            timeout = setTimeout(() => fail(new Error(\"connectTimeout\")), connectTimeout);\n            const onabort = () => fail(new Error(\"abort\"));\n            signal?.addEventListener(\"abort\", onabort);\n            const onerror = (evt) => {\n                sock.close();\n                reject(new Error(evt.message));\n            };\n            sock.addEventListener(\"error\", onerror);\n            sock.addEventListener(\"open\", () => {\n                clearTimeout(timeout);\n                sock.removeEventListener(\"error\", onerror);\n                signal?.removeEventListener(\"abort\", onabort);\n                resolve(new WsTransport(sock, opts));\n            });\n        });\n    }\n    WsTransport.connect = connect;\n    /** Create a transport and add to forwarder. */\n    WsTransport.createFace = L3Face.makeCreateFace(connect);\n})(WsTransport || (WsTransport = {}));\n","export function makeWebSocket(uri) {\n    return new WebSocket(uri, []);\n}\nexport const binaryType = \"arraybuffer\";\nexport function extractMessage(evt) {\n    return new Uint8Array(evt.data);\n}\n","import { Decoder } from \"@ndn/tlv\";\nimport { safeIter } from \"@ndn/util\";\nexport async function* rxFromPacketIterable(iterable) {\n    for await (const pkt of safeIter(iterable)) {\n        const decoder = new Decoder(pkt);\n        let tlv;\n        try {\n            tlv = decoder.read();\n        }\n        catch {\n            continue;\n        }\n        yield tlv;\n    }\n}\n","import { connectToNetwork, connectToRouter } from \"@ndn/autoconfig\";\r\nimport { Endpoint } from \"@ndn/endpoint\";\r\nimport { AltUri, Interest, Name } from \"@ndn/packet\";\r\nimport { WsTransport } from \"@ndn/ws-transport\";\r\n\r\nasync function ping(evt) {\r\n  evt.preventDefault();\r\n  // Disable the submit button during function execution.\r\n  const $button = document.querySelector(\"#app_button\");\r\n  $button.disabled = true;\r\n\r\n  try {\r\n    // Construct the name prefix <user-input>+/ping\r\n    const prefix = new Name(document.querySelector(\"#app_prefix\").value);\r\n    const app = document.querySelector(\"#app_param\").value;\r\n    const $log = document.querySelector(\"#app_log\");\r\n    $log.textContent = `Check Data \\n${AltUri.ofName(prefix)}\\n`;\r\n\r\n    const endpoint = new Endpoint();\r\n    const encoder = new TextEncoder();\r\n    // Generate a random number as initial sequence number.\r\n    let seqNum = Math.trunc(Math.random() * 1e8);\r\n    for (let i = 0; i < 3; ++i) {\r\n      ++seqNum;\r\n      // Construct an Interest with prefix + seqNum.\r\n      const interest = new Interest();\r\n      interest.name = prefix;\r\n      interest.mustBeFresh = true; \r\n      interest.lifetime = 1000;\r\n      interest.appParameters = encoder.encode(app);\r\n      $log.textContent += `\\n${encoder.encode(app)}\\n`;\r\n      const t0 = Date.now();\r\n      await interest.updateParamsDigest();\r\n      try {\r\n        // Retrieve Data and compute round-trip time.\r\n        const data = await endpoint.consume(interest);\r\n        const rtt = Date.now() - t0;\r\n        const dataContent = data.content;\r\n        //console.log(dataContent);\r\n        $log.textContent += `${AltUri.ofName(data.name)} rtt= ${rtt}ms content= ${String.fromCharCode(...dataContent)}\\n`;\r\n        console.log(`${rtt} ms`);\r\n      } catch(err) {\r\n        // Report Data retrieval error.\r\n        $log.textContent += `\\n${AltUri.ofName(interest.name)} ${err}`;\r\n      }\r\n\r\n      // Delay 500ms before sending the next Interest.\r\n      await new Promise((r) => setTimeout(r, 500));\r\n    }\r\n  } finally {\r\n    // Re-enable the submit button.\r\n    $button.disabled = false;\r\n  }\r\n}\r\n\r\nasync function main() {\r\n  // Connect to the global NDN network in one line.\r\n  // This function queries the NDN-FCH service, and connects to the nearest router.\r\n  //await WsTransport.createFace({}, \"wss://ndn-ehealth.australiaeast.cloudapp.azure.com\");\r\n  const face = await WsTransport.createFace({}, \"wss://scbe.ndntel-u.my.id:9696\");\r\n  //await WsTransport.createFace({}, \"wss://20.92.254.187:9696/\");\r\n  //await WsTransport.createFace({}, \"wss://104.21.31.135:9696/\");\r\n  face.addRoute(new Name(\"/\"));\r\n  //await connectToRouter(\"wss://192.168.56.106:9696/ws/\", {});\r\n  //await WsTransport.createFace({}, \"wss://testbed-ndn-rg.stei.itb.ac.id/ws/\");\r\n  //await WsTransport.createFace({}, \"ws://192.168.56.111:9696/ws/\");\r\n  //await WsTransport.createFace({}, \"ws://coba.ndntel-u.my.id/ws/\");\r\n\r\n  // Enable the form after connection was successful.\r\n  document.querySelector(\"#app_button\").disabled = false;\r\n  document.querySelector(\"#app_form\").addEventListener(\"submit\", ping);\r\n}\r\n\r\nwindow.addEventListener(\"load\", main);"],"names":["exports","__esModule","derivedCtor","baseCtors","forEach","baseCtor","Object","getOwnPropertyNames","prototype","name","module","a","b","compare","x","length","y","i","len","Math","min","defineProperty","value","event_iterator_1","EventIterator","subscribe","event","options","evOptions","push","this","addEventListener","removeEventListener","EventQueue","constructor","pullQueue","pushQueue","eventHandlers","isPaused","isStopped","resolution","done","placeholder","shift","resolve","Promise","undefined","highWaterMark","highWater","console","warn","stop","remove","fail","error","reject","rejection","catch","then","removeCallback","Symbol","asyncIterator","next","result","lowWaterMark","lowWater","return","listen","queue","on","fn","freeze","getIterator","KEEP_ALIVE","getKeepAliveValue","source","sourceNext","timer","timeout","setTimeout","race","clearTimeout","shouldKeepAlive","obj","iterator","Error","assert","val","msg","equal","l","r","DefaultMap","factory","items","Map","size","clear","get","key","set","peek","has","delete","deleted","callback","scope","arguments","entries","keys","values","inspect","for","autoIncrement","DefaultWeakMap","WeakMap","RetryOperation","operation","timeouts","forever","retries","Infinity","unref","maxRetryTime","Array","concat","opts","factor","minTimeout","maxTimeout","randomize","createTimeout","sort","attempt","random","round","max","pow","wrap","methods","method","original","op","args","slice","call","pop","err","retry","mainError","apply","bind","_originalTimeouts","JSON","parse","stringify","_timeouts","_options","_maxRetryTime","_fn","_errors","_attempts","_operationTimeout","_operationTimeoutCb","_timeout","_operationStart","_timer","_cachedTimeouts","reset","currentTime","Date","getTime","unshift","splice","self","timeoutOps","cb","try","log","start","errors","attempts","counts","mainErrorCount","message","count","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","__importDefault","mod","default","create","SuppressedError","e","EventTarget","dispatchTypedEvent","s","t","super","dispatchEvent","INT2HEX","toString","padStart","toUpperCase","HEX2INT","ch","toLowerCase","toHex","buf","fromHex","Uint8Array","TABLE","textEncoder","TextEncoder","textDecoder","TextDecoder","fromUtf8","decode","asDataView","T","ArrayBuffer","buffer","byteOffset","byteLength","asArrayBufferView","DataView","Nni1","n","encodeTo","encoder","prependRoom","Nni2","setUint16","Nni4","setUint32","Nni8Number","dv","Nni8Big","setBigUint64","decode32","getUint8","getUint16","getUint32","EncodeNniClass","NNI","unsafe","Number","RangeError","MAX_SAFE_INTEGER","isValidLength","big","getBigUint64","BigInt","isSafeInteger","constrain","typeName","limit0","limit1","trunc","DecodedTlv","type","offsetT","offsetV","offsetE","subarray","tlv","decoder","Decoder","vd","nni","nniBig","text","before","after","input","eof","offset","read","readVarNum","d","decodeFrom","sizeofVarNum","writeVarNum","room","off","Encoder","output","initSize","sizeofObject","grow","prependTypeLength","tlvType","tlvLength","sizeofT","sizeofL","prependValue","tlvValue","encode","prependTlv","omitEmpty","hasOmitEmpty","OmitEmpty","sizeBefore","isArray","sizeofRoom","sizeofGrowth","initBufSize","extract","bufferCompare","checkType","isInteger","CHAR_ENCODE","String","fromCodePoint","test","CODEPOINT_PERCENT","codePointAt","CODEPOINT_PERIOD","Component","from","posValue","posEqual","indexOf","iType","parseInt","hasNonPeriods","arg1","assertType","is","convention","match","as","other","sign","equals","CompareResult","EQUAL","Name","comps","parseComponent","value_","uri","replace","split","filter","comp","map","valueEncoderBufSize","uri_","hex_","valueHex","at","join","begin","end","getPrefix","append","suffix","replaceAt","commonSize","cmp","comparePrefix","RPREFIX","LPREFIX","isPrefixOf","isNameLike","KeyMap","keyOf","m","KeyMultiMap","size_","dimension","list","Set","add","c","associations","KeyMultiSet","multiplicities","nameOrHex","NameMap","NameMultiMap","NameMultiSet","printTT","isCritical","tt","EvDecoder","topTT","rules","requiredTT","nextOrder","unknownHandler","beforeObservers","afterObservers","order","required","repeat","evd","target","setIsCritical","setUnknown","topTlv","includes","decodeV","decodeValue","currentOrder","foundTT","missingTT","rule","handleUnrecognized","reason","globalThis","crypto","subtle","isSecureContext","configurable","CustomEvent","async","sha256","digest","EVD","FwHint","delegations","arg","FIELDS","definePublicFields","typ","fieldDefs","field","clearing","enumerable","v","f","DigestComp","altUriPrefix","altUriRegex","RegExp","toAltUri","fromAltUri","exec","ImplicitDigest","strip","PARAMS_PLACEHOLDER_TAG","ParamsDigest","PLACEHOLDER","assign","isPlaceholder","findIn","matchPlaceholder","findIndex","KeyLocator","isCtorArg","mustGetName","kl","RECORDS","Extensible","Extension","TAG","cloneRecord","dst","src","EXTENSIONS","table","registerExtension","ext","unregisterExtension","decodeUnknown","record","fields","keyLocator","nonce","time","seqNum","SigInfo","klArgs","ctorAssign","encodeAs","LLSign","LLVerify","Signer","Verifier","generateNonce","getRandomValues","Nonce","si","Time","now","SeqNum","OP","putSigInfo","pkt","sigType","sigInfo","checkSigType","expectedSigType","throwOnBadSig","ok","Fields","fwHint","appParameters","Interest","canBePrefix","mustBeFresh","nonce_","lifetime","lifetime_","DefaultLifetime","hopLimit","hopLimit_","sigValue","paramsPortion","signedPortion","signedPart0","signedPart1","interest","encodeParamsPortion","w","appendParamsDigestPlaceholder","updateParamsDigest","pdIndex","validateParamsDigest","requireAppParameters","pdComp","verify","CanBePrefix","MustBeFresh","Lifetime","HopLimit","makeModifyFunc","patch","isFinalBlock","content","Data","FinalBlock","contentType","contentType_","freshnessPeriod","freshnessPeriod_","finalBlockId","topTlvDigest","data","encodeSignedPortion","getImplicitDigest","computeImplicitDigest","getFullName","computeFullName","canSatisfy","isCacheLookup","fullName","clearingFields","ContentType","FreshnessPeriod","NackHeader","reason_","Nack","header","safeIter","iterable","onError","flatMapOnce","item","pDefer","deferred","promise","FixedFIFO","mask","top","btm","hwm","last","isEmpty","FIFO","head","tail","splitLimit","calculateSize","prev","AbortError","code","pushable","getNext","onNext","ended","onEnd","drain","bufferNext","objectMode","bufferError","queueMicrotask","throw","readableLength","onEmpty","signal","throwIfAborted","cancel","listener","_pushable","consume","_val","_consume","_filter","filterFunc","curriedIterable","flatten","maybeItr","_map","func","flatMap","_flatTransform","concurrency","TypeError","resultQueue","readQueue","reading","inflightCount","lastError","fulfillReadQueue","fillQueue","itrValue","asyncVal","mapAndQueue","asyncIterableIterator","resolveFunc","rejectFunc","defer","flatTransform","curriedFunc","pipeline","firstFn","fns","previousFn","_reduce","nextItem","reduce","curriedStart","_asyncTap","tap","computeAnnouncement","announcement","FaceImpl","fw","rxtx","attributes","routes","announcements","running","txQueue","local","advertiseFrom","routeCapture","Forwarder","FaceEvent","faces","txLoop","dispatchPacketEvent","rxtxD","duplex","rxtxS","tx","rx","duplexFromRxTx","rxLoop","handleLowerUp","handleLowerDown","close","fib","readvertise","removeAnnouncement","Event","describe","hasRoute","nameInput","addRoute","PrefixEvent","insert","ann","addAnnouncement","removeRoute","send","l3","processData","processNack","FibEntry","nexthops","Fib","face","nameHex","capture","entry","lookup","prefixes","lpm","prefixHex","nh","FwPacket","toFixed","startedAt","seconds","milliseconds","ms","microseconds","us","nanoseconds","ns","process","hrtime","window","performance","token","isEncodable","RejectInterest","CancelInterest","getNow","PitEntry","pit","dnRecords","nRx","expire","lastExpire","expireTimer","receiveInterest","dnR","updateExpire","cancelInterest","forwardInterest","returnData","up","eraseEntry","dn","insertEntry","Pit","dataNoTokenMatch","byName","byToken","lastToken","generateToken","canInsert","satisfy","findPotentialMatches","dnToken","keySuffixes","prefix","keySuffix","Readvertise","destinations","AnnouncementEvent","dest","advertise","withdraw","disable","ReadvertiseDestination","retryOptions","closed","enable","status","Status","WITHDRAWING","ADVERTISING","state","makeState","restart","doAdvertise","ADVERTISED","doWithdraw","WITHDRAWN","defaultInstance","DefaultOptions","ForwarderImpl","getDefault","replaceDefault","deleteDefault","PacketEvent","packet","nodeNames","maybeHaveEventListener","superAddEventListener","trackEventListener","addFace","pickInterestForwardingName","fhName","every","nodeName","processInterest","pi","fwName","nack","makeRetxGenerator","policy","limit","interestLifetime","interval","backoff","jitter","distance","randomJitter","nextInterval","applyMixins","Endpoint","interestInput","modifyInterest","retx","verifier","nRetx","retxGen","cancelRetx","sendInterest","onAbort","defineProperties","produce","prefixInput","handler","dataSigner","dataBuffer","autoBuffer","producer","processInterestUnbuffered","signUnsignedData","found","find","deleteDefaultForwarder","AltUri","conventions","ofComponent","conv","ofName","parseName","Transport","mtu","reopen","ReopenNotSupportedError","fragSeqNum","fragIndex","fragCount","pitToken","payload","LpPacket","encodeL3Headers","copyL3HeadersFrom","SeqNumGen","current","asUintN","Fragmenter","seqNumGen","fragment","full","fragmentRoom","sizeofL3Headers","sizeofPayload","sizeofFirstFragment","fragments","first","PartialPacket","seqNumBase","accepted","payloadLength","accept","acceptOne","reassemble","parts","part","totalLength","concatBuffers","Reassembler","capacity","partials","partial","getPartial","putPartial","ct","evict","itKeepAlive","IDLE","LpService","transport","keepAlive","reassemblerCapacity","isFinite","ceil","reassembler","fragmenter","dtlv","decodeL3","lpp","l3pkt","RxError","TxError","inner","abortableSource","nextAbortHandler","abortHandler","aborted","abortMessage","abortCode","abort","isKnownAborter","p","onReturnError","returnOnAbort","abortable","L3Face","lp","wireTokenPrefix","state_","newState","evt","StateEvent","State","UP","DOWN","detail","CLOSED","rxSources","reopenRetry","lpOptions","makeRx","rxTransform","transportRx","wireToken","internalToken","txTransform","fwTx","txSourceIterator","txSourceIterable","reopenTransport","AbortController","handleStateChange","once","txSource","processAddRoutes","fwFace","addRoutes","routeName","makeCreateFace","createTransport","created","makeFace","l3face","WsTransport","sock","url","binaryType","rxFromPacketIterable","handleMessage","extractMessage","readyState","OPEN","bufferedAmount","waitForTxBuffer","setInterval","clearInterval","connect","ping","preventDefault","$button","document","querySelector","disabled","app","$log","textContent","endpoint","t0","rtt","dataContent","fromCharCode","connectTimeout","WebSocket","makeWebSocket","onabort","onerror","createFace"],"sourceRoot":""}